{"version":3,"sources":["config.js","servername.js","views/content/svg/logo.svg","reportWebVitals.js","views/content/svg/student.svg","views/js/global/Nav.js","views/js/global/Footer.js","views/js/home/PostJobs.js","views/js/home/SeachJobs.js","views/content/svg/recruitment.svg","views/content/svg/jobsearch.svg","views/js/home/Home.js","views/content/images/auth-img.jpg","views/content/svg/professor.svg","views/content/svg/company.svg","models/user_sign_in.js","views/js/auth/Signin.js","models/register_user.js","views/js/auth/Signup.js","views/js/global/SubNav.js","views/js/auth/Auth.js","views/js/auth/Redirect.js","views/js/search/student/StudentFilters.js","views/js/global/DefaultImage.js","models/POST/Professors/professor_rate.js","views/js/forms/Rating.js","views/content/gif/sent.gif","views/js/forms/Hire.js","models/POST/Employers/insert_hire.js","views/js/search/student/StudentCard.js","views/js/search/SearchBar.js","models/GET/Students/student_cards.js","views/js/search/student/StudentSearch.js","views/js/search/jobs/JobFilters.js","views/content/svg/location-icon.svg","views/content/svg/demo-card-profile.svg","models/POST/Students/insert_student_apply.js","views/js/search/jobs/JobCard.js","models/GET/Jobs/job_cards.js","views/js/search/jobs/JobSearch.js","views/js/about/MemberCard.js","views/content/images/Joses-Selfie.JPG","views/content/images/aaron-pic.jpg","views/content/images/Lyra.jpg","views/content/images/Roland.JPG","views/js/about/About.js","views/js/help/Help.js","models/DELETE/delete_job.js","models/PUT/Students/update_ratings_notification.js","views/js/profiles/company/CompanyProfile.js","models/GET/Students/rating_notifications.js","models/GET/Students/student_info.js","models/GET/user_profile.js","views/js/notifications/Notification.js","views/js/about/MemberPage.js","views/content/svg/edit-icon.svg","views/content/svg/add-icon.svg","views/content/svg/project-icon.svg","views/content/svg/experience-icon.svg","views/content/svg/education-icon.svg","models/PUT/Students/update_about.js","views/js/forms/Description.js","models/POST/Students/insert_student_education.js","views/js/forms/Education.js","models/POST/Students/insert_student_experience.js","views/js/forms/Experience.js","models/PUT/Students/update_qualities.js","views/js/forms/List.js","models/PUT/Students/update_location.js","views/js/forms/Location.js","models/POST/Students/insert_student_projects.js","views/js/forms/Project.js","models/POST/Students/insert_student_profile.js","views/js/profiles/student/StudentProfile.js","views/js/profiles/professor/ProfessorProfile.js","views/content/svg/globe-icon.svg","views/content/svg/linkedin-icon.svg","views/js/user/Dashboard.js","models/POST/Employers/insert_job.js","views/js/profiles/company/PostJobs.js","views/content/svg/arrow.svg","views/js/search/student/PublicStudentProfile.js","models/GET/Jobs/job_view.js","views/js/search/jobs/JobView.js","App.js","index.js"],"names":["PORT_HOST","require","SERVER","module","exports","_path","_g","_defs","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgLogo","_ref","svgRef","title","titleId","props","width","height","viewBox","fill","xmlns","ref","id","d","filter","opacity","x","y","filterUnits","colorInterpolationFilters","floodOpacity","result","in","type","values","dx","dy","stdDeviation","mode","in2","_rect","ForwardRef","DefaultNav","history","useHistory","useCookies","cookie","removeCookie","Type_User","Navbar","collapseOnSelect","expand","className","Brand","to","Toggle","aria-controls","Collapse","Nav","NavDropdown","Item","DropdownButton","First_Name","variant","Dropdown","href","onClick","push","window","location","reload","bg","Footer","icon","baselineCopyright","PostJobs","style","maxWidth","Button","size","e","preventDefault","Home","src","JobSearch","alt","Recruitment","SvgStudent","rx","clipPath","transform","SvgProfessor","SvgCompany","API_USER_LOG_IN","email","password","usertype","a","headers","method","credentials","fetch","response","json","confirmation","Signin","useState","setEmail","userType","setUserType","handleSubmit","event","value","bool_user_auth","alert","Form","onSubmit","Row","Col","name","Control","placeholder","required","Group","Text","code","cryptoRandomString","replace","substr","Signup","setValidated","inputName","setInputName","firstName","setFirstName","lastName","setLastName","setPassword","FORM_REQUEST","schoolname","currentTarget","checkValidity","stopPropagation","jsonPOST","console","log","JSON","stringify","API_SEND_EMAIL","API_REGISTER_USER","as","md","onChange","Feedback","Check","label","feedback","SubNav","Auth","AuthType","img","Redirect","StudentFilters","addFilterHandler","addSchoolYearHandler","activeFilters","setActiveFilters","schoolYear","setSchoolYear","gpa","strength","setStrength","setGPA","rating","setRating","map","localeCompare","checked","Accordion","defaultActiveKey","Card","Header","eventKey","Body","s","Data","program","field","InputGroup","aria-label","aria-describedby","min","max","Append","defaultImage","canvas","document","createElement","context","getContext","strokeStyle","fillStyle","lineWidth","beginPath","arc","Math","PI","stroke","textBaseline","textAlign","font","fillText","charAt","toDataURL","API_PROFESSOR_RATE_STUDENT","s_id","p_id","res_int","tea_int","lead_int","cts_int","res_string","rt_total","REQUEST_QUERY","Rating","recommendation","setRecommendation","responsible","setResponsible","teamwork","setTeamWork","leadership","setLeadership","committedToSuccess","setCommittedToSuccess","student","professor","sent_bool","Modal","aria-labelledby","centered","closeButton","Title","Label","controlId","Hire","sent","setHirePopup","API_INSERT_STUDENT_ALERT","Employer_Hire","Accept","body","status","StudentCard","image","studentName","schoolName","studentEnrollment","major","studentID","about","ratingPopup","setRatingPopup","hirePopup","ProgressBar","now","justifyContent","show","onHide","replaceAll","ID_OF_USER","user","SearchBar","keywordFilterHandler","setKeyword","class","Prepend","API_FETCH_STUDENTS","setArr","data","StudentSearch","dbStudents","setdbStudents","results","setResults","keyword","useEffect","first_name","toLowerCase","last_name","study_major","school","school_grade_level","parseInt","school_gpa","rating_total","year","start_year","about_me","student_id","JobFilters","addEmployementType","employementType","setEmployementType","salary","setSalary","API_INSERT_STUDENT_APPLICATION","Student_Application","JobCard","Listing_ID","Employer_ID","PositionTitle","CompanyName","Income","AboutUs","JobType","Location","Apply_Job","Student_ID","employer_id","listing_id","paddingBottom","marginRight","marginTop","String","slice","LocationIcon","Redirect_Job_View","trigger","API_JOB_LISTINGS_FETCH","dbJobListings","setdbJobListings","jobs","organization_name","position_title","job_type","job","Salary","about_us","MemberCard","member","fullname","role","About","desc","LyraSelfie","JoseSelfie","AaronSelfie","RolandSelfie","members","pathname","state","Help","API_REMOVE_JOB","header","API_UPDATE_STUDENT_RATING_NOTIFICATION","reflection_id","table","CompanyProfile","activeComponent","setActiveComponent","null","userProfilee","setUserProfilee","removeJob","seenNotification","compalert_id","converter","dataitem","t","split","Date","UTC","toString","Employer_Information","Employer_Jobs_Openings","experience_years","skillset","task_responsibilities","the_opportunity","hireB","ListingID","company_alert","Employer_Find_Candidates","active","hidden","time","school_name","onOpen","onClose","item","fontWeight","API_STUDENT_RATING_NOTIFICATIONS","setHiredNotification","student_identifier","dataHired","dataHired_response","API_FIND_CANDIDATE","tempArr","concat","API_USER_GET_PROFILE","typeUser","idr","setState","uniqueList","output","Array","from","Set","Promise","all","Notifications","setRatingNotifications","setHiredNotifications","setuserProfile","ratingNotifications","hiredNotifications","userProfile","unseen_notifications","row","student_seen","student_hide","publish_date","stualert_id","MemberPage","API_UPDATE_STUDENT_ABOUT_ME","Description","userID","rows","defaultValue","API_STUDENT_INSERT_EDUCATION","Student_Education","Education","degree","end_year","education","setEducation","popupName","startYear","endYear","API_STUDENT_INSERT_EXPERIENCE","Student_Experience","Experience","company_name","date_end","date_start","description_experience","employement_type","experience_title_position","arr_work_done_keywords","experience","setExperience","company","position","description","keywords","dateStart","dateEnd","API_UPDATE_QUALITIES","qualities","List","empty","str","allQualities","API_SUDENT_UPDATE_LIST","StudentID","paddingLeft","quality","API_UPDATE_STUDENT_LOCATION","setLocation","API_STUDENT_UPDATE_LOCATION","API_STUDENT_INSERT_PROJECTS","Student_Projects","Project","project_name","summary","arr_tools_used","links_website","arr_collaborators_arr","project","setProject","Response","scrollable","website","collaborators","maxLength","tools","API_STUDENT_INSERT_PROFILE","Student_Profile_Page","StudentProfile","strengths_qualities","newUser","setNewUser","setUserProfile","setQualities","aboutPopup","setAboutPopup","listPopup","setListPopup","addProject","setAddProject","addEducation","setAddEducation","addExperience","setAddExperience","margin","EditIcon","heading","AddIcon","ProjectIcon","collaborator","tool","backgroundColor","EducationIcon","ExperienceIcon","review","recommendation_comment","committed_to_success_level","leadership_level","responsible_level","team_work_level","ProfessorProfile","classname","Dashboard","API_EMPLOYER_INSERT_JOB","JobListings","experience_levels","task_responsibilites","benefits","landing_image","newJob","setNewJob","padding","PublicStudentProfile","Arrow","profile_image","API_JOB_LISTING_VIEW","identifier","JobView","dbJob","setdbJob","fetchMyAPI","experience_level","skill","benefit","DefaultContainer","exact","path","component","PublicProfile","JobPost","Profile","App","Alert","zIndex","paddingTop","SignupRedirect","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ad337cd9.chunk.js","sourcesContent":["/**\n * File: frontend/src/config.js\n * Purpose: Returns correct server location across testing and prod environments\n * Author(s): Lyra\n **/\nconst servername = require('./servername');\nconst AWS_PORT = `http://3.141.216.125:5000`;\nconst LOCAL_PORT = `http://localhost:5000`;\n\nconst PORT_HOST = servername.SERVER === 'ubuntu' ? AWS_PORT : LOCAL_PORT;\n\nmodule.exports = {\n  PORT_HOST,\n};\n","const SERVER = \"ubuntu\";\nmodule.exports = { SERVER };\n","var _path, _g, _defs;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgLogo(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 154,\n    height: 39,\n    viewBox: \"0 0 154 39\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M9.624 12.2C11.7573 12.2 13.528 13.0107 14.936 14.632C16.3653 16.2533 17.08 18.2373 17.08 20.584V26.216C17.08 26.7067 17.0587 27.08 17.016 27.336C16.9947 27.5707 16.8987 27.848 16.728 28.168C16.4507 28.7227 15.6293 29 14.264 29C12.9627 29 12.152 28.7227 11.832 28.168C11.6613 27.848 11.5547 27.56 11.512 27.304C11.4907 27.048 11.48 26.664 11.48 26.152V20.552C11.48 19.6773 11.2347 18.9947 10.744 18.504C10.2533 18.0133 9.624 17.768 8.856 17.768C8.10933 17.768 7.448 18.0027 6.872 18.472C6.296 18.92 5.96533 19.432 5.88 20.008V26.216C5.88 26.7067 5.85867 27.08 5.816 27.336C5.79467 27.5707 5.69867 27.848 5.528 28.168C5.25067 28.7227 4.42933 29 3.064 29C1.72 29 0.898667 28.712 0.6 28.136C0.450667 27.816 0.354667 27.5387 0.312 27.304C0.290667 27.0693 0.28 26.696 0.28 26.184V7.048C0.28 6.55733 0.290667 6.19467 0.312 5.96C0.354667 5.704 0.450667 5.42666 0.6 5.128C0.898667 4.552 1.73067 4.264 3.096 4.264C4.44 4.264 5.25067 4.552 5.528 5.128C5.69867 5.448 5.79467 5.736 5.816 5.992C5.85867 6.22667 5.88 6.58933 5.88 7.08V14.152C6.94667 12.8507 8.19467 12.2 9.624 12.2ZM30.599 13.928C30.727 12.7333 31.5697 12.136 33.127 12.136C33.959 12.136 34.5777 12.2 34.983 12.328C35.3883 12.456 35.6657 12.68 35.815 13C35.9857 13.32 36.0817 13.608 36.103 13.864C36.1457 14.0987 36.167 14.4613 36.167 14.952V26.152C36.167 26.6427 36.1457 27.016 36.103 27.272C36.0817 27.5067 35.9963 27.784 35.847 28.104C35.5483 28.6587 34.8123 28.936 33.639 28.936C32.487 28.936 31.7083 28.7973 31.303 28.52C30.919 28.2213 30.695 27.7947 30.631 27.24C29.8417 28.3707 28.519 28.936 26.663 28.936C24.8283 28.936 23.1217 28.0933 21.543 26.408C19.9643 24.7227 19.175 22.7707 19.175 20.552C19.175 18.312 19.9643 16.36 21.543 14.696C23.143 13.0107 24.8923 12.168 26.791 12.168C27.5163 12.168 28.1777 12.296 28.775 12.552C29.3723 12.808 29.7883 13.0533 30.023 13.288C30.2577 13.5013 30.4497 13.7147 30.599 13.928ZM24.775 20.584C24.775 21.288 25.0523 21.928 25.607 22.504C26.1617 23.0587 26.8337 23.336 27.623 23.336C28.4123 23.336 29.063 23.048 29.575 22.472C30.1083 21.896 30.375 21.2667 30.375 20.584C30.375 19.88 30.119 19.2293 29.607 18.632C29.1163 18.0347 28.4443 17.736 27.591 17.736C26.759 17.736 26.0763 18.0347 25.543 18.632C25.031 19.2293 24.775 19.88 24.775 20.584ZM48.5095 17.8L46.4295 17.672V22.088C46.4295 22.664 46.5148 23.08 46.6855 23.336C46.8775 23.592 47.2188 23.72 47.7095 23.72C48.2215 23.72 48.6055 23.7413 48.8615 23.784C49.1388 23.8053 49.4268 23.9013 49.7255 24.072C50.2162 24.3493 50.4615 25.064 50.4615 26.216C50.4615 27.56 50.1628 28.3813 49.5655 28.68C49.2455 28.8293 48.9575 28.9253 48.7015 28.968C48.4668 28.9893 48.1148 29 47.6455 29C45.4268 29 43.7415 28.4987 42.5895 27.496C41.4375 26.4933 40.8615 24.7973 40.8615 22.408V17.672C40.4562 17.736 40.0188 17.768 39.5495 17.768C39.0802 17.768 38.6855 17.5867 38.3655 17.224C38.0668 16.8613 37.9175 16.2427 37.9175 15.368C37.9175 14.4933 37.9708 13.864 38.0775 13.48C38.1842 13.0747 38.3335 12.7867 38.5255 12.616C38.8668 12.3387 39.2935 12.2 39.8055 12.2L40.8615 12.328V9.032C40.8615 8.54133 40.8722 8.17867 40.8935 7.944C40.9362 7.70933 41.0428 7.45333 41.2135 7.176C41.4908 6.64267 42.3122 6.376 43.6775 6.376C45.1282 6.376 45.9922 6.77067 46.2695 7.56C46.3762 7.90133 46.4295 8.44533 46.4295 9.192V12.328C47.3682 12.2427 48.0722 12.2 48.5415 12.2C49.0322 12.2 49.3948 12.2213 49.6295 12.264C49.8855 12.2853 50.1735 12.3813 50.4935 12.552C51.0482 12.8293 51.3255 13.6507 51.3255 15.016C51.3255 16.36 51.0375 17.1813 50.4615 17.48C50.1415 17.6293 49.8535 17.7253 49.5975 17.768C49.3628 17.7893 49.0002 17.8 48.5095 17.8ZM57.7475 20.584C57.7475 21.48 58.0462 22.184 58.6435 22.696C59.2408 23.1867 59.8702 23.432 60.5315 23.432C61.2142 23.432 61.8435 23.24 62.4195 22.856C63.0168 22.4507 63.4968 22.248 63.8595 22.248C64.4995 22.248 65.2782 22.8133 66.1955 23.944C66.6862 24.5627 66.9315 25.1173 66.9315 25.608C66.9315 26.4187 66.3448 27.176 65.1715 27.88C63.9555 28.7333 62.4622 29.16 60.6915 29.16C58.7075 29.16 56.7982 28.4453 54.9635 27.016C54.0888 26.3333 53.3742 25.4267 52.8195 24.296C52.2648 23.144 51.9875 21.8853 51.9875 20.52C51.9875 19.1333 52.2648 17.8853 52.8195 16.776C53.3742 15.6453 54.0888 14.7387 54.9635 14.056C56.7342 12.648 58.6222 11.944 60.6275 11.944C61.4382 11.944 62.2275 12.0613 62.9955 12.296C63.7635 12.5093 64.3288 12.7227 64.6915 12.936L65.2035 13.256C65.5875 13.512 65.8862 13.7147 66.0995 13.864C66.6542 14.2907 66.9315 14.7813 66.9315 15.336C66.9315 15.8693 66.7075 16.4773 66.2595 17.16C65.4915 18.3333 64.7555 18.92 64.0515 18.92C63.6462 18.92 63.0702 18.6853 62.3235 18.216C61.9395 17.8533 61.3848 17.672 60.6595 17.672C59.9555 17.672 59.2942 17.928 58.6755 18.44C58.0568 18.952 57.7475 19.6667 57.7475 20.584ZM78.1553 12.2C80.2886 12.2 82.0593 13.0107 83.4673 14.632C84.8966 16.2533 85.6112 18.2373 85.6112 20.584V26.216C85.6112 26.7067 85.5899 27.08 85.5473 27.336C85.5259 27.5707 85.4299 27.848 85.2593 28.168C84.9819 28.7227 84.1606 29 82.7953 29C81.4939 29 80.6833 28.7227 80.3633 28.168C80.1926 27.848 80.0859 27.56 80.0433 27.304C80.0219 27.048 80.0113 26.664 80.0113 26.152V20.552C80.0113 19.6773 79.7659 18.9947 79.2753 18.504C78.7846 18.0133 78.1553 17.768 77.3873 17.768C76.6406 17.768 75.9793 18.0027 75.4033 18.472C74.8273 18.92 74.4966 19.432 74.4113 20.008V26.216C74.4113 26.7067 74.3899 27.08 74.3473 27.336C74.3259 27.5707 74.2299 27.848 74.0593 28.168C73.7819 28.7227 72.9606 29 71.5953 29C70.2513 29 69.4299 28.712 69.1313 28.136C68.9819 27.816 68.8859 27.5387 68.8433 27.304C68.8219 27.0693 68.8113 26.696 68.8113 26.184V7.048C68.8113 6.55733 68.8219 6.19467 68.8433 5.96C68.8859 5.704 68.9819 5.42666 69.1313 5.128C69.4299 4.552 70.2619 4.264 71.6273 4.264C72.9713 4.264 73.7819 4.552 74.0593 5.128C74.2299 5.448 74.3259 5.736 74.3473 5.992C74.3899 6.22667 74.4113 6.58933 74.4113 7.08V14.152C75.4779 12.8507 76.7259 12.2 78.1553 12.2ZM88.1863 14.952C88.1863 14.4613 88.1969 14.0987 88.2183 13.864C88.2609 13.608 88.3569 13.32 88.5063 13C88.8049 12.4453 89.6369 12.168 91.0023 12.168C92.0263 12.168 92.7516 12.3493 93.1783 12.712C93.5409 13.0107 93.7329 13.4693 93.7543 14.088C93.7756 14.3013 93.7863 14.6107 93.7863 15.016V26.216C93.7863 26.7067 93.7649 27.08 93.7223 27.336C93.7009 27.5707 93.6049 27.848 93.4343 28.168C93.1569 28.7227 92.3356 29 90.9703 29C89.6263 29 88.8049 28.712 88.5063 28.136C88.3569 27.816 88.2609 27.5387 88.2183 27.304C88.1969 27.0693 88.1863 26.696 88.1863 26.184V14.952ZM93.4343 9.032C93.2849 9.33067 93.0076 9.544 92.6023 9.672C92.1969 9.8 91.6529 9.864 90.9703 9.864C90.3089 9.864 89.7756 9.8 89.3703 9.672C88.9649 9.544 88.6769 9.32 88.5063 9C88.3569 8.68 88.2609 8.40267 88.2183 8.168C88.1969 7.912 88.1863 7.53867 88.1863 7.048C88.1863 6.55733 88.1969 6.19467 88.2183 5.96C88.2609 5.704 88.3569 5.42666 88.5063 5.128C88.8049 4.552 89.6369 4.264 91.0023 4.264C92.3463 4.264 93.1569 4.552 93.4343 5.128C93.6049 5.448 93.7009 5.736 93.7223 5.992C93.7649 6.22667 93.7863 6.58933 93.7863 7.08C93.7863 7.57066 93.7649 7.944 93.7223 8.2C93.7009 8.43467 93.6049 8.712 93.4343 9.032ZM95.8625 20.584C95.8625 18.024 96.7585 15.912 98.5505 14.248C100.343 12.584 102.391 11.752 104.695 11.752C106.999 11.752 109.036 12.584 110.807 14.248C112.577 15.8907 113.463 17.992 113.463 20.552C113.463 22.3227 113.004 23.9013 112.087 25.288C111.169 26.6533 110.049 27.6667 108.727 28.328C107.425 28.968 106.071 29.288 104.663 29.288C103.255 29.288 101.889 28.9467 100.567 28.264C99.2438 27.56 98.1238 26.536 97.2065 25.192C96.3105 23.8267 95.8625 22.2907 95.8625 20.584ZM102.551 22.888C103.233 23.4 103.927 23.656 104.631 23.656C105.335 23.656 106.039 23.3893 106.743 22.856C107.447 22.3227 107.799 21.5333 107.799 20.488C107.799 19.4427 107.468 18.664 106.807 18.152C106.145 17.64 105.431 17.384 104.663 17.384C103.895 17.384 103.18 17.6507 102.519 18.184C101.857 18.7173 101.527 19.5067 101.527 20.552C101.527 21.576 101.868 22.3547 102.551 22.888Z\",\n    fill: \"#2B2B2B\"\n  })), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    filter: \"url(#filter0_d)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M140.039 2.356C135.32 1.93263 127.878 8.51697 126.348 18.4076C124.818 28.2925 131.023 33.5231 136.168 34.1179C141.622 34.7482 148.964 32.2178 149.81 21.2826C150.661 10.348 144.638 2.7655 140.039 2.356Z\",\n    fill: \"#F7EEED\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M149.811 21.2768C150.531 11.9905 146.3 5.12698 142.191 3.01762C143.077 3.87032 147.257 8.34338 147.715 16.8877C148.196 25.8826 144.055 33.4533 133.274 33.1725C133.164 33.1714 133.06 33.1653 132.956 33.1649C134.021 33.6718 135.118 33.9906 136.169 34.1121C141.622 34.7482 148.959 32.2114 149.811 21.2768Z\",\n    fill: \"#F0E4D6\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    opacity: 0.6,\n    d: \"M138.526 4.70534C136.715 4.0539 130.773 10.1718 130.59 14.4022C130.407 18.6326 134.312 17.6765 136.184 14.2579C138.055 10.845 140.56 5.44058 138.526 4.70534Z\",\n    fill: \"white\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M139.971 2.69716C140.052 3.14859 139.617 3.46467 139.789 3.93241C139.939 4.33944 140.283 4.77466 140.617 5.04585C140.939 5.30998 141.312 5.44031 141.728 5.39533C141.997 5.36829 142.039 5.30911 142.23 5.50574C142.396 5.6761 142.348 5.68804 142.407 5.88097C142.445 6.00171 142.503 6.10148 142.605 6.17716C142.743 6.28042 142.921 6.29515 143.086 6.32003C143.382 6.36009 143.619 6.41652 143.857 6.60694C144.101 6.80377 144.318 7.0324 144.549 7.23939C144.711 7.39188 145.127 7.64935 145.213 7.85705C145.413 8.33383 144.787 8.59303 144.764 9.0498C144.746 9.46065 145.042 9.8089 145.331 10.0576C145.39 10.105 145.415 9.98581 145.384 9.94741C145.11 9.61328 144.723 9.20788 145.03 8.74327C145.127 8.60327 145.283 8.50497 145.37 8.35217C145.5 8.1287 145.486 7.90022 145.337 7.68525C145.034 7.24891 144.525 6.88772 144.138 6.52891C143.808 6.22901 143.539 6.09909 143.101 6.03678C142.987 6.01784 142.843 6.01856 142.74 5.95436C142.556 5.84007 142.571 5.66147 142.522 5.48134C142.495 5.36766 142.471 5.27185 142.376 5.19109C142.094 4.92584 141.578 5.13952 141.233 5.01823C140.744 4.84534 140.31 4.33577 140.072 3.88947C139.844 3.45598 140.166 3.06289 140.025 2.62782C140.014 2.57417 139.965 2.64992 139.971 2.69716Z\",\n    fill: \"#8C8B7E\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M141.056 5.24778C140.863 5.67327 140.634 6.0597 140.348 6.43378C140.239 6.57247 140.071 6.87873 139.907 6.94701C139.688 7.04379 139.531 6.79307 139.353 6.7375C139.141 6.6665 139.012 6.78532 138.888 6.95138C138.6 7.34843 138.376 7.78784 138.109 8.19901C138.067 8.26393 138.058 8.34429 138.108 8.41403C138.443 8.87155 138.766 9.33922 139.095 9.80182C139.468 10.3278 138.891 10.3657 138.725 10.7594C138.701 10.8148 138.688 10.9296 138.76 10.9612C139.517 11.3163 138.386 11.7439 138.169 11.9224C137.978 12.0805 137.895 12.2978 137.954 12.5431C137.997 12.7225 138.117 12.8819 138.216 13.0328C138.37 13.2542 138.612 13.4102 138.761 13.6252C138.955 13.9092 138.781 14.0578 138.671 14.3127C138.569 14.5509 138.563 14.8061 138.586 15.0589C138.621 15.0048 138.65 14.95 138.685 14.8959C138.313 14.8122 138.008 15.056 137.833 15.3674C137.537 15.8799 137.69 16.5141 137.585 17.0777C137.572 17.1459 137.645 17.2183 137.673 17.1227C137.851 16.5268 137.641 14.9729 138.665 15.1728C138.745 15.1877 138.771 15.057 138.765 15.0098C138.731 14.7034 138.784 14.442 138.919 14.1669C138.956 14.0955 139.01 14.0319 139.031 13.9529C139.061 13.8401 139.049 13.7456 138.99 13.6458C138.745 13.2103 137.595 12.4957 138.456 12.0428C138.715 11.9041 139.029 11.7949 139.149 11.5006C139.277 11.1897 139.13 10.8586 138.833 10.7196C138.843 10.7848 138.858 10.8563 138.868 10.9214C139.028 10.5385 139.611 10.5012 139.451 9.97101C139.371 9.71164 139.138 9.47529 138.989 9.26033C138.734 8.90521 138.474 8.55518 138.219 8.20007C138.217 8.26961 138.22 8.34555 138.218 8.41509C138.35 8.21525 138.488 8.02181 138.621 7.82196C138.739 7.6495 138.86 7.35517 139.02 7.21669C139.379 6.91499 139.511 7.43042 139.875 7.32718C140.15 7.24848 140.405 6.79515 140.552 6.57367C140.803 6.20136 141.005 5.79441 141.163 5.37645C141.203 5.28216 141.118 5.1153 141.056 5.24778Z\",\n    fill: \"#8C8B7E\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M135.2 11.2245C135.244 10.9969 135.298 10.7763 135.364 10.5513C135.401 10.4277 135.448 10.1714 135.602 10.1369C135.661 10.1262 135.765 10.1847 135.827 10.192C136.096 10.223 136.289 10.0476 136.375 9.80166C136.419 9.67294 136.423 9.53385 136.41 9.39853C136.385 9.06408 136.48 8.93556 136.729 8.73169C136.927 8.57421 137.111 8.38031 137.357 8.30405C137.633 8.21387 137.909 8.32724 138.161 8.45518C138.265 8.5079 138.289 8.30126 138.237 8.243C138.074 8.05541 137.713 7.97298 137.473 7.99758C137.151 8.03016 136.905 8.30422 136.663 8.49727C136.498 8.62935 136.269 8.75991 136.21 8.97407C136.17 9.11494 136.225 9.2434 136.232 9.38381C136.261 10.0443 135.907 9.9045 135.509 9.89339C135.468 9.89451 135.441 9.93205 135.437 9.96649C135.349 10.3809 135.205 10.7772 135.145 11.2007C135.133 11.2517 135.188 11.2755 135.2 11.2245Z\",\n    fill: \"#8C8B7E\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M146.358 7.76247C146.199 7.52897 146.03 7.2884 145.787 7.13815C145.614 7.03093 145.432 7.00406 145.301 6.83192C145.191 6.68537 145.142 6.50525 145.037 6.35936C144.651 5.83785 144.157 5.95526 143.616 6.18926C143.549 6.21644 143.535 6.38931 143.63 6.37117C143.93 6.32447 144.347 6.06447 144.643 6.20917C144.928 6.34682 145.039 6.64459 145.195 6.90106C145.303 7.07056 145.403 7.10541 145.585 7.18459C145.899 7.3198 146.101 7.57581 146.308 7.84395C146.343 7.88876 146.383 7.79447 146.358 7.76247Z\",\n    fill: \"#8C8B7E\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M139.54 16.2277C139.546 15.9725 139.498 15.6354 139.305 15.4445C139.166 15.3004 138.954 15.334 138.901 15.5431C138.941 15.542 138.977 15.5345 139.018 15.5334C138.964 15.3468 138.886 15.0645 138.707 14.9566C138.653 14.9271 138.63 15.0291 138.644 15.0597C138.714 15.254 138.84 15.414 138.904 15.6191C138.924 15.6912 139.001 15.6769 139.02 15.6093C139.058 15.5846 139.089 15.5649 139.127 15.5402C139.196 15.5423 139.245 15.5712 139.273 15.6269C139.314 15.6723 139.337 15.7273 139.365 15.7829C139.429 15.9299 139.458 16.0844 139.474 16.2434C139.48 16.2964 139.54 16.28 139.54 16.2277Z\",\n    fill: \"#8C8B7E\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M135.185 11.2518C135.189 10.8626 135.304 10.5153 135.527 10.192C135.582 10.1112 135.513 9.90544 135.436 10.0187C135.186 10.3853 135.08 10.8092 135.116 11.2554C135.12 11.3198 135.191 11.3048 135.185 11.2518Z\",\n    fill: \"#8C8B7E\"\n  }))), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"filter\", {\n    id: \"filter0_d\",\n    x: 122.686,\n    y: -1,\n    width: 33.1501,\n    height: 40.5086,\n    filterUnits: \"userSpaceOnUse\",\n    colorInterpolationFilters: \"sRGB\"\n  }, /*#__PURE__*/React.createElement(\"feFlood\", {\n    floodOpacity: 0,\n    result: \"BackgroundImageFix\"\n  }), /*#__PURE__*/React.createElement(\"feColorMatrix\", {\n    in: \"SourceAlpha\",\n    type: \"matrix\",\n    values: \"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\"\n  }), /*#__PURE__*/React.createElement(\"feOffset\", {\n    dx: 1,\n    dy: 1\n  }), /*#__PURE__*/React.createElement(\"feGaussianBlur\", {\n    stdDeviation: 1.5\n  }), /*#__PURE__*/React.createElement(\"feColorMatrix\", {\n    type: \"matrix\",\n    values: \"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.5 0\"\n  }), /*#__PURE__*/React.createElement(\"feBlend\", {\n    mode: \"normal\",\n    in2: \"BackgroundImageFix\",\n    result: \"effect1_dropShadow\"\n  }), /*#__PURE__*/React.createElement(\"feBlend\", {\n    mode: \"normal\",\n    in: \"SourceGraphic\",\n    in2: \"effect1_dropShadow\",\n    result: \"shape\"\n  })))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgLogo);\nexport default __webpack_public_path__ + \"static/media/logo.0c8769c0.svg\";\nexport { ForwardRef as ReactComponent };","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","var _rect, _g, _defs;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgStudent(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 85,\n    height: 85,\n    viewBox: \"0 0 85 85\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _rect || (_rect = /*#__PURE__*/React.createElement(\"rect\", {\n    width: 85,\n    height: 85,\n    rx: 10,\n    fill: \"current\"\n  })), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    clipPath: \"url(#clip0)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M62.6176 33.1096L49.9687 28.2872C49.662 28.1703 49.3187 28.3241 49.2018 28.6305C49.0849 28.9372 49.2387 29.2805 49.5454 29.3974L60.7383 33.6647L52.9899 36.6191L43.2451 32.2069C42.946 32.0714 42.5941 32.2041 42.4589 32.5029C42.3234 32.802 42.4562 33.1538 42.7549 33.2893L51.4259 37.2154L43 40.4277L25.2617 33.6647L43 26.9017L47.3713 28.5686C47.6774 28.6851 48.0211 28.5316 48.1382 28.2249C48.2551 27.9185 48.1013 27.5752 47.7946 27.4583L43.2118 25.7109C43.0754 25.659 42.9246 25.6587 42.7882 25.7109L23.3824 33.1096C23.1523 33.1975 23 33.4184 23 33.6647V36.3777C23 36.624 23.1523 36.8449 23.3824 36.9328L29.4423 39.243V41.3017C29.4423 41.6298 29.7081 41.8959 30.0361 41.8959C30.3645 41.8959 30.6303 41.6298 30.6303 41.3017V39.6962L42.7882 44.3315C42.8566 44.3574 42.9283 44.3706 43 44.3706C43.0717 44.3706 43.1434 44.3574 43.2118 44.3315L52.3762 40.8376V50.2394C49.499 51.7497 46.2727 52.559 43 52.559C38.5334 52.559 34.1523 51.0533 30.6303 48.3131V43.6781C30.6303 43.3501 30.3645 43.084 30.0361 43.084C29.7081 43.084 29.4423 43.3501 29.4423 43.6781V48.6009C29.4423 48.7813 29.524 48.9519 29.6647 49.0645C33.434 52.0842 38.17 53.7471 43 53.7471C46.2574 53.7471 49.4716 52.9897 52.3762 51.5709V53.9754C51.4189 54.2369 50.713 55.1137 50.713 56.1528C50.713 57.3973 51.7256 58.4102 52.9701 58.4102C54.2149 58.4102 55.2275 57.3973 55.2275 56.1528C55.2275 55.1137 54.5216 54.2369 53.5643 53.9754V50.9434C54.5326 50.3926 55.4603 49.7658 56.3356 49.0645C56.4763 48.9519 56.5584 48.7813 56.5584 48.6009V39.2427L62.6176 36.9325C62.8477 36.8449 63 36.624 63 36.3774V33.6647C63 33.4184 62.8477 33.1975 62.6176 33.1096ZM54.0394 56.1528C54.0394 56.7421 53.5597 57.2218 52.9701 57.2218C52.3808 57.2218 51.9011 56.7421 51.9011 56.1528C51.9011 55.5632 52.3808 55.0835 52.9701 55.0835C53.5597 55.0835 54.0394 55.5632 54.0394 56.1528ZM24.188 34.5271L42.4058 41.4729V42.914L24.188 35.9682V34.5271ZM43.5942 42.914V41.4729L52.3762 38.1245V39.5659L43.5942 42.914ZM55.37 48.3128C54.7905 48.7639 54.1871 49.1808 53.5643 49.5634V40.3844L55.37 39.6959V48.3128ZM53.5643 39.1127V37.6717L61.812 34.5271V35.9682L53.5643 39.1127Z\",\n    fill: \"black\"\n  }))), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"clipPath\", {\n    id: \"clip0\"\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    width: 40,\n    height: 40,\n    fill: \"white\",\n    transform: \"translate(23 22)\"\n  })))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgStudent);\nexport default __webpack_public_path__ + \"static/media/student.c8e34c68.svg\";\nexport { ForwardRef as ReactComponent };","/*\n * File: Nav.js\n * Functionality: Navbar for users to navigate the website\n * Author: Jose (Component & Structure) | Aaron (Cookie)\n */\n\nimport { NavLink, useHistory } from \"react-router-dom\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\nimport NavDropdown from \"react-bootstrap/NavDropdown\";\nimport DropdownButton from \"react-bootstrap/DropdownButton\";\nimport Dropdown from \"react-bootstrap/Dropdown\";\nimport \"../../css/Nav.css\";\n// Image(s) or SVG\nimport { ReactComponent as Logo } from \"../../content/svg/logo.svg\";\n//Cookie\nimport { useCookies } from \"react-cookie\";\n\nconst DefaultNav = () => {\n  const history = useHistory();\n  //Set Current User\n  const [cookie, removeCookie] = useCookies([\"Type_User\", \"ID_OF_USER\", \"First_Name\"]);\n\n  //Remove User\n  const handleRemoveCookie = () => {\n    removeCookie(\"Type_User\");\n    removeCookie(\"ID_OF_USER\");\n    removeCookie(\"First_Name\");\n    history.push(\"/\");\n    window.location.reload();\n  };\n  if (cookie.Type_User === \"professor\" || cookie.Type_User === \"student\" || cookie.Type_User === \"employer\") {\n    return (\n      <Navbar collapseOnSelect expand=\"lg\" className=\"nav-bar\">\n        <Navbar.Brand id=\"nav-logo\">\n          <NavLink to=\"/\">\n            <Logo />\n          </NavLink>\n        </Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\n          <Nav className=\"mr-auto nav-left\">\n            <NavDropdown title=\"Search \" id=\"collasible-nav-dropdown\" className=\"nav-search\">\n              <NavDropdown.Item>\n                <NavLink to=\"/search-jobs\">Jobs</NavLink>\n              </NavDropdown.Item>\n              <NavDropdown.Item>\n                <NavLink to=\"/search-candidates\">Students</NavLink>\n              </NavDropdown.Item>\n            </NavDropdown>\n            <NavLink to=\"/about\" className=\"mr-5 pt-2\">\n              About\n            </NavLink>\n            <NavLink to=\"/help\" className=\"mr-5 pt-2\">\n              Help\n            </NavLink>\n            {/* button for inserting new jobs is displayed only to company accounts*/}\n            {cookie.Type_User === \"employer\" ? (\n              <NavLink to=\"/postjobs\" className=\"mr-5 pt-2\">\n                Post Job\n              </NavLink>\n            ) : null}\n          </Nav>\n          <Nav className=\"nav-right\">\n            <DropdownButton id=\"dropdown-item-button\" title={cookie.First_Name + \"'s Account\"} variant=\"dark\">\n              <Dropdown.Item href=\"/profile\" className=\"dark-a\">\n                Profile\n              </Dropdown.Item>\n              {/* shows notification tab only to student & company accounts */}\n              {cookie.Type_User !== \"professor\" ? (\n                <Dropdown.Item href=\"/notifications\">Notifications</Dropdown.Item>\n              ) : null}\n              <Dropdown.Item href=\"/\" onClick={handleRemoveCookie}>\n                Sign Out\n              </Dropdown.Item>\n            </DropdownButton>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n    );\n  }\n\n  return (\n    <Navbar collapseOnSelect expand=\"lg\" className=\"nav-bar\" bg=\"#fff\">\n      <Navbar.Brand id=\"nav-logo\">\n        <NavLink to=\"/\">\n          <Logo />\n        </NavLink>\n      </Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n      <Navbar.Collapse id=\"responsive-navbar-nav\">\n        <Nav className=\"mr-auto nav-left\">\n          <NavLink to=\"/search-jobs\" className=\"mr-5\">\n            Search\n          </NavLink>\n          <NavLink to=\"/about\" className=\"mr-5\">\n            About\n          </NavLink>\n          <NavLink to=\"/help\">Help</NavLink>\n        </Nav>\n        <Nav className=\"nav-right\">\n          <NavLink to=\"/signup\" className=\"navbar-btn\">\n            My Account\n          </NavLink>\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n};\n\nexport default DefaultNav;\n","/*\n * File: Footer.js\n * Functionality: Footer for homepage and authentication pages\n * Author: Jose\n */\n\n// CSS\nimport \"../../css/Theme.css\";\n// Iconfiy\nimport { Icon } from \"@iconify/react\";\nimport baselineCopyright from \"@iconify-icons/ic/baseline-copyright\";\n\nconst Footer = () => {\n  return (\n    <footer className='footer subtext'>\n      <p>\n        <b>\n          Copyright <Icon icon={baselineCopyright} className='icon-copyright' />{\" \"}\n          2021 Hatchio\n        </b>{\" \"}\n        <br />\n        cookie policy | privacy policy | terms & conditions\n      </p>\n    </footer>\n  );\n};\n\nexport default Footer;\n","// CSS\nimport \"../../css/Theme.css\";\nimport \"../../css/Home.css\";\n// React Boostrap\nimport Button from \"react-bootstrap/Button\";\nimport { useCookies } from \"react-cookie\";\n\nconst PostJobs = () => {\n  const [cookie] = useCookies([\"Type_User\"]);\n\n  function postJobs(e) {\n    e.preventDefault();\n    if (cookie.Type_User === \"employer\") window.location.href = \"/postjobs\";\n    else window.location.href = \"/signin\";\n  }\n\n  return (\n    <div className='box' style={{ maxWidth: \"450px\" }}>\n      <h1 id='post-header'>\n        Your Next Hire <br /> Is Here\n      </h1>\n      <p id='post-p'>\n        People come to Hatchio every day to discover opportunities and build\n        their careers. We put your job in front of the most qualified members —\n        and those open to new opportunities.\n      </p>\n      <Button variant='flat' size='xl' onClick={postJobs}>\n        Post Jobs\n      </Button>\n    </div>\n  );\n};\nexport default PostJobs;\n","// CSS\nimport \"../../css/Theme.css\";\nimport \"../../css/Home.css\";\n// React Boostrap\nimport Button from \"react-bootstrap/Button\";\n//Pop Up Form\nimport { useCookies } from \"react-cookie\";\n\nconst PostJobs = () => {\n  const [cookie] = useCookies([\"Type_User\"]);\n\n  function postJobs(e) {\n    e.preventDefault();\n    window.location.href = \"/search-jobs\";\n  }\n\n  return (\n    <div className='box' style={{ maxWidth: \"450px\" }}>\n      <h1 id='post-header'>From Student To Employee</h1>\n      <p id='post-p'>\n        Build your resume with projects, top strengths, and much more to become\n        noticed by top recruiters. Search and filter jobs, then track your\n        applications through your notifications portal. Your career dreams and\n        goals are one click away. Start Today!\n      </p>\n      <Button variant='flat' size='xl' className='home-btn' onClick={postJobs}>\n        Search Jobs\n      </Button>\n    </div>\n  );\n};\nexport default PostJobs;\n","export default __webpack_public_path__ + \"static/media/recruitment.b27aa591.svg\";","export default __webpack_public_path__ + \"static/media/jobsearch.360a3034.svg\";","// CSS\nimport \"../../css/Theme.css\";\nimport \"../../css/Home.css\";\n// Components\nimport Footer from \"../global/Footer\";\nimport PostJobs from \"./PostJobs\";\nimport SearchJobs from \"./SeachJobs\";\nimport Recruitment from \"../../content/svg/recruitment.svg\";\nimport JobSearch from \"../../content/svg/jobsearch.svg\";\n// Iconfiy\nimport { Icon } from \"@iconify/react\";\nimport baselineCopyright from \"@iconify-icons/ic/baseline-copyright\";\n\nconst Home = () => {\n  return (\n    <>\n      <div className='home-container'>\n        <div className='home-flex top'>\n          <img src={JobSearch} alt='job search img' />\n          <SearchJobs />\n        </div>\n        <div className='home-flex bottom'>\n          <PostJobs />\n          <img src={Recruitment} alt='recruitment' />\n        </div>\n      </div>\n      <footer className='home-footer'>\n        <p>\n          <b>\n            Copyright{\" \"}\n            <Icon icon={baselineCopyright} className='icon-copyright' /> 2021\n            Hatchio\n          </b>{\" \"}\n          <br />\n          cookie policy | privacy policy | terms & conditions\n        </p>\n      </footer>\n    </>\n  );\n};\n\nexport default Home;\n","export default __webpack_public_path__ + \"static/media/auth-img.e58cc076.jpg\";","var _rect, _g, _defs;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgProfessor(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 85,\n    height: 85,\n    viewBox: \"0 0 85 85\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _rect || (_rect = /*#__PURE__*/React.createElement(\"rect\", {\n    width: 85,\n    height: 85,\n    rx: 10,\n    fill: \"current\"\n  })), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    clipPath: \"url(#clip0)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M59.4306 38.6269C57.9299 35.6011 55.472 33.4974 52.5094 32.7033C52.4306 32.6822 52.3512 32.6632 52.272 32.6441C52.804 32.3038 53.3034 31.9049 53.7589 31.4495C55.9982 29.2101 56.8812 25.9163 56.0632 22.8533C55.9911 22.5831 55.7802 22.3722 55.51 22.3C52.4471 21.482 49.1532 22.3651 46.9138 24.6043C46.0616 25.4566 45.4064 26.4618 44.9661 27.5488C44.5825 26.3479 44.0969 25.1755 43.5093 24.0364C43.1906 23.4187 42.6132 23.0051 41.9251 22.9017C41.2452 22.7993 40.5528 23.0318 40.0724 23.5229L38.4438 25.1872C37.6671 25.9811 37.6283 27.2558 38.3555 28.0894C39.6861 29.6144 40.501 31.5108 40.7011 33.5108C40.102 33.2073 39.4841 32.9605 38.8561 32.7766C37.0926 32.2604 35.2368 32.2351 33.4895 32.7034C32.1918 33.0512 30.9832 33.6539 29.8971 34.4945C29.5559 34.7586 29.4934 35.2493 29.7575 35.5906C30.0216 35.9319 30.5123 35.9943 30.8536 35.7302C31.7748 35.0172 32.7977 34.5067 33.894 34.2128C36.8614 33.4174 39.9845 34.3064 42.4624 36.6519C42.7637 36.9372 43.2354 36.9371 43.5366 36.6519C46.0145 34.3063 49.1375 33.4174 52.105 34.2128C57.3635 35.6223 60.4371 41.9061 58.9565 48.2205C57.9405 52.5539 54.7375 57.0727 51.1674 59.2095C49.3047 60.3243 47.4836 60.6893 45.9009 60.265C45.4874 60.1542 45.081 59.9873 44.693 59.7689C43.6485 59.1811 42.3507 59.1811 41.3061 59.7689C40.918 59.9873 40.5117 60.1542 40.0982 60.265C38.5154 60.6893 36.6944 60.3243 34.8317 59.2095C31.2616 57.0727 28.0585 52.5539 27.0424 48.2205C26.4815 45.828 26.554 43.372 27.252 41.1182C27.3796 40.7059 27.149 40.2683 26.7368 40.1407C26.3246 40.013 25.8869 40.2437 25.7593 40.6559C24.9791 43.1751 24.8966 45.9143 25.5211 48.5773C26.6261 53.2901 30.1247 58.2136 34.0293 60.5504C35.6349 61.5113 37.2426 62.0003 38.7628 62.0002C39.3579 62.0002 39.9397 61.9252 40.5027 61.7744C41.0423 61.6298 41.5705 61.4132 42.0724 61.1308C42.6442 60.809 43.3548 60.8089 43.9266 61.1308C44.4285 61.4133 44.9567 61.6298 45.4964 61.7744C47.4972 62.3106 49.7358 61.8875 51.9699 60.5503C55.8744 58.2135 59.3731 53.29 60.4781 48.5772C61.2827 45.1449 60.9107 41.6112 59.4306 38.6269ZM48.0187 25.7092C49.7559 23.9718 52.2639 23.2248 54.6582 23.7049C55.1383 26.0995 54.3912 28.6071 52.6539 30.3445C51.152 31.8464 49.0746 32.6074 46.992 32.4761L49.5707 29.8974C49.8758 29.5923 49.8758 29.0976 49.5707 28.7925C49.2655 28.4874 48.7709 28.4874 48.4657 28.7925L45.887 31.3712C45.7558 29.2886 46.5168 27.2111 48.0187 25.7092ZM42.9994 35.037C42.7757 34.8484 42.5462 34.669 42.312 34.4985C42.3121 34.4925 42.3127 34.4871 42.3127 34.481C42.3127 31.7513 41.3255 29.1165 39.5329 27.062C39.338 26.8386 39.3502 26.4951 39.5606 26.28L41.1892 24.6156C41.3217 24.4803 41.5052 24.4187 41.6928 24.4469C41.8787 24.4748 42.0345 24.5863 42.1204 24.7527C43.6033 27.6273 44.3921 30.7285 44.4669 33.9751C43.9579 34.2881 43.4667 34.6432 42.9994 35.037Z\",\n    fill: \"black\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M27.9982 38.4838C28.2037 38.4838 28.4053 38.4009 28.5506 38.2548C28.6959 38.1095 28.7795 37.9079 28.7795 37.7025C28.7795 37.497 28.6959 37.2954 28.5506 37.1501C28.4053 37.0047 28.2037 36.9211 27.9982 36.9211C27.7927 36.9211 27.5912 37.0047 27.4458 37.1501C27.3005 37.2954 27.2169 37.497 27.2169 37.7025C27.2169 37.9087 27.3005 38.1095 27.4458 38.2548C27.5912 38.4009 27.7927 38.4838 27.9982 38.4838Z\",\n    fill: \"black\"\n  }))), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"clipPath\", {\n    id: \"clip0\"\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    width: 40,\n    height: 40,\n    fill: \"white\",\n    transform: \"translate(23 22)\"\n  })))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgProfessor);\nexport default __webpack_public_path__ + \"static/media/professor.38142364.svg\";\nexport { ForwardRef as ReactComponent };","var _rect, _g, _defs;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgCompany(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 85,\n    height: 85,\n    viewBox: \"0 0 85 85\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _rect || (_rect = /*#__PURE__*/React.createElement(\"rect\", {\n    width: 85,\n    height: 85,\n    rx: 10,\n    fill: \"current\"\n  })), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    clipPath: \"url(#clip0)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M45.0266 35.0049H48.6256C49.0571 35.0049 49.4069 34.6551 49.4069 34.2236V30.6187C49.4069 30.1872 49.0571 29.8374 48.6256 29.8374H45.0266C44.5952 29.8374 44.2454 30.1872 44.2454 30.6187V34.2236C44.2454 34.6551 44.5952 35.0049 45.0266 35.0049ZM45.8079 31.4H47.8444V33.4425H45.8079V31.4Z\",\n    fill: \"black\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M37.9384 35.0049H41.5374C41.9689 35.0049 42.3187 34.6551 42.3187 34.2236V30.6187C42.3187 30.1872 41.9689 29.8374 41.5374 29.8374H37.9384C37.507 29.8374 37.1572 30.1872 37.1572 30.6187V34.2236C37.1572 34.6551 37.507 35.0049 37.9384 35.0049ZM38.7197 31.4H40.7562V33.4425H38.7197V31.4Z\",\n    fill: \"black\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M45.0266 42.9409H48.6256C49.0571 42.9409 49.4069 42.5911 49.4069 42.1596V38.5547C49.4069 38.1232 49.0571 37.7734 48.6256 37.7734H45.0266C44.5952 37.7734 44.2454 38.1232 44.2454 38.5547V42.1596C44.2454 42.591 44.5952 42.9409 45.0266 42.9409ZM45.8079 39.3359H47.8444V41.3783H45.8079V39.3359Z\",\n    fill: \"black\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M37.9384 42.9409H41.5374C41.9689 42.9409 42.3187 42.5911 42.3187 42.1596V38.5547C42.3187 38.1232 41.9689 37.7734 41.5374 37.7734H37.9384C37.507 37.7734 37.1572 38.1232 37.1572 38.5547V42.1596C37.1572 42.591 37.507 42.9409 37.9384 42.9409ZM38.7197 39.3359H40.7562V41.3783H38.7197V39.3359Z\",\n    fill: \"black\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M45.0266 50.8767H48.6256C49.0571 50.8767 49.4069 50.527 49.4069 50.0955V46.4905C49.4069 46.059 49.0571 45.7092 48.6256 45.7092H45.0266C44.5952 45.7092 44.2454 46.059 44.2454 46.4905V50.0955C44.2454 50.527 44.5952 50.8767 45.0266 50.8767ZM45.8079 47.2718H47.8444V49.3143H45.8079V47.2718Z\",\n    fill: \"black\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M41.5374 50.8767C41.9689 50.8767 42.3187 50.527 42.3187 50.0955V46.4905C42.3187 46.059 41.9689 45.7092 41.5374 45.7092H37.9384C37.507 45.7092 37.1572 46.059 37.1572 46.4905V50.0955C37.1572 50.527 37.507 50.8767 37.9384 50.8767H41.5374ZM38.7197 47.2718H40.7562V49.3143H38.7197V47.2718Z\",\n    fill: \"black\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M59.2461 60.4375H58.5197V36.8397C58.5197 36.4082 58.1699 36.0584 57.7384 36.0584H52.6484V26.3716C52.6484 25.9402 52.2987 25.5904 51.8672 25.5904H50.2027V22.7812C50.2027 22.3498 49.8529 22 49.4214 22H37.1427C36.7112 22 36.3614 22.3498 36.3614 22.7812V25.5904H34.697C34.2655 25.5904 33.9157 25.9402 33.9157 26.3716V41.4077H29.6291C29.1977 41.4077 28.8479 41.7574 28.8479 42.1889V60.4375H26.7539C26.3224 60.4375 25.9727 60.7873 25.9727 61.2188C25.9727 61.6502 26.3224 62 26.7539 62H59.2461C59.6776 62 60.0274 61.6502 60.0274 61.2188C60.0274 60.7873 59.6776 60.4375 59.2461 60.4375ZM37.9239 23.5625H48.6401V25.5904H37.9239V23.5625ZM30.4104 42.9702H33.9157V60.4375H30.4104V42.9702ZM35.4782 27.1529H51.0859V60.4375H47.1969V55.283C47.1969 54.8515 46.8471 54.5017 46.4156 54.5017H40.1484C39.717 54.5017 39.3672 54.8515 39.3672 55.283V60.4375H35.4782V27.1529ZM40.9298 60.4375V56.0642H45.6345V60.4375H40.9298ZM52.6484 60.4375V37.6209H56.9572V60.4375H52.6484Z\",\n    fill: \"black\"\n  }))), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"clipPath\", {\n    id: \"clip0\"\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    width: 40,\n    height: 40,\n    fill: \"white\",\n    transform: \"translate(23 22)\"\n  })))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgCompany);\nexport default __webpack_public_path__ + \"static/media/company.70f3a666.svg\";\nexport { ForwardRef as ReactComponent };","import PORT_HOST from \"../config\";\n\nexport default async function API_USER_LOG_IN(email, password, usertype) {\n  const headers = { method: \"GET\", credentials: \"include\" };\n  const response = await fetch(\n    `${PORT_HOST.PORT_HOST}/sign_in?Email=${email}&Password=${password}&Type=${usertype}`,\n    headers\n  );\n  const confirmation = await response.json();\n  return confirmation;\n}\n","/*\n * File: Signin.js\n * Functionality: User Log In Page\n * Author: Jose (Component & Structure) | Aaron (API)\n */\n\nimport { useHistory } from \"react-router-dom\";\nimport { useState } from \"react\";\n// CSS\nimport \"../../css/Theme.css\";\nimport \"../../css/Auth.css\";\n// React Boostrap\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport Col from \"react-bootstrap/esm/Col\";\n// Image(s) or SVG\nimport { ReactComponent as Student } from \"../../content/svg/student.svg\";\nimport { ReactComponent as Professor } from \"../../content/svg/professor.svg\";\nimport { ReactComponent as Company } from \"../../content/svg/company.svg\";\n//API\nimport API_USER_LOG_IN from \"../../../models/user_sign_in\";\n\nfunction Signin() {\n  const [email, setEmail] = useState(\"Email\"); //School Email\n  const [userType, setUserType] = useState(\"\");\n  const history = useHistory();\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    let bool_user_auth = await API_USER_LOG_IN(\n      event.target[3].value,\n      event.target[4].value,\n      userType\n    );\n    //Auth True\n    if (bool_user_auth === true) {\n      //auth true\n      history.push(\"/profile\");\n      window.location.reload();\n      // console.log(\"THE BOOL OF USER: \" + bool_user_auth);\n    }\n    //Auth False\n    if (bool_user_auth === false) {\n      // console.log(\"false\");\n      alert(\"auth failed.\");\n      //Control UI response\n    }\n  };\n\n  return (\n    <>\n      <h1 id='h1-signup'>Welcome Back!</h1>\n      <Form className='auth-form' onSubmit={handleSubmit}>\n        <Form.Row id='profiles'>\n          <Col>\n            <label>\n              <input\n                type='radio'\n                name='account'\n                value='student'\n                onClick={() => {\n                  setEmail(\"Enter Your Student Email\");\n                  setUserType(\"student\");\n                }}\n              />\n              <Student id='student-radio' fill='#EEEEEE' />\n            </label>\n          </Col>\n          <Col>\n            <label>\n              <input\n                type='radio'\n                name='account'\n                value='professor'\n                onClick={() => {\n                  setEmail(\"Enter Your School Email\");\n                  setUserType(\"professor\");\n                }}\n              />\n              <Professor id='professor-radio' fill='#EEEEEE' />\n            </label>\n          </Col>\n          <Col>\n            <label>\n              <input\n                type='radio'\n                name='account'\n                value='employer'\n                onClick={() => {\n                  setEmail(\"Enter Your Company Email\");\n                  setUserType(\"employer\");\n                }}\n              />\n              <Company id='company-radio' fill='#EEEEEE' />\n            </label>\n          </Col>\n        </Form.Row>\n        <Form.Control type='email' placeholder={email} required />\n        <Form.Group id='passwd'>\n          <Form.Control type='password' placeholder='Password' required />\n          <Form.Text className='text-muted'>Forgot Password?</Form.Text>\n        </Form.Group>\n        <Button variant='dark' type='submit'>\n          Sign in\n        </Button>\n      </Form>\n    </>\n  );\n}\n\nexport default Signin;\n","/**\n * File: register_user.js\n * Purpose: generate and send unique verification link to new registed users.\n * Functionality IE: Send GET request to Backend Server\n * Authors: Aaron and Roland\n */\nimport { PORT_HOST } from \"../config\";\nimport cryptoRandomString from \"crypto-random-string\";\nvar code = cryptoRandomString({ length: 100, type: \"base64\" })\n  .replace(/[/+=]/g, \"\")\n  .substr(-30);\n\nexport function API_SEND_EMAIL(jsonPOST) {\n  const { email, usertype } = jsonPOST;\n  // console.log(\"User: \" + usertype + \"email: \" + email + \" code: \" + code);\n  fetch(\n    `${PORT_HOST}/send?UserType=${usertype}&email=${email}&code=${code}`\n  ).then((e) => console.log(`Response: ${JSON.stringify(e)}`));\n}\n\nexport function API_REGISTER_USER(jsonPOST) {\n  const {\n    usertype,\n    firstName,\n    lastName,\n    schoolname,\n    password,\n    email,\n  } = jsonPOST;\n  fetch(\n    `${PORT_HOST}/register?UserType=${usertype}&first_name=${firstName}&last_name=${lastName}&school_name=${schoolname}&password=${password}&email=${email}&code=${code}`\n  ).then((e) => console.log(`Response: ${JSON.stringify(e)}`));\n}\n","/*\n * File: Signup.js\n * Functionality: User Create Account Page\n * Author: Jose (Component & Structure) | Aaron (API)\n */\n\nimport { useState } from \"react\";\n// CSS\nimport \"../../css/Theme.css\";\nimport \"../../css/Auth.css\";\n// React Boostrap\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport Col from \"react-bootstrap/esm/Col\";\n// Image(s) or SVG\nimport { ReactComponent as Student } from \"../../content/svg/student.svg\";\nimport { ReactComponent as Professor } from \"../../content/svg/professor.svg\";\nimport { ReactComponent as Company } from \"../../content/svg/company.svg\";\n\nimport {\n  API_SEND_EMAIL,\n  API_REGISTER_USER,\n} from \"../../../models/register_user\";\n\nfunction Signup() {\n  const [validated, setValidated] = useState(false);\n  const [inputName, setInputName] = useState(\"School Name\"); //School Name\n  const [email, setEmail] = useState(\"School Email\"); //School Email\n  const [firstName, setFirstName] = useState(\"\"); //First Name\n  const [lastName, setLastName] = useState(\"\"); //Last Name\n  const [password, setPassword] = useState(\"\"); //Password\n  const [userType, setUserType] = useState(\"\");\n\n  //Form Submission\n  const handleSubmit = (event) => {\n    const FORM_REQUEST = {\n      usertype: userType,\n      firstName: firstName,\n      lastName: lastName,\n      schoolname: inputName,\n      password: password,\n      email: email,\n    };\n    // console.log(FORM_REQUEST);\n    const form = event.currentTarget;\n    if ((form.checkValidity() === false) | true) {\n      event.preventDefault();\n      event.stopPropagation();\n      API_SEND_EMAIL(FORM_REQUEST);\n      API_REGISTER_USER(FORM_REQUEST);\n      window.location.href = \"/redirect\";\n    }\n\n    setValidated(true);\n  };\n\n  return (\n    <>\n      <h1 id='h1-signup'>Create An Account</h1>\n      <Form onSubmit={handleSubmit} className='auth-form'>\n        <Form.Row id='profiles'>\n          <Col>\n            <label>\n              <input\n                type='radio'\n                name='account'\n                value='student'\n                onClick={() => {\n                  setUserType(\"students\");\n                  setInputName(\"School Name\");\n                  setEmail(\"Student Email\");\n                }}\n              />\n              <Student id='student-radio' fill='#EEEEEE' />\n            </label>\n          </Col>\n          <Col>\n            <label>\n              <input\n                type='radio'\n                name='account'\n                value='professor'\n                onClick={() => {\n                  setUserType(\"professors\");\n                  setInputName(\"School Name\");\n                  setEmail(\"Work Email\");\n                }}\n              />\n              <Professor id='professor-radio' fill='#EEEEEE' />\n            </label>\n          </Col>\n          <Col>\n            <label>\n              <input\n                type='radio'\n                name='account'\n                value='company'\n                onClick={() => {\n                  setUserType(\"employers\");\n                  setInputName(\"Company Name\");\n                  setEmail(\"Company Email\");\n                }}\n              />\n              <Company id='company-radio' fill='#EEEEEE' />\n            </label>\n          </Col>\n        </Form.Row>\n        <Form.Row>\n          <Form.Group as={Col} md='6'>\n            <Form.Control\n              required\n              type='text'\n              id='first-name'\n              placeholder='First Name'\n              onChange={(e) => setFirstName(e.target.value)}\n            />\n            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n          </Form.Group>\n          <Form.Group as={Col} md='6'>\n            <Form.Control\n              required\n              type='text'\n              id='last-name'\n              placeholder='Last Name'\n              onChange={(e) => setLastName(e.target.value)}\n            />\n            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n          </Form.Group>\n          <Form.Group as={Col} md='12'>\n            <Form.Control\n              type='text'\n              id='organization-name'\n              placeholder={inputName}\n              onChange={(e) => setInputName(e.target.value)}\n              required\n            />\n          </Form.Group>\n        </Form.Row>\n        <Form.Row>\n          <Form.Group as={Col} md='12'>\n            {/**Email */}\n            <Form.Control\n              type='email'\n              id='email'\n              placeholder={email}\n              onChange={(e) => setEmail(e.target.value)}\n              required\n            />\n          </Form.Group>\n          {/**Password */}\n          <Form.Group as={Col} md='6'>\n            <Form.Control\n              required\n              type='password'\n              id='password'\n              placeholder='Password'\n              onChange={(e) => setPassword(e.target.value)}\n            />\n            <Form.Text className='text-muted'>\n              Must be 8-20 characters long.\n            </Form.Text>\n            <Form.Control.Feedback type='invalid'>\n              Password is weak\n            </Form.Control.Feedback>\n          </Form.Group>\n          <Form.Group as={Col} md='6'>\n            <Form.Control\n              required\n              type='password'\n              id='confirm-password'\n              placeholder='Confim Password'\n            />\n            <Form.Control.Feedback type='invalid'>\n              Password does not match.\n            </Form.Control.Feedback>\n          </Form.Group>\n        </Form.Row>\n        <Form.Group>\n          <Form.Check\n            required\n            label='I Agree to the  Privacy Policy, Terms & Conditions, and Cookie Policy'\n            feedback='You must agree before submitting.'\n            className='subtext'\n          />\n        </Form.Group>\n        <Button variant='dark' type='submit'>\n          Create Account\n        </Button>\n      </Form>\n    </>\n  );\n}\n\nexport default Signup;\n","/*\n * File: SubNav.js\n * Functionality: Authentication Navbar for users to navigate between Sign In & Sign Up\n * Author: Jose\n */\n\nimport { NavLink } from \"react-router-dom\";\n// CSS\nimport \"../../css/Theme.css\";\nimport \"../../css/Nav.css\";\n// React Bootstrap\nimport Navbar from \"react-bootstrap/Navbar\";\n// Image(s) or SVG\nimport { ReactComponent as Logo } from \"../../content/svg/logo.svg\";\n\nfunction SubNav() {\n  return (\n    <Navbar id='sub-navbar'>\n      <Navbar.Brand>\n        <NavLink to='/'>\n          <Logo />\n        </NavLink>\n      </Navbar.Brand>\n      <Navbar.Toggle />\n      <Navbar.Collapse className='justify-content-end'>\n        <NavLink to='/signup' className='navbar-btn'>\n          Sign Up\n        </NavLink>\n        <NavLink to='/signin' className='navbar-btn'>\n          Sign In\n        </NavLink>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n}\n\nexport default SubNav;\n","/*\n * File: Auth.js\n * Functionality: Template for Authentication pages\n * Author: Jose\n */\n\n// CSS\nimport \"../../css/Theme.css\";\nimport \"../../css/Auth.css\";\n// Image(s) or SVG\nimport img from \"../../content/images/auth-img.jpg\";\n// Components\nimport Signin from \"./Signin\";\nimport Signup from \"./Signup\";\nimport Footer from \"../global/Footer\";\nimport SubNav from \"../global/SubNav\";\n\nconst Auth = ({ type }) => {\n  var AuthType;\n  if (type === \"signin\") {\n    AuthType = <Signin />;\n  } else {\n    AuthType = <Signup />;\n  }\n\n  return (\n    <div className='wrapper-col-2 fill-page'>\n      <img src={img} className='col left-auth' alt='woman at the library' />\n      <div className='wrapper-row-3 col right-auth' id={type}>\n        <SubNav />\n        {AuthType}\n        <Footer />\n      </div>\n    </div>\n  );\n};\n\nexport default Auth;\n","/*\n * File: Redirect.js\n * Functionality: Informative Page for users to confirm their email\n * Author: Jose\n */\n\nimport { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n// Redirect After Clicking \"Create Account\"\nimport { useHistory } from \"react-router-dom\";\n// CSS\nimport \"../../css/Theme.css\";\nimport \"../../css/Auth.css\";\nimport Button from \"react-bootstrap/esm/Button\";\n\nconst Redirect = () => {\n  // user's name\n  const [user, setUser] = useState(\"Jose\");\n\n  //Redirect with useHistory\n  const history = useHistory();\n\n  const routeChange = () => {\n    history.push(\"/signin\");\n  };\n\n  return (\n    <div className='redirect'>\n      <h1>Verify Your Email Address</h1>\n      <p>To start using hatchio, we need to verify your email.</p>\n      {/* Asks the user to open Mail Client and then verify email */}\n      <p>After verifying, click on the button below to signin!</p>\n      <Button\n        variant='dark'\n        type='submit'\n        id='redirect-btn'\n        onClick={routeChange}>\n        Sign In\n      </Button>\n      <footer>\n        <p>\n          Questions?{\" \"}\n          <Link\n            to='#'\n            onClick={(e) => {\n              window.location = \"mailto:hatchionoreply9@gmail.com\";\n              e.preventDefault();\n            }}>\n            help@hatchio.io\n          </Link>\n        </p>\n      </footer>\n    </div>\n  );\n};\n\nexport default Redirect;\n","// CSS\nimport \"../../../css/Theme.css\";\nimport \"../../../css/Search.css\";\n// SFSU Areas of Study Data imported\nimport Data from \"../../../content/data/AreasOfStudy.json\";\n// React Boostrap\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport Accordion from \"react-bootstrap/Accordion\";\nimport Card from \"react-bootstrap/Card\";\n\nconst StudentFilters = ({\n  // functions\n  addFilterHandler,\n  addSchoolYearHandler,\n  // Active filters\n  activeFilters,\n  setActiveFilters,\n  // School year\n  schoolYear,\n  setSchoolYear,\n  // Strengths\n  strength,\n  setStrength,\n  // GPA\n  gpa,\n  setGPA,\n  // Rating\n  rating,\n  setRating,\n}) => {\n  return (\n    <div className=\"filter\">\n      {/* Heading */}\n      <h4>Filters</h4>\n\n      {/* Active Filters */}\n      <div className=\"active-filter-box\">\n        {schoolYear?.map((filter) => (\n          <div id={filter.id} className=\"active-filter\">\n            {filter}\n            <button\n              onClick={(e) => {\n                // removes the filter from useState\n                setSchoolYear(\n                  schoolYear.filter(\n                    (filter) => !filter.localeCompare(e.target.value)\n                  )\n                );\n\n                // resets check value to false\n                e.target.checked = false;\n                // console.log(filter);\n              }}\n            >\n              {\" \"}\n              x{\" \"}\n            </button>\n          </div>\n        ))}\n        {/* all active filters except school year */}\n        {activeFilters?.map((filter) => (\n          <div id={filter.id} className=\"active-filter\">\n            <span>{filter}</span>\n            <button\n              onClick={(e) => {\n                // removes the filter from useState\n                setActiveFilters(\n                  activeFilters.filter(\n                    (filter) => !filter.localeCompare(e.target.value)\n                  )\n                );\n                // resets check value to false\n                e.target.checked = false;\n                // console.log(filter);\n              }}\n            >\n              {\" \"}\n              x{\" \"}\n            </button>\n          </div>\n        ))}\n      </div>\n\n      {/* Form */}\n      <Form id=\"filter-students\">\n        <Accordion defaultActiveKey=\"\">\n          {/* Student Year Filter */}\n          <Form.Group>\n            <Card>\n              <Accordion.Toggle as={Card.Header} eventKey=\"0\">\n                Student Year\n              </Accordion.Toggle>\n              <Accordion eventKey=\"0\">\n                <Card.Body>\n                  <Form.Check\n                    type=\"checkbox\"\n                    label=\"Freshman\"\n                    value=\"Freshman\"\n                    onClick={addSchoolYearHandler}\n                    className=\"checkbox\"\n                  />\n                  <Form.Check\n                    type=\"checkbox\"\n                    label=\"Sophomore\"\n                    value=\"Sophomore\"\n                    onClick={addSchoolYearHandler}\n                  />\n                  <Form.Check\n                    type=\"checkbox\"\n                    label=\"Junior\"\n                    value=\"Junior\"\n                    onClick={addSchoolYearHandler}\n                  />\n                  <Form.Check\n                    type=\"checkbox\"\n                    label=\"Senior\"\n                    value=\"Senior\"\n                    onClick={addSchoolYearHandler}\n                  />\n                  <Form.Check\n                    type=\"checkbox\"\n                    s\n                    label=\"Masters\"\n                    value=\"Masters\"\n                    onClick={addSchoolYearHandler}\n                  />\n                  <Form.Check\n                    type=\"checkbox\"\n                    label=\"Doctorate\"\n                    value=\"Doctorate\"\n                    onClick={addSchoolYearHandler}\n                  />\n                  <Form.Check\n                    type=\"checkbox\"\n                    label=\"Alumni\"\n                    value=\"Alumni\"\n                    onClick={addSchoolYearHandler}\n                  />\n                </Card.Body>\n              </Accordion>\n            </Card>\n          </Form.Group>\n\n          {/* Academics Filter */}\n          <Form.Group>\n            <Card>\n              <Accordion.Toggle as={Card.Header} eventKey=\"1\">\n                Area of Study\n              </Accordion.Toggle>\n              <Accordion eventKey=\"1\">\n                <Card.Body>\n                  <Form.Group>\n                    <Form.Control\n                      as=\"select\"\n                      name=\"degree\"\n                      onChange={addFilterHandler}\n                    >\n                      {/* default is a blank option */}\n                      <option></option>\n                      {/* All SFSU Areas of Study grabbed from JSON file*/}\n                      {Data.map((program) => (\n                        <option value={program.field}>{program.field}</option>\n                      ))}\n                    </Form.Control>\n                  </Form.Group>\n                </Card.Body>\n              </Accordion>\n            </Card>\n          </Form.Group>\n\n          {/* Stengths / Skills Filter */}\n          {/* <Form.Group>\n            <Card>\n              <Accordion.Toggle as={Card.Header} eventKey='2'>\n                Stengths / Skills\n              </Accordion.Toggle>\n              <Accordion eventKey='2'>\n                <Card.Body>\n                  <InputGroup>\n                    <Form.Control\n                      placeholder='Add Strengths / Skills'\n                      aria-label=\"Recipient's username\"\n                      aria-describedby='basic-addon2'\n                      onChange={(e) => setStrength(e.target.value)}\n                    />\n                    <InputGroup.Append>\n                      <Button\n                        variant='outline-secondary'\n                        className='btn-fill'\n                        onClick={(e) =>\n                          setActiveFilters([...activeFilters, strength])\n                        }>\n                        +\n                      </Button>\n                    </InputGroup.Append>\n                  </InputGroup>\n                </Card.Body>\n              </Accordion>\n            </Card>\n          </Form.Group> */}\n\n          {/* GPA Filter */}\n          <Form.Group>\n            <Card>\n              <Accordion.Toggle as={Card.Header} eventKey=\"3\">\n                GPA\n              </Accordion.Toggle>\n              <Accordion eventKey=\"3\">\n                <Card.Body>\n                  <InputGroup className=\"mb-3\">\n                    <Form.Control\n                      placeholder=\"From\"\n                      aria-label=\"GPA-from\"\n                      aria-describedby=\"basic-addon1\"\n                      onChange={(e) =>\n                        setGPA({\n                          ...gpa,\n                          min: e.target.value,\n                        })\n                      }\n                    />\n                    <Form.Control\n                      placeholder=\"To\"\n                      aria-label=\"GPA-to\"\n                      aria-describedby=\"basic-addon1\"\n                      onChange={(e) =>\n                        setGPA({\n                          ...gpa,\n                          max: e.target.value,\n                        })\n                      }\n                    />\n                    <InputGroup.Append>\n                      <Button\n                        variant=\"outline-secondary\"\n                        className=\"btn-fill\"\n                        name=\"gpa\"\n                        onClick={addFilterHandler}\n                      >\n                        +\n                      </Button>\n                    </InputGroup.Append>\n                  </InputGroup>\n                </Card.Body>\n              </Accordion>\n            </Card>\n          </Form.Group>\n\n          {/* Review Score Filter */}\n          <Form.Group>\n            <Card>\n              <Accordion.Toggle\n                as={Card.Header}\n                eventKey=\"4\"\n                className=\"accordion-header\"\n              >\n                Professor Rating\n              </Accordion.Toggle>\n              <Accordion eventKey=\"4\">\n                <Card.Body>\n                  <InputGroup className=\"mb-3\">\n                    <Form.Control\n                      placeholder=\"From\"\n                      aria-label=\"Review-from\"\n                      aria-describedby=\"basic-addon1\"\n                      onChange={(e) =>\n                        setRating({\n                          ...rating,\n                          min: e.target.value,\n                        })\n                      }\n                    />\n                    <Form.Control\n                      placeholder=\"To\"\n                      aria-label=\"Review-to\"\n                      aria-describedby=\"basic-addon1\"\n                      onChange={(e) =>\n                        setRating({\n                          ...rating,\n                          max: e.target.value,\n                        })\n                      }\n                    />\n                    <InputGroup.Append>\n                      <Button\n                        variant=\"outline-secondary\"\n                        className=\"btn-fill\"\n                        name=\"rating\"\n                        onClick={addFilterHandler}\n                      >\n                        +\n                      </Button>\n                    </InputGroup.Append>\n                  </InputGroup>\n                </Card.Body>\n              </Accordion>\n            </Card>\n          </Form.Group>\n        </Accordion>\n      </Form>\n    </div>\n  );\n};\n\nexport default StudentFilters;\n","/*\n * File: DefaultImage.js\n * Functionality: A default image is produced for every user if they do not upload an image\n * Author: Jose\n */\n\n// (if image URL empty) Creates a default logo with the First Letter of the User's Name\nexport const defaultImage = (name) => {\n  const canvas = document.createElement(\"canvas\");\n  const context = canvas.getContext(\"2d\");\n  // declares canvas size\n  canvas.width = canvas.height = 80;\n  // creates circl within canvas\n  context.strokeStyle = \"#2b2b2b\";\n  context.fillStyle = \"rgba(43, 43, 43, 1)\";\n  context.lineWidth = 2;\n  context.beginPath();\n  context.arc(canvas.width / 2, canvas.height / 2, 30, 0, 2 * Math.PI);\n  context.stroke();\n  context.fill();\n\n  // adds the first letter of the user's first name within the circle\n  context.fillStyle = \"#fff\";\n  context.textBaseline = \"middle\";\n  context.textAlign = \"center\";\n  context.font = `${2}rem Roboto`;\n  context.fillText(name.charAt(0), canvas.width / 2, canvas.height / 2);\n\n  // returns base64 string for the above canvas\n  return canvas.toDataURL();\n};\n","import PORT_HOST from \"../../../config\";\n\nexport default async function API_PROFESSOR_RATE_STUDENT(\n  s_id,\n  p_id,\n  res_int,\n  tea_int,\n  lead_int,\n  cts_int,\n  res_string,\n  rt_total\n) {\n  const REQUEST_QUERY = `/rate_student?s_id=${s_id}&p_id=${p_id}&res_int=${res_int}&tea_int=${tea_int}&lead_int=${lead_int}&cts_int=${cts_int}&res_string=${res_string}&rt_total=2`;\n  const response = await fetch(`${PORT_HOST.PORT_HOST}${REQUEST_QUERY}`);\n  const confirmation = await response.json();\n  return confirmation;\n}\n","/*\n * File: Rating.js\n * Functionality: Modal for Professors to rate students\n * Author: Jose (Component & Structure) | Aaron (API)\n */\nimport { useState } from \"react\";\nimport \"../../css/Forms.css\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\n//API\nimport API_PROFESSOR_RATE_STUDENT from \"../../../models/POST/Professors/professor_rate\";\n\nconst Rating = (props) => {\n  //Form Inputs\n  const [recommendation, setRecommendation] = useState(\"\");\n  const [responsible, setResponsible] = useState(0);\n  const [teamwork, setTeamWork] = useState(0);\n  const [leadership, setLeadership] = useState(0);\n  const [committedToSuccess, setCommittedToSuccess] = useState(0);\n\n  //Rate Form Submission\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    const sent_bool = await API_PROFESSOR_RATE_STUDENT(\n      props.student, //Student ID\n      props.professor, //Professor ID\n      responsible, //Responsible int\n      teamwork, //Teamwork int\n      leadership, //leaderhsip int\n      committedToSuccess, //int\n      recommendation, //str\n      (responsible + teamwork + leadership + committedToSuccess) / 4 //total rating by average\n    );\n    //If Succesful Sent, Reload Page\n    if (sent_bool === true) {\n      window.location.reload();\n    }\n    if (sent_bool === false) {\n      alert(\"Ratings Unsuccesful\");\n    }\n  };\n\n  return (\n    <Modal {...props} aria-labelledby=\"contained-modal-title-vcenter\" centered>\n      <Form onSubmit={handleSubmit}>\n        <Modal.Header closeButton>\n          <Modal.Title id=\"contained-modal-title-vcenter\">\n            Rate Student\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form.Group>\n            <Form.Label>Recommendation</Form.Label>\n            <Form.Control\n              type=\"text\"\n              as=\"textarea\"\n              onChange={(e) => setRecommendation(e.target.value)}\n              required\n            />\n          </Form.Group>\n\n          <Form.Group controlId=\"responsibility\">\n            <Form.Label>Responsibility</Form.Label>\n            <Form.Control\n              as=\"select\"\n              onChange={(e) => setResponsible(e.target.value)}\n              required\n            >\n              <option></option>\n              <option>1</option>\n              <option>2</option>\n              <option>3</option>\n              <option>4</option>\n              <option>5</option>\n            </Form.Control>\n          </Form.Group>\n\n          <Form.Group controlId=\"teamwork\">\n            <Form.Label>Team Work</Form.Label>\n            <Form.Control\n              as=\"select\"\n              onChange={(e) => setTeamWork(e.target.value)}\n              required\n            >\n              <option></option>\n              <option>1</option>\n              <option>2</option>\n              <option>3</option>\n              <option>4</option>\n              <option>5</option>\n            </Form.Control>\n          </Form.Group>\n\n          <Form.Group controlId=\"leadership\">\n            <Form.Label>Leadership</Form.Label>\n            <Form.Control\n              as=\"select\"\n              onChange={(e) => setLeadership(e.target.value)}\n              required\n            >\n              <option></option>\n              <option>1</option>\n              <option>2</option>\n              <option>3</option>\n              <option>4</option>\n              <option>5</option>\n            </Form.Control>\n          </Form.Group>\n\n          <Form.Group controlId=\"success\">\n            <Form.Label>Committed to Success</Form.Label>\n            <Form.Control\n              as=\"select\"\n              onChange={(e) => setCommittedToSuccess(e.target.value)}\n              required\n            >\n              <option></option>\n              <option>1</option>\n              <option>2</option>\n              <option>3</option>\n              <option>4</option>\n              <option>5</option>\n            </Form.Control>\n          </Form.Group>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"dark\" type=\"submit\">\n            Rate Student\n          </Button>\n        </Modal.Footer>\n      </Form>\n    </Modal>\n  );\n};\n\nexport default Rating;\n","export default __webpack_public_path__ + \"static/media/sent.87e982f4.gif\";","/*\n * File: Rating.js\n * Functionality: Modal for Professors to rate students\n * Author: Jose (Component & Structure) | Aaron (API)\n */\nimport { useState } from \"react\";\nimport \"../../css/Forms.css\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\n// Gif\nimport sent from \"../../content/gif/sent.gif\";\n\nconst Hire = (props) => {\n  return (\n    <Modal\n      {...props}\n      size='sm'\n      aria-labelledby='contained-modal-title-vcenter'\n      centered>\n      <Modal.Header closeButton>\n        <Modal.Title id='contained-modal-title-vcenter'>\n          Notification Sent!\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <img src={sent} alt='loading...' style={{ width: \"100%\" }} id='gif' />\n      </Modal.Body>\n      <Modal.Footer>\n        <Button variant='dark' onClick={() => props.setHirePopup(false)}>\n          Close\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n\nexport default Hire;\n","/**\n * File: insert_student_hire.js\n * Purpose: Insert into student alerts\n * Functionality IE: Send POST request to Backend Server\n * Authors: Aaron\n */\n\nimport PORT_HOST from \"../../../config\";\n\nexport default async function API_INSERT_STUDENT_ALERT(Employer_Hire) {\n  //Request Body & Header Configuration\n  const headers = {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(Employer_Hire),\n  };\n  //Response\n  const response = await fetch(\n    `${PORT_HOST.PORT_HOST}/insert_employer_hire`,\n    headers\n  );\n\n  const status = response.status;\n  return status;\n}\n","/*\nAuthor: Aaron & Jose\nFile: StudentCard.js\n*/\n\n// React\nimport { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useCookies } from \"react-cookie\";\n// CSS\nimport \"../../../css/Search.css\";\n// Default Image (if user has no image)\nimport { defaultImage } from \"../../global/DefaultImage\";\n// React Boostrap\nimport Button from \"react-bootstrap/Button\";\nimport ProgressBar from \"react-bootstrap/ProgressBar\";\n//Pop Up Form\nimport RatingPopup from \"../../forms/Rating\";\nimport HirePopup from \"../../forms/Hire\";\n//API\nimport API_INSERT_STUDENT_ALERT from \"../../../../models/POST/Employers/insert_hire\";\n\nconst StudentCard = ({\n  // default props, if props are empty\n  image = \"\",\n  studentName = \"student name\",\n  rating = 0,\n  gpa = \"0\",\n  schoolName = \"school name\",\n  studentEnrollment = \"\",\n  major = \"undeclared\",\n  studentID = 0,\n  about,\n}) => {\n  // Popups\n  const [ratingPopup, setRatingPopup] = useState(false);\n  const [hirePopup, setHirePopup] = useState(false);\n  //Redirect\n  const history = useHistory();\n  //Cookie\n  const [cookie] = useCookies([\"Type_User\", \"ID_OF_USER\", \"First_Name\"]); //Cur use\n\n  //Redirect to Profile\n  const RedirectProfile = () => {\n    history.push(`/profiles/${studentName.replaceAll(\" \", \"\")}/${studentID}`, {\n      studentName,\n      studentID,\n    });\n  };\n  //Insert Student Alert\n  // const hireB = () => {\n  //   console.log(studentID); //Student ID\n  //   console.log(cookie.ID_OF_USER); //ID of Employer\n  // };\n\n  return (\n    <div className=\"card-result\">\n      <header>\n        <img src={image.length <= 0 ? defaultImage(studentName) : image} alt={studentName.charAt(0)} />\n        <div className=\"info\">\n          <div className=\"flex-box name-enrollment\">\n            <h4>{studentName}</h4>\n            <p id=\"enrollment\">{studentEnrollment}</p>\n          </div>\n          <h6>{schoolName}</h6>\n          <div className=\"flex-box\">\n            <p className=\"gpa\">{gpa} GPA</p>\n            {/* Indicates that there is no ratings for the user if the prop is 0 */}\n            {rating === 0 ? (\n              <p id=\"no-rating\">No ratings yet</p>\n            ) : (\n              <ProgressBar\n                now={rating}\n                label={`${rating}` + \" / 5\"}\n                min=\"0\"\n                max=\"5\"\n                variant=\"info\"\n                style={{ width: \"60%\" }}\n                id=\"progress-bar\"\n              />\n            )}\n          </div>\n        </div>\n      </header>\n      <div className=\"flex-box\" style={{ justifyContent: \"space-around\" }}>\n        {/* Only visible to employers */}\n        {/* {cookie.Type_User === \"employer\" ? (\n          <Button onClick={() => setHirePopup(true)}>Hire</Button>\n        ) : null} */}\n        <HirePopup\n          onClick={() => console.log(\"something\")}\n          show={hirePopup}\n          onHide={() => setHirePopup(false)}\n          setHirePopup={setHirePopup}\n        />\n        {/* Profile Page */}\n        <Button onClick={() => RedirectProfile()}>Profile</Button>\n        {/* Only visible to professors */}\n        {cookie.Type_User === \"professor\" ? <Button onClick={() => setRatingPopup(true)}>Rate</Button> : null}\n        <RatingPopup\n          show={ratingPopup}\n          onHide={() => setRatingPopup(false)}\n          student={studentID}\n          professor={cookie.ID_OF_USER}\n          user={cookie.Type_User}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default StudentCard;\n","// CSS\nimport \"../../css/Theme.css\";\nimport \"../../css/Search.css\";\n// React Boostrap\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\n\nconst SearchBar = ({ keywordFilterHandler, setKeyword, placeholder }) => {\n  return (\n    <div class='header'>\n      <Form id='search-students'>\n        <InputGroup className='mb-3'>\n          <InputGroup.Prepend>\n            <InputGroup.Text id='basic-addon1' className='search-prepend'>\n              Find\n            </InputGroup.Text>\n          </InputGroup.Prepend>\n          <Form.Control\n            placeholder={placeholder}\n            aria-label='text'\n            aria-describedby='basic-addon1'\n            className='search-bar'\n            onChange={(e) => {\n              setKeyword(e.target.value);\n            }}\n          />\n        </InputGroup>\n        <Button\n          type='submit'\n          className='search-btn'\n          onClick={keywordFilterHandler}>\n          Search\n        </Button>\n      </Form>\n    </div>\n  );\n};\n\nexport default SearchBar;\n","import PORT_HOST from \"../../../config\";\nconst API_FETCH_STUDENTS = async (setArr) => {\n  const response = await fetch(`${PORT_HOST.PORT_HOST}/student_cards`);\n  const data = await response.json();\n  // console.log(data);\n  setArr(data);\n  return;\n};\nexport default API_FETCH_STUDENTS;\n","import { useState, useEffect } from \"react\";\n// CSS\nimport \"../../../css/Theme.css\";\nimport \"../../../css/Search.css\";\n// Componenets\nimport StudentFilters from \"./StudentFilters\";\nimport StudentCard from \"./StudentCard\";\nimport StudentSearchBar from \"../SearchBar\";\n//API\nimport API_FETCH_STUDENTS from \"../../../../models/GET/Students/student_cards\";\n\nconst StudentSearch = () => {\n  // All students fetched from DB\n  const [dbStudents, setdbStudents] = useState([]);\n  const [results, setResults] = useState([]); // holds filtered students (avoids having to fetch from DB again)\n  const [activeFilters, setActiveFilters] = useState([]); // Active filters\n  const [schoolYear, setSchoolYear] = useState([]); // Active school year(s)\n  const [strength, setStrength] = useState(\"\");\n  const [gpa, setGPA] = useState({ min: 0, max: 4 });\n  const [rating, setRating] = useState({ min: 0, max: 5 });\n  const [keyword, setKeyword] = useState(\"\"); // Search Bar Keyword storing\n\n  // fetch students from DB && initialize the results\n  useEffect(() => {\n    API_FETCH_STUDENTS(setdbStudents);\n    API_FETCH_STUDENTS(setResults);\n  }, []);\n\n  //filter dbStudents based on the keyword entered\n  const keywordFilterHandler = (e) => {\n    e.preventDefault(); // prevent refresh\n    setResults(dbStudents); // resets results to have the entire students DB\n\n    // filters results based on the input (ONLY if input is not blank)\n    if (keyword !== \"\") {\n      setResults(\n        results.filter((student) => {\n          return (\n            student.first_name.toLowerCase().indexOf(keyword.toLowerCase()) !==\n              -1 ||\n            student.last_name.toLowerCase().indexOf(keyword.toLowerCase()) !==\n              -1 ||\n            student.study_major.toLowerCase().indexOf(keyword.toLowerCase()) !==\n              -1 ||\n            student.school.toLowerCase().indexOf(keyword.toLowerCase()) !==\n              -1 ||\n            student.school_grade_level\n              .toLowerCase()\n              .indexOf(keyword.toLowerCase()) !== -1\n          );\n        })\n      );\n    }\n  };\n\n  // Updates school year(s) list\n  const addSchoolYearHandler = (e) => {\n    // School Year FILTER\n    if (e.target.checked) {\n      setSchoolYear((activeFilters) => [...schoolYear, e.target.value]);\n      // Updates results (adds school year)\n      setResults(\n        results.filter((student) => {\n          return (\n            student.school_grade_level\n              .toLowerCase()\n              .indexOf(e.target.value.toLowerCase()) !== -1\n          );\n        })\n      );\n    } else {\n      setSchoolYear(schoolYear.filter((filter) => filter !== e.target.value));\n      // Updates results (removes school year)\n      setResults(dbStudents);\n    }\n  };\n\n  // Updates active filters\n  const addFilterHandler = (e) => {\n    // Strengths FILTER\n\n    // Area of Study FILTER\n    if (e.target.name === \"degree\") {\n      // Adds to active filters\n\n      setActiveFilters((activeFilters) => [...activeFilters, e.target.value]);\n      // Updates results\n      setResults(\n        results.filter((student) => {\n          return (\n            student.study_major\n              .toLowerCase()\n              .indexOf(e.target.value.toLowerCase()) !== -1\n          );\n        })\n      );\n    }\n\n    // GPA FILTER\n    if (e.target.name === \"gpa\") {\n      // checks input bounds\n      if (parseInt(gpa.max) > 4) setGPA({ ...gpa, max: 4 });\n      if (parseInt(gpa.min) < 0) setGPA({ ...gpa, min: 0 });\n\n      // Adds to active filters\n      setActiveFilters((activeFilters) => [\n        ...activeFilters,\n        \"GPA: \" + gpa.min + \" - \" + gpa.max,\n      ]);\n      // Updates results\n      setResults(\n        results.filter((student) => {\n          return student.school_gpa <= gpa.max && student.school_gpa >= gpa.min;\n        })\n      );\n    }\n\n    // Ratings FILTER\n    if (e.target.name === \"rating\") {\n      // checks input bounds\n      if (parseInt(rating.max) > 5) setRating({ ...rating, max: 5 });\n      if (parseInt(rating.min) < 0) setRating({ ...rating, min: 0 });\n\n      // Adds to active filters\n      setActiveFilters((activeFilters) => [\n        ...activeFilters,\n        \"Rating: \" + rating.min + \" - \" + rating.max,\n      ]);\n      // Updates results\n      setResults(\n        results.filter((student) => {\n          return (\n            student.rating_total <= rating.max &&\n            student.rating_total >= rating.min\n          );\n        })\n      );\n    }\n  };\n\n  return (\n    <>\n      <div className='grid-container'>\n        <StudentSearchBar\n          // placeholder\n          placeholder='Student Name, Major, or Keyword'\n          // keyword filter\n          keywordFilterHandler={keywordFilterHandler}\n          setKeyword={setKeyword}\n        />\n        <StudentFilters\n          // functions\n          addFilterHandler={addFilterHandler}\n          addSchoolYearHandler={addSchoolYearHandler}\n          // Active filters\n          activeFilters={activeFilters}\n          setActiveFilters={setActiveFilters}\n          // School year\n          schoolYear={schoolYear}\n          setSchoolYear={setSchoolYear}\n          // Strengths\n          strength={strength}\n          setStrength={setStrength}\n          // GPA\n          gpa={gpa}\n          setGPA={setGPA}\n          // Rating\n          rating={rating}\n          setRating={setRating}\n        />\n        <div className='results'>\n          {results.length === 0\n            ? \"No Results\"\n            : results.map((student) => (\n                <StudentCard\n                  // image={student.profile_image == null ? `\"\"` : student.profile_image}\n                  image={\"\"}\n                  schoolName={student.school}\n                  studentName={student.first_name + \" \" + student.last_name}\n                  studentEnrollment={student.school_grade_level}\n                  major={student.study_major}\n                  rating={student.rating_total}\n                  gpa={student.school_gpa}\n                  year={student.start_year}\n                  about={student.about_me}\n                  studentID={student.student_id}\n                />\n              ))}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default StudentSearch;\n","// CSS\nimport \"../../../css/Theme.css\";\nimport \"../../../css/Search.css\";\n// SFSU Areas of Study Data imported\nimport Data from \"../../../content/data/AreasOfStudy.json\";\n// React Boostrap\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport Accordion from \"react-bootstrap/Accordion\";\nimport Card from \"react-bootstrap/Card\";\n\nconst JobFilters = ({\n  // functions\n  addFilterHandler,\n  addEmployementType,\n  // Active filters\n  activeFilters,\n  setActiveFilters,\n  // Employement Type\n  employementType,\n  setEmployementType,\n  // Salary\n  salary,\n  setSalary,\n}) => {\n  return (\n    <div className='filter'>\n      {/* Heading */}\n      <h4>Filters</h4>\n\n      {/* Active Filters */}\n      <div className='active-filter-box'>\n        {employementType?.map((filter) => (\n          <div id={filter.id} className='active-filter'>\n            {filter}\n            <button\n              onClick={(e) => {\n                // removes the filter from useState\n                setEmployementType(\n                  employementType.filter(\n                    (filter) => !filter.localeCompare(e.target.value)\n                  )\n                );\n\n                // resets check value to false\n                e.target.checked = false;\n                // console.log(filter);\n              }}>\n              {\" \"}\n              x{\" \"}\n            </button>\n          </div>\n        ))}\n        {/* all active filters except school year */}\n        {activeFilters?.map((filter) => (\n          <div id={filter.id} className='active-filter'>\n            <span>{filter}</span>\n            <button\n              onClick={(e) => {\n                // removes the filter from useState\n                setActiveFilters(\n                  activeFilters.filter(\n                    (filter) => !filter.localeCompare(e.target.value)\n                  )\n                );\n                // resets check value to false\n                e.target.checked = false;\n                // console.log(filter);\n              }}>\n              {\" \"}\n              x{\" \"}\n            </button>\n          </div>\n        ))}\n      </div>\n\n      {/* Form */}\n      <Form id='filter-students'>\n        <Accordion defaultActiveKey=''>\n          {/* Student Year Filter */}\n          <Form.Group>\n            <Card>\n              <Accordion.Toggle as={Card.Header} eventKey='0'>\n                Type of Employement\n              </Accordion.Toggle>\n              <Accordion eventKey='0'>\n                <Card.Body>\n                  <Form.Check\n                    type='checkbox'\n                    label='Full Time'\n                    value='Full Time'\n                    onClick={addEmployementType}\n                    className='checkbox'\n                  />\n                  <Form.Check\n                    type='checkbox'\n                    label='Part Time'\n                    value='Part Time'\n                    onClick={addEmployementType}\n                  />\n                  <Form.Check\n                    type='checkbox'\n                    label='Internship'\n                    value='Internship'\n                    onClick={addEmployementType}\n                  />\n                  <Form.Check\n                    type='checkbox'\n                    label='Contract'\n                    value='Contract'\n                    onClick={addEmployementType}\n                  />\n                  <Form.Check\n                    type='checkbox'\n                    s\n                    label='Remote'\n                    value='Remote'\n                    onClick={addEmployementType}\n                  />\n                </Card.Body>\n              </Accordion>\n            </Card>\n          </Form.Group>\n\n          {/* Salary Filter */}\n          <Form.Group>\n            <Card>\n              <Accordion.Toggle as={Card.Header} eventKey='3'>\n                Annual Salary\n              </Accordion.Toggle>\n              <Accordion eventKey='3'>\n                <Card.Body>\n                  <InputGroup className='mb-3'>\n                    <Form.Control\n                      placeholder='From'\n                      aria-label='Salary-from'\n                      aria-describedby='basic-addon1'\n                      onChange={(e) =>\n                        setSalary({\n                          ...salary,\n                          min: e.target.value,\n                        })\n                      }\n                    />\n                    <Form.Control\n                      placeholder='To'\n                      aria-label='Salary-to'\n                      aria-describedby='basic-addon1'\n                      onChange={(e) =>\n                        setSalary({\n                          ...salary,\n                          max: e.target.value,\n                        })\n                      }\n                    />\n                    <InputGroup.Append>\n                      <Button\n                        variant='outline-secondary'\n                        className='btn-fill'\n                        name='salary'\n                        onClick={addFilterHandler}>\n                        +\n                      </Button>\n                    </InputGroup.Append>\n                  </InputGroup>\n                </Card.Body>\n              </Accordion>\n            </Card>\n          </Form.Group>\n        </Accordion>\n      </Form>\n    </div>\n  );\n};\n\nexport default JobFilters;\n","export default __webpack_public_path__ + \"static/media/location-icon.c6935b6d.svg\";","export default __webpack_public_path__ + \"static/media/demo-card-profile.e74de8e1.svg\";","/**\n * File: insert_student_apply.js\n * Purpose: Students to Company Alerts for Job Application\n * Functionality IE: Send POST request to Backend Server\n * Authors: Aaron\n */\n\nimport PORT_HOST from \"../../../config\";\n\nexport default async function API_INSERT_STUDENT_APPLICATION(\n  Student_Application\n) {\n  //Request Body & Header Configuration\n  const headers = {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(Student_Application),\n  };\n  //Response\n  const response = await fetch(\n    `${PORT_HOST.PORT_HOST}/insert_student_application`,\n    headers\n  );\n\n  const status = response.status;\n  return status;\n}\n","/*\n * File: JobCard.js\n * Functionality: Creates Card Component for jobs available within results\n * Author: Jose\n * Author: Aaron & Roland , apply and full window page\n */\n\nimport { useHistory } from \"react-router-dom\";\n// CSS\nimport \"../../../css/Theme.css\";\nimport \"../../../css/Search.css\";\n// Import SVG Icons\nimport LocationIcon from \"../../../content/svg/location-icon.svg\";\n// Default Image (if user has no image)\nimport { defaultImage } from \"../../global/DefaultImage\";\n// Image(s) or SVG\nimport circle from \"../../../content/svg/demo-card-profile.svg\";\n// React Boostrap\nimport Button from \"react-bootstrap/Button\";\n//Popop Form\nimport Popup from \"reactjs-popup\";\n//Cookie\nimport { useCookies } from \"react-cookie\";\n//API\nimport API_INSERT_STUDENT_APPLICATION from \"../../../../models/POST/Students/insert_student_apply\";\n//Pop Up for Apply Button\nimport \"reactjs-popup/dist/index.css\";\nconst JobCard = ({\n  image = \"\",\n  Listing_ID = 0,\n  Employer_ID = 0,\n  PositionTitle = \"\",\n  CompanyName = \"\",\n  Income = 0,\n  AboutUs = \"\",\n  JobType = \"\",\n  Location = \"\",\n}) => {\n  const history = useHistory();\n  const [cookie] = useCookies([\"Type_User\", \"ID_OF_USER\", \"First_Name\"]); //Current User\n  const Redirect_Job_View = (Listing_ID) => {\n    history.push(`/postings/${CompanyName}/${PositionTitle.replaceAll(\" \", \"\")}/${Listing_ID}`, {\n      Listing_ID,\n    });\n  };\n  const Apply_Job = async (Student_ID) => {\n    const response = await API_INSERT_STUDENT_APPLICATION({\n      student_id: ` ${Student_ID}`,\n      employer_id: `${Employer_ID}`,\n      listing_id: `${Listing_ID}`,\n    });\n    if (response === 200) {\n      // console.log(\"application success\");\n    }\n    if (response === 400) {\n      alert(\"application error\");\n    }\n  };\n\n  return (\n    <div className=\"card-result\">\n      <header>\n        <img src={image.length <= 0 ? defaultImage(CompanyName) : image} alt={CompanyName.charAt(0)} />\n        <div className=\"info\">\n          <div className=\"name-enrollment\">\n            <h4 style={{ paddingBottom: \"10px\" }}>{PositionTitle}</h4>\n          </div>\n\n          <div className=\"flex-box\">\n            <h6 style={{ marginRight: \"0.5rem\" }}>{CompanyName}</h6>\n            <p id=\"enrollment\" style={{ marginTop: \"-.2rem\" }}>\n              {JobType}\n            </p>\n            <p id=\"salary\">${String(Income).slice(0, -3)}k / yr</p>\n          </div>\n          <div className=\"flext-box\" style={{ marginTop: \"-.7rem\" }}>\n            <img src={LocationIcon} alt=\"location pin\" id=\"location\" />\n            <span>{Location}</span>\n          </div>\n        </div>\n      </header>\n      <div className=\"flex-box\">\n        <Button onClick={() => Redirect_Job_View(Listing_ID)}>View</Button>\n        {cookie.Type_User != \"student\" ? (\n          <Popup trigger={<Button> Apply</Button>}>\n            <div>Log In As Student</div>\n          </Popup>\n        ) : (\n          <Button onClick={() => Apply_Job(cookie.ID_OF_USER)}>Apply</Button>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default JobCard;\n","import PORT_HOST from \"../../../config\";\nconst API_JOB_LISTINGS_FETCH = async (setArr) => {\n  const response = await fetch(`${PORT_HOST.PORT_HOST}/job_cards`);\n  const data = await response.json();\n  // console.log(data);\n  setArr(data);\n  return;\n};\nexport default API_JOB_LISTINGS_FETCH;\n","import { useState, useEffect } from \"react\";\n// CSS\nimport \"../../../css/Theme.css\";\nimport \"../../../css/Search.css\";\n// Componenets\nimport JobFilters from \"./JobFilters\";\nimport JobSearchBar from \"../SearchBar\";\n// React Boostrap\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport JobCard from \"./JobCard\";\n\n//API\nimport API_JOB_LISTINGS_FETCH from \"../../../../models/GET/Jobs/job_cards\";\nimport API_JOB_LISTINGS_FETCH_FILTER from \"../../../../models/GET/Jobs/job_filters\";\n\nconst JobSearch = () => {\n  const [dbJobListings, setdbJobListings] = useState([]); //Search Results\n  const [results, setResults] = useState([]); // holds filtered students (avoids having to fetch from DB again)\n  const [activeFilters, setActiveFilters] = useState([]); // Active filters\n  const [employementType, setEmployementType] = useState([]);\n  const [salary, setSalary] = useState({ min: 0, max: 999999 });\n  const [keyword, setKeyword] = useState(\"\"); // Search Bar Keyword storing\n\n  // fetch jobs from DB && initialize the results\n  useEffect(() => {\n    API_JOB_LISTINGS_FETCH(setdbJobListings);\n    API_JOB_LISTINGS_FETCH(setResults);\n  }, []);\n\n  //filter dbJobs based on the keyword entered\n  const keywordFilterHandler = (e) => {\n    e.preventDefault(); // prevent refresh\n    setResults(dbJobListings); // resets results to have the entire students DB\n\n    // filters results based on the input (ONLY if input is not blank)\n    if (keyword !== \"\") {\n      setResults(\n        results.filter((jobs) => {\n          return (\n            jobs.organization_name\n              .toLowerCase()\n              .indexOf(keyword.toLowerCase()) !== -1 ||\n            jobs.position_title.toLowerCase().indexOf(keyword.toLowerCase()) !==\n              -1 ||\n            jobs.job_type.toLowerCase().indexOf(keyword.toLowerCase()) !== -1\n          );\n        })\n      );\n    }\n  };\n\n  // Updates employement type  list\n  const addEmployementType = (e) => {\n    // School Year FILTER\n    if (e.target.checked) {\n      setEmployementType((activeFilters) => [\n        ...employementType,\n        e.target.value,\n      ]);\n      // Updates results (adds school year)\n      setResults(\n        results.filter((jobs) => {\n          return (\n            jobs.job_type\n              .toLowerCase()\n              .indexOf(e.target.value.toLowerCase()) !== -1\n          );\n        })\n      );\n    } else {\n      setEmployementType(\n        employementType.filter((filter) => filter !== e.target.value)\n      );\n      // Updates results (removes school year)\n      setResults(dbJobListings);\n    }\n  };\n\n  // Updates active filters\n  const addFilterHandler = (e) => {\n    // Strengths FILTER\n\n    // Employement Type FILTER\n    if (e.target.name === \"employement\") {\n      // Adds to active filters\n      setActiveFilters((activeFilters) => [...activeFilters, e.target.value]);\n      // Updates results\n      setResults(\n        results.filter((jobs) => {\n          return (\n            jobs.position_title\n              .toLowerCase()\n              .indexOf(e.target.value.toLowerCase()) !== -1\n          );\n        })\n      );\n    }\n\n    // GPA FILTER\n    if (e.target.name === \"salary\") {\n      // checks input bounds\n      if (parseInt(salary.max) > 999999) setSalary({ ...salary, max: 999999 });\n      if (parseInt(salary.min) < 0) setSalary({ ...salary, min: 0 });\n\n      // Adds to active filters\n      setActiveFilters((activeFilters) => [\n        ...activeFilters,\n        \"Salary: \" + salary.min + \" - \" + salary.max,\n      ]);\n      // Updates results\n      setResults(\n        results.filter((jobs) => {\n          return jobs.salary <= salary.max && jobs.salary >= salary.min;\n        })\n      );\n    }\n  };\n\n  return (\n    <>\n      <div className=\"grid-container\">\n        <JobSearchBar\n          // placeholder\n          placeholder=\"Job Title, Company, or Keywords\"\n          keywordFilterHandler={keywordFilterHandler}\n          setKeyword={setKeyword}\n        />\n        <JobFilters\n          // functions\n          addFilterHandler={addFilterHandler}\n          addEmployementType={addEmployementType}\n          // Active filters\n          activeFilters={activeFilters}\n          setActiveFilters={setActiveFilters}\n          // Employement Type\n          employementType={employementType}\n          setEmployementType={setEmployementType}\n          // Salary\n          salary={salary}\n          setSalary={setSalary}\n        />\n        <div className=\"results\">\n          {/** IF Database Not Connected */}\n          {results.length === 0\n            ? \"No Results\"\n            : results.map((job) => (\n                <JobCard\n                  // image={job.profile_image == null ? `\"\"` : job.profile_image}\n                  Listing_ID={job.listing_id}\n                  Employer_ID={job.employer_id}\n                  PositionTitle={job.position_title}\n                  CompanyName={job.organization_name}\n                  Salary={job.salary}\n                  Income={job.salary}\n                  JobType={job.job_type}\n                  AboutUs={job.about_us}\n                  Location={job.location}\n                />\n              ))}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default JobSearch;\n","/*\n * File: MemberCard.js\n * Functionality: Produces User's Card\n * Author: Jose (Component & Structure)\n */\n\nimport \"../../css/About.css\";\n\nconst MemberCard = ({ member }) => {\n  return (\n    <div className='member-card'>\n      <div className='member-box'>\n        <img src={member.img} className='member-img' alt='' />\n        <h2 className='member-name'>{member.fullname}</h2>\n        <h3 className='member-role'>{member.role}</h3>\n      </div>\n    </div>\n  );\n};\n\nexport default MemberCard;\n","export default __webpack_public_path__ + \"static/media/Joses-Selfie.8dee5326.JPG\";","export default __webpack_public_path__ + \"static/media/aaron-pic.393cd869.jpg\";","export default __webpack_public_path__ + \"static/media/Lyra.6ac42b9a.jpg\";","export default __webpack_public_path__ + \"static/media/Roland.a06fa5a0.JPG\";","/*\n * File: About.js\n * Functionality: Lets People know about us\n * Author: Jose (Component & Structure)\n */\n\nimport { useState , useEffect} from \"react\";\nimport MemberCard from \"./MemberCard\";\nimport \"../../css/About.css\";\nimport { Link } from \"react-router-dom\";\n\n// Selfies\nimport JoseSelfie from \"../../content/images/Joses-Selfie.JPG\";\nimport AaronSelfie from \"../../content/images/aaron-pic.jpg\";\nimport LyraSelfie from \"../../content/images/Lyra.jpg\";\nimport RolandSelfie from \"../../content/images/Roland.JPG\";\n\nconst About = () => {\n  const [members, setMembers] = useState([\n    {\n      id: 0,\n      fullname: \"Lyra Solomon\",\n      role: \"Design Lead\",\n      desc:\n        \"I am a computer science major and philosophy minor at San Francisco State University. I firmly believe in accessibility, transparency, and justice. In my free time, I enjoy listening to music and making food for my friends.\",\n      img: LyraSelfie,\n    },\n    {\n      id: 1,\n      fullname: \"Jose Gonzalez\",\n      role: \"Front End Lead\",\n      desc:\n        \"Hey! I have recently become a San Francisco Gator! I transitioned to SFSU from Los Medanos Community College. I will be graduating Spring 2021 with a Bachelor of Science. I am full of random facts that have no purpose other than bringing them up during conversations.\",\n      img: JoseSelfie,\n    },\n    {\n      id: 2,\n      fullname: \"Aaron Singh\",\n      role: \"Backend Lead\",\n      desc:\n        \"Hi, my name is Aaron! I'm in my junior year of school studying cs. I really like javascript because application logic and visual components are linked so it makes intuitive sense while being fun!\",\n      img: AaronSelfie,\n    },\n    {\n      id: 3,\n      fullname: \"Roland Lee\",\n      role: \"Team Lead/Github Master\",\n      desc:\n        \"Nice to meet you, my name is Roland. This will be my last semester at SFSU. Besides this project, I'm currently working on my first mobile application and Unity game using C#.\",\n      img: RolandSelfie,\n    },\n  ]);\n\n  return (\n    <div>\n      <h1 className='mini-title'>About Us</h1>\n      <div className='about-box'>\n        <div className='center-flex'>\n          {members.map((member) => (\n            <Link\n              key={member.id}\n              to={{\n                pathname: `about/member/${member.fullname}`,\n                state: member,\n\n              }}\n              className='link'>\n              <MemberCard member={member}/>\n            </Link>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default About;\n","import \"../../css/Help.css\";\n\nconst Help = () => {\n  return (\n    <div>\n      <h1 className='mini-title'>Contact Us</h1>\n      <p className='short-par'>This page is coming soon!</p>\n    </div>\n  );\n};\n\nexport default Help;\n","/**\n * File: delete_job.js\n * Purpose: Delete selected job\n * Functionality IE: Send DELETE request to Backend Server\n * Authors: Roland\n */\n\nimport PORT_HOST from \"../../config\";\n\nexport default async function API_REMOVE_JOB(listing_id) {\n  const header = { method: \"DELETE\" };\n  const REQUEST_QUERY = `/delete_job?id=${listing_id}`;\n  const response = await fetch(`${PORT_HOST.PORT_HOST}${REQUEST_QUERY}`, header);\n  return response;\n}\n","import PORT_HOST from \"../../../config\";\n\nexport default async function API_UPDATE_STUDENT_RATING_NOTIFICATION(\n  reflection_id, table\n) {\n  const headers = { method: \"PUT\" };\n  const REQUEST_QUERY = `/student-ratings?id=${reflection_id}&table=${table}`;\n  const response = await fetch(\n    `${PORT_HOST.PORT_HOST}${REQUEST_QUERY}`,\n    headers\n  );\n  return response;\n}\n","import { useState, useEffect } from \"react\";\nimport { useCookies } from \"react-cookie\";\n\nimport \"../../../css/CompanyAlert.css\"\nimport Button from \"react-bootstrap/Button\";\nimport Collapsible from \"react-collapsible\";\n\nimport API_REMOVE_JOB from \"../../../../models/DELETE/delete_job\";\nimport API_UPDATE_STUDENT_RATING_NOTIFICATION from \"../../../../models/PUT/Students/update_ratings_notification\";\nimport API_INSERT_STUDENT_ALERT from \"../../../../models/POST/Employers/insert_hire\";\nconst CompanyProfile = (props) => {\n  const [cookie] = useCookies([\"Type_User\", \"ID_OF_USER\", \"First_Name\"]); //Cur use\n  const [activeComponent, setActiveComponent] = useState([]);\n  const [userProfilee, setUserProfilee] = useState([\n    [{ null: \"null\" }, { null: \"null\" }],\n    [{ null: \"null\" }, { null: \"null\" }],\n    [{ null: \"null\" }, { null: \"null\" }],\n    [{ null: \"null\" }, { null: \"null\" }],\n    [{ null: \"null\" }, { null: \"null\" }],\n    { null: \"null\" },\n  ]);\n\n  const removeJob = async (listing_id) => {\n    const response = await API_REMOVE_JOB(listing_id);\n    if (response.status === 400) alert(\"Failed to remove\");\n    if (response.status === 200)\n    window.location.reload();\n  };\n\n  const assignment = (listing_id) => {\n    // console.log(\"list:\"+listing_id);\n    setActiveComponent([...activeComponent, listing_id]);\n    // console.log(\"active\");\n    // console.log(\"assign\",activeComponent);\n  };\n\n  const handleRemoveItem = (listing_id) => {\n    setActiveComponent(activeComponent.filter((item) => item !== listing_id));\n    // console.log(\"remove\",activeComponent);\n  };\n\n  const seenNotification = async (compalert_id, table) => {\n    const response = await API_UPDATE_STUDENT_RATING_NOTIFICATION(compalert_id, table);\n    if (response.status == 400) {\n      alert(\"Failed to Update\");\n    }\n    if (response.status == 200) {\n      // console.log(\"Sucess \");\n      window.location.reload();\n    }\n  };\n\n  function converter(dataitem) {\n    if (dataitem) {\n      var t = dataitem.split(/[- : T]/);\n      var d = new Date(Date.UTC(t[0], t[1] - 1, t[2], t[3], t[4]));\n      d = d.toString().split(\" \");\n      return d[1] + \" \" + d[2] + \", \" + d[3];\n    }\n  }\n  const Employer_Information = userProfilee[0].map((data) => (\n    <div>\n      <p>Name: {data.first_name + data.last_name}</p>\n      <p>Organization: {data.organization_name}</p>\n      <p>Email: {data.email}</p>\n    </div>\n  ));\n\n  var Employer_Jobs_Openings =\n    userProfilee[1].length == 0\n      ? \"Empty\"\n      : userProfilee[1].map((data) => (\n          <div>\n            <p>Job Title: {data.position_title} </p>\n            <p>Location: {data.location}</p>\n            <p>Job Type: {data.job_type}</p>\n            <p>Experience Years: {data.experience_years}</p>\n            <p>Salary: {data.salary}</p>\n            <p>Skillset : {data.skillset}</p>\n            <p>Task Responsibilites: {data.task_responsibilities}</p>\n            <p>The Opportunity: {data.the_opportunity}</p>\n          </div>\n        ));\n\n  //Insert Student Alert\n  const hireB = async (studentID, ListingID, company_alert) => {\n    // console.log(\"Student ID\", studentID); //Student ID\n    // console.log(\"Listing ID\", ListingID); //Listing ID\n    // console.log(\"Cookie of User\", cookie.ID_OF_USER); //ID of Employer\n    const response = await API_INSERT_STUDENT_ALERT({\n      employer_id: cookie.ID_OF_USER,\n      student_id: studentID,\n      listing_id: ListingID,\n    });\n    if (response == 200) {\n      // console.log(\"Success Hire\");\n      seenNotification(company_alert);\n\n      //hide notification\n    }\n    if (response == 400) {\n      alert(\"insert student alert fail\");\n    }\n  };\n  var Employer_Find_Candidates =\n    userProfilee[2].length == 0\n      ? \"Empty\"\n      : userProfilee[2].map((data) => (\n          <div className=\"candidate-found\">\n            {activeComponent.map((active) => {\n              if (active === data.listing_id && data.hidden === 0) {\n                return (\n                  <>\n                    <p>\n                      {/* <strong>Alert</strong>: {data.compalert_id} */}\n                    </p>\n                    <p>Notified {converter(data.time)}</p>\n                    {/* <p>student_id: {data.student_id}</p>\n                    <p>listing_id: {data.listing_id}</p> */}\n                    {userProfilee[3].map((value) => {\n                      if (data.student_id === value.id) {\n                        return (\n                          <>\n                            <p>\n                              <strong>Candidate: </strong>\n                              {value.first_name + \" \" + value.last_name}\n                            </p>\n                            <p>\n                              <strong>School: </strong>\n                              {value.school_name}\n                            </p>\n                            <p>\n                              <strong>Major: </strong>\n                              {value.study_major}\n                            </p>\n                            <p>\n                              <strong>School Year: </strong>\n                              {value.school_grade_level}\n                            </p>\n                            <Button variant='dark' onClick={() => hireB(data.student_id, data.listing_id, data.compalert_id)}>\n                              HIRE\n                            </Button>\n                            <Button variant='dark' onClick={() => seenNotification(data.compalert_id, \"company_alerts\")}>Hide</Button>\n                            <br></br>\n                            <br></br>\n                          </>\n                        );\n                      }\n                    })}\n                  </>\n                );\n              }\n            })}\n          </div>\n        ));\n\n  useEffect(() => {\n    setUserProfilee(props);\n  }, [props]);\n\n  if (window.location.pathname === \"/notifications\") {\n    Employer_Jobs_Openings = userProfilee[1].map((data) => (\n      <div>\n        <Collapsible\n          trigger={data.position_title + \" #\" + data.listing_id}\n          onOpen={() => assignment(data.listing_id)}\n          onClose={() => handleRemoveItem(data.listing_id)}\n        >\n          <div>\n            <p>Location: {data.location}</p>\n            <p>Job Type: {data.job_type}</p>\n            <p>Experience Years: {data.experience_years}</p>\n            <p>Salary: {data.salary}</p>\n            <p>Skillset : {data.skillset}</p>\n            <p>Task Responsibilites: {data.task_responsibilities}</p>\n            <p>The Opportunity: {data.the_opportunity}</p>\n          </div>\n        </Collapsible>\n        <Button variant='dark' onClick={() => removeJob(data.listing_id)}>DELETE</Button>\n      </div>\n    ));\n\n    return (\n      <div>\n        <h3 style={{ textAlign: \"center\", marginTop: \"2rem\", fontWeight: \"600\" }}><strong>Alerts</strong></h3>\n        {Employer_Jobs_Openings}\n        <h3><strong>Candidates Found</strong></h3>\n        {Employer_Find_Candidates}\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      <h3>Employer Information</h3>\n      {Employer_Information}\n      <h3>Employer Jobs Made</h3>\n      {Employer_Jobs_Openings}\n    </div>\n  );\n};\n\nexport default CompanyProfile;\n","import PORT_HOST from \"../../../config\";\nconst API_STUDENT_RATING_NOTIFICATIONS = async (setArr, setHiredNotification, student_identifier) => {\n  const response = await fetch(`${PORT_HOST.PORT_HOST}/student-ratings?s_id=${student_identifier}`);\n  const data = await response.json();\n  const dataHired = await fetch(`${PORT_HOST.PORT_HOST}/get-student-alerts?s_id=${student_identifier}`);\n  const dataHired_response = await dataHired.json();\n  if (data == 400) {\n    //Dont set the data\n    return;\n  } else {\n    // console.log(\"Ratings\", data);\n    // console.log(\"Hired Response\", dataHired_response);\n    setArr(data);\n    setHiredNotification(dataHired_response);\n  }\n  return;\n};\nexport default API_STUDENT_RATING_NOTIFICATIONS;\n","import PORT_HOST from \"../../../config\";\n\nconst API_FIND_CANDIDATE = async(student_id) => {\n  const header = {method: \"GET\"};\n  const REQUEST_QUERY = `/find_student?id=${student_id}`;\n  const response = await fetch(\n    `${PORT_HOST.PORT_HOST}${REQUEST_QUERY}`,\n    header\n  );\n  const data = await response.json();\n  if (data == 400) {\n    //Dont set the data\n    return;\n  } else {\n    var tempArr = [{id: student_id}];\n    // console.log(tempArr);\n    for (let i = 0; i < data.length; i++) {\n     tempArr = tempArr.concat(data[i]);\n    }\n    //console.log(\"b4\",tempArr);\n    tempArr = Object.assign({}, ...tempArr);\n    //console.log(tempArr);\n    return tempArr;\n  }\n};\nexport default API_FIND_CANDIDATE;\n","import PORT_HOST from \"../../config\";\nimport API_FIND_CANDIDATE from \"../GET/Students/student_info\";\n\nexport default async function API_USER_GET_PROFILE(typeUser, idr, setState) {\n  const response = await fetch(`${PORT_HOST.PORT_HOST}/profile?ts=${typeUser}&bs=${idr}`);\n  var data = await response.json();\n  //if condition\n  //data [[0], [1], [2]]\n  //if (data[[2]])\n  // console.log(\"whole data: \",data);\n  if (typeUser === \"employer\") {\n    var uniqueList = [];\n    var output = [];\n    for (let i = 0; i < data[2].length; i++) {\n      uniqueList.push(data[2][i].student_id);\n    }\n    uniqueList = Array.from(new Set(uniqueList));\n    // console.log(\"uniqueList\",uniqueList);\n    for (let i = 0; i < uniqueList.length; i++) {\n      output.push(API_FIND_CANDIDATE(uniqueList[i]));\n    }\n    // console.log(\"output\",output);\n    output = await Promise.all(output);\n    // console.log(\"output\", output);\n    data.push(output);\n    // console.log(\"whole data: \", data);\n  }\n  setState(data);\n  return data;\n}\n","import { useEffect, useState } from \"react\";\nimport { useCookies } from \"react-cookie\";\nimport CompanyProfile from \"../profiles/company/CompanyProfile\";\nimport Collapsible from \"react-collapsible\";\n\nimport API_STUDENT_RATING_NOTIFICATIONS from \"../../../models/GET/Students/rating_notifications\";\nimport API_UPDATE_STUDENT_RATING_NOTIFICATION from \"../../../models/PUT/Students/update_ratings_notification\";\nimport API_USER_GET_PROFILE from \"../../../models/GET/user_profile\";\n\nfunction converter(dataitem) {\n  if (dataitem) {\n    var t = dataitem.split(/[- : T]/);\n    var d = new Date(Date.UTC(t[0], t[1] - 1, t[2], t[3], t[4]));\n    d = d.toString().split(\" \");\n    return d[1] + \" \" + d[2] + \", \" + d[3];\n  }\n}\n\nconst Notifications = () => {\n  useEffect(() => {\n    if (cookie.Type_User === \"student\") {\n      API_STUDENT_RATING_NOTIFICATIONS(setRatingNotifications, setHiredNotifications, cookie.ID_OF_USER);\n      //Pass in Student ID and pull corresponding data\n    }\n    if (cookie.Type_User === \"employer\") {\n      API_USER_GET_PROFILE(cookie.Type_User, cookie.ID_OF_USER, setuserProfile);\n    }\n  }, []);\n  const [cookie] = useCookies([\"Type_User\", \"ID_OF_USER\", \"First_Name\"]); //Current User\n  const [ratingNotifications, setRatingNotifications] = useState([]);\n  const [hiredNotifications, setHiredNotifications] = useState([]);\n  //Employed Jobs\n  const [userProfile, setuserProfile] = useState([\n    [{ null: \"null\" }, { null: \"null\" }],\n    [{ null: \"null\" }, { null: \"null\" }],\n    [{ null: \"null\" }, { null: \"null\" }],\n    [{ null: \"null\" }, { null: \"null\" }],\n    [{ null: \"null\" }, { null: \"null\" }],\n    [{ null: \"null\" }, { null: \"null\" }],\n  ]);\n\n  function converter(dataitem) {\n    if (dataitem) {\n      var t = dataitem.split(/[- : T]/);\n      var d = new Date(Date.UTC(t[0], t[1] - 1, t[2], t[3], t[4]));\n      d = d.toString().split(\" \");\n      return d[1] + \" \" + d[2] + \", \" + d[3];\n    }\n  }\n\n  const seenNotification = async (reflection_id, table) => {\n    // console.log(`Reflection ID: ${reflection_id}`);\n    const response = await API_UPDATE_STUDENT_RATING_NOTIFICATION(reflection_id, table);\n    if (response.status == 400) {\n      alert(\"Failed to Update\");\n    }\n    if (response.status == 200) {\n      // console.log(\"Sucess \");\n      window.location.reload();\n    }\n  };\n\n  var seen_notifications = [];\n  const unseen_notifications =\n    ratingNotifications.length == 0\n      ? `Empty`\n      : ratingNotifications.map((row) => {\n          //Not Seen\n          if (row.student_seen == 0 && row.student_hide == 0) {\n            return (\n              <>\n                <tr>\n                  <td>\n                    <b>Professor </b>: {row.first_name}\n                  </td>\n                  <td>\n                    <b>Time Rated</b> {converter(row.publish_date)}\n                  </td>\n                  <td>\n                    <b>Rating Total</b> {row.rating_total}\n                  </td>\n                  <td>\n                    <button onClick={() => seenNotification(row.reflection_id, \"student_ratings\")}>HIDE</button>\n                  </td>\n                </tr>\n              </>\n            );\n            //Seen and Not Deleted by Student\n          }\n        });\n\n  //Fetch Notification\n  if (cookie.Type_User === \"student\") {\n    return (\n      <div>\n        <h4>Student Notifications for Professor Ratings | Employer Interest</h4>\n        <hr></hr>\n        <div>\n          <h4>Rating UnSeen Ratings Notifications</h4>\n          {unseen_notifications}\n        </div>\n        <hr></hr>\n        <div>\n          <h4>Applications Outgoing Fullfilled Notification</h4>\n          {/** Remove PASSWORD TODO */}\n          {/** Check Logs for all information, password will be removed eventually */}\n          {hiredNotifications.map((data) => {\n            if (data.hidden === 0) {\n              return (\n                <>\n                  <Collapsible\n                    trigger={\n                      <p>\n                        <strong>Message From: </strong>\n                        {data.organization_name} on {converter(data.time)}\n                      </p>\n                    }\n                  >\n                    <p>\n                      Congratulations, this letter is to certify that I,{data.first_name} {data.last_name}, have\n                      examined your application\n                    </p>\n                    <p>and believe you to be perfect for {data.position_title} position.</p>\n                    <p>Please contact us at {data.email} to set up an interview.</p>\n                  </Collapsible>\n                  <button onClick={() => seenNotification(data.stualert_id, \"student_alerts\")}>HIDE</button>\n                </>\n              );\n            }\n          })}\n        </div>\n        <hr></hr>\n      </div>\n    );\n  }\n  if (cookie.Type_User === \"employer\") {\n    return (\n      <div>\n        <div>\n          <>\n            <CompanyProfile {...userProfile} />\n          </>\n        </div>\n      </div>\n    );\n  }\n  return (\n    <div>\n      <h1>Notifications are enabled for employers and students. Please sign in as an employer or student.</h1>\n    </div>\n  );\n};\nexport default Notifications;\n","/*\n * File: MemberPage.js\n * Functionality: Produces User's Page\n * Author: Jose (Component & Structure)\n */\n\nimport \"../../css/About.css\";\n\nconst MemberPage = ({ location }) => {\n  return (\n    <div className='member-box'>\n      <img src={location.state.img} className='member-img' alt='' />\n      <h1 className='member-name'>{location.state.fullname}</h1>\n      <h2 className='member-role'>{location.state.role}</h2>\n      <p className='member-desc'>{location.state.desc}</p>\n    </div>\n  );\n};\n\nexport default MemberPage;\n","export default __webpack_public_path__ + \"static/media/edit-icon.ebb08039.svg\";","export default __webpack_public_path__ + \"static/media/add-icon.4c0ab963.svg\";","export default __webpack_public_path__ + \"static/media/project-icon.bce56e66.svg\";","export default __webpack_public_path__ + \"static/media/experience-icon.a4754107.svg\";","export default __webpack_public_path__ + \"static/media/education-icon.d2f95989.svg\";","import PORT_HOST from \"../../../config\";\n\nexport default async function API_UPDATE_STUDENT_ABOUT_ME(\n  student_id,\n  about_me\n) {\n  const headers = { method: \"PUT\" };\n  const REQUEST_QUERY = `/about-me?id=${student_id}&about_me=${about_me}`;\n  const response = await fetch(\n    `${PORT_HOST.PORT_HOST}${REQUEST_QUERY}`,\n    headers\n  );\n\n  return response;\n}\n","/*\n * File: Description.js\n * Functionality: Modal for Students, Professors, and Companies to add or edit their About Me\n * Author: Jose (Component & Structure) | Aaron (API)\n */\n\nimport \"../../css/Forms.css\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\n//API\nimport API_UPDATE_STUDENT_ABOUT_ME from \"../../../models/PUT/Students/update_about\";\nconst Description = (props) => {\n  // Submits the 'About' or 'Why us' to the DB\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    // console.log(props.userID);\n    const response = await API_UPDATE_STUDENT_ABOUT_ME(\n      props.userID,\n      e.target[1].value //about me description\n    );\n    //Refresh if Update is Succesful\n    if (response.status === 200) {\n      window.location.reload();\n    }\n    if (response.status === 400) {\n      alert(\"request failed\");\n    }\n  };\n\n  return (\n    <Modal {...props} aria-labelledby='contained-modal-title-vcenter' centered>\n      <Form onSubmit={handleSubmit}>\n        <Modal.Header closeButton>\n          <Modal.Title id='contained-modal-title-vcenter'>\n            {props.about === \"\" ? \"Add About Me\" : \"Edit About Me\"}\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form.Group>\n            <Form.Control\n              type='text'\n              as='textarea'\n              rows='15'\n              defaultValue={props.about}\n            />\n          </Form.Group>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button type='submit' variant='dark'>\n            {props.about === \"\" ? \"Save\" : \"Update\"}\n          </Button>\n        </Modal.Footer>\n      </Form>\n    </Modal>\n  );\n};\n\nexport default Description;\n","/**\n * File: insert_student_education.js\n * Purpose: Students to Insert Student Education\n * Functionality IE: Send POST request to Backend Server\n * Authors: Aaron\n */\n\nimport PORT_HOST from \"../../../config\";\n\nexport default async function API_STUDENT_INSERT_EDUCATION(Student_Education) {\n  //Request Body & Header Configuration\n  const headers = {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(Student_Education),\n  };\n  //Response\n  const response = await fetch(\n    `${PORT_HOST.PORT_HOST}/insert_student_education`,\n    headers\n  );\n\n  const status = response.status;\n  return status;\n}\n","/*\n * File: Education.js\n * Functionality: Modal for Students to add or edit their Education\n * Author: Jose (Component & Structure) | Aaron (API)\n */\n\nimport \"../../css/Forms.css\";\nimport { useState } from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport Col from \"react-bootstrap/Col\";\n// Import API\nimport API_STUDENT_INSERT_EDUCATION from \"../../../models/POST/Students/insert_student_education\";\nimport API_STUDENT_UPDATE_EDUCATION from \"../../../models/PUT/Students/update_education\";\n\nconst Education = (props) => {\n  const [education, setEducation] = useState({\n    Student_ID: props.userID,\n    school: \"\",\n    degree: \"\",\n    school_gpa: 0,\n    study_major: \"\",\n    start_year: 0,\n    end_year: 0,\n  });\n\n  // Submits the Student Education to the DB\n  const handleSubmit = async (e) => {\n    //API_STUDENT_UPDATE_EDUCATION(education); <--------- Put updated education status\n    e.preventDefault();\n    // console.log(education);\n    const response = await API_STUDENT_INSERT_EDUCATION(education);\n    if (response === 400) {\n      alert(\"insert student education failed\");\n    }\n    if (response === 200) {\n      window.location.reload();\n      // console.log(\"success\");\n    }\n  };\n\n  return (\n    <Modal {...props} aria-labelledby=\"contained-modal-title-vcenter\" centered>\n      <Form onSubmit={handleSubmit}>\n        <Modal.Header closeButton>\n          <Modal.Title id=\"contained-modal-title-vcenter\">{props.popupName} Education</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          {/* School Names */}\n          <Form.Group>\n            <Form.Label>School</Form.Label>\n            <Form.Control\n              required\n              type=\"text\"\n              defaultValue={props.popupName === \"Edit\" ? props.school : \"\"}\n              onChange={(e) => setEducation({ ...education, school: e.target.value })}\n            />\n          </Form.Group>\n          {/* Degree */}\n          <Form.Group>\n            <Form.Label>Degree</Form.Label>\n            <Form.Control\n              required\n              type=\"text\"\n              defaultValue={props.popupName === \"Edit\" ? props.degree : \"\"}\n              onChange={(e) => setEducation({ ...education, degree: e.target.value })}\n            />\n          </Form.Group>\n          {/* Major */}\n          <Form.Group>\n            <Form.Label>Major</Form.Label>\n            <Form.Control\n              required\n              type=\"text\"\n              defaultValue={props.popupName === \"Edit\" ? props.major : \"\"}\n              onChange={(e) => setEducation({ ...education, study_major: e.target.value })}\n            />\n          </Form.Group>\n          {/* GPA */}\n          <Form.Group>\n            <Form.Label>GPA</Form.Label>\n            <Form.Control\n              type=\"text\"\n              defaultValue={props.popupName === \"Edit\" ? props.gpa : \"\"}\n              onChange={(e) => setEducation({ ...education, school_gpa: e.target.value })}\n            />\n          </Form.Group>\n          {/* Start Year */}\n          <Form.Row>\n            <Col>\n              <Form.Label>Start Year</Form.Label>\n              <Form.Control\n                required\n                type=\"date\"\n                defaultValue={props.popupName === \"Edit\" ? props.startYear : \"\"}\n                onChange={(e) => setEducation({ ...education, start_year: e.target.value })}\n              />\n            </Col>\n            {/* End Year */}\n            <Col>\n              <Form.Label>End Year</Form.Label>\n              <Form.Control\n                required\n                type=\"date\"\n                defaultValue={props.popupName === \"Edit\" ? props.endYear : \"\"}\n                onChange={(e) => setEducation({ ...education, end_year: e.target.value })}\n              />\n            </Col>\n          </Form.Row>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button type=\"submit\" variant=\"dark\">\n            {props.popupName === \"Edit\" ? \"Update\" : \"Save\"}\n          </Button>\n        </Modal.Footer>\n      </Form>\n    </Modal>\n  );\n};\n\nexport default Education;\n","/**\n * File: insert_student_experience.js\n * Purpose: Students to Insert Student Experience\n * Functionality IE: Send POST request to Backend Server\n * Authors: Aaron\n */\n\nimport PORT_HOST from \"../../../config\";\n\nexport default async function API_STUDENT_INSERT_EXPERIENCE(\n  Student_Experience\n) {\n  //Request Body & Header Configuration\n  const headers = {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(Student_Experience),\n  };\n  //Response\n  const response = await fetch(\n    `${PORT_HOST.PORT_HOST}/insert-experience`,\n    headers\n  );\n\n  const status = response.status;\n  return status;\n}\n","/*\n * File: Experience.js\n * Functionality: Modal for Students to add or edit their Experience\n * Author: Jose (Component & Structure) | Aaron (API)\n */\n\nimport \"../../css/Forms.css\";\nimport { useState } from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport Col from \"react-bootstrap/Col\";\n// Import API\nimport API_STUDENT_INSERT_EXPERIENCE from \"../../../models/POST/Students/insert_student_experience\";\nimport API_STUDENT_UPDATE_EXPERIENCE from \"../../../models/PUT/Students/update_experienec\";\n\nconst Experience = (props) => {\n  // saves role, employement type, tools used, company, location, start year, and end year\n  const [experience, setExperience] = useState({\n    Student_ID: props.userID,\n    company_name: \"\",\n    date_end: \"fulltime\",\n    date_start: \"\",\n    description_experience: \"\",\n    employement_type: \"\",\n    experience_title_position: \"\",\n    location: \"\",\n    arr_work_done_keywords: \"\",\n  });\n\n  // Submits the Student Experience to the DB\n  const handleSubmit = async (e) => {\n    //API_STUDENT_UPDATE_EXPERIENCE(experience)<----------------experience should be updated state\n    e.preventDefault();\n    const response = await API_STUDENT_INSERT_EXPERIENCE(experience);\n    if (response === 400) {\n      console.log(\"error-insert student experience\");\n    }\n    if (response === 200) {\n      window.location.reload();\n      console.log(\"success-insert student experience\");\n    }\n  };\n\n  return (\n    <Modal {...props} aria-labelledby='contained-modal-title-vcenter' centered>\n      <Form onSubmit={handleSubmit}>\n        <Modal.Header closeButton>\n          <Modal.Title id='contained-modal-title-vcenter'>\n            {props.popupName} Experience\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          {/* Company */}\n          <Form.Group>\n            <Form.Label>Company</Form.Label>\n            <Form.Control\n              type='text'\n              required\n              defaultValue={props.popupName === \"Edit\" ? props.company : \"\"}\n              onChange={(e) =>\n                setExperience({ ...experience, company_name: e.target.value })\n              }\n            />\n          </Form.Group>\n\n          {/* Role / Position */}\n          <Form.Group>\n            <Form.Label>Role / Position</Form.Label>\n            <Form.Control\n              type='text'\n              required\n              defaultValue={props.popupName === \"Edit\" ? props.position : \"\"}\n              onChange={(e) =>\n                setExperience({\n                  ...experience,\n                  experience_title_position: e.target.value,\n                })\n              }\n            />\n          </Form.Group>\n\n          {/* Employment Type */}\n          <Form.Group>\n            <Form.Row>\n              <Col>\n                <Form.Label>Employement Type</Form.Label>\n                <Form.Control\n                  as='select'\n                  required\n                  defaultValue={\n                    props.popupName === \"Edit\" ? props.employementType : \"\"\n                  }\n                  onChange={(e) =>\n                    setExperience({\n                      ...experience,\n                      employement_type: e.target.value,\n                    })\n                  }>\n                  <option name='fulltime'>Full Time</option>\n                  <option name='parttime'>Part Time</option>\n                  <option name='internship'>Internship</option>\n                  <option name='contract'>Contract</option>\n                  <option name='remote'>Remote</option>\n                </Form.Control>\n              </Col>\n\n              {/* Location */}\n              <Col>\n                <Form.Label>Location</Form.Label>\n                <Form.Control\n                  type='text'\n                  required\n                  defaultValue={\n                    props.popupName === \"Edit\" ? props.location : \"\"\n                  }\n                  onChange={(e) =>\n                    setExperience({ ...experience, location: e.target.value })\n                  }\n                />\n              </Col>\n            </Form.Row>\n          </Form.Group>\n\n          {/* Description */}\n          <Form.Group>\n            <Form.Label>Description</Form.Label>\n            <Form.Control\n              type='text'\n              as='textarea'\n              required\n              defaultValue={props.popupName === \"Edit\" ? props.description : \"\"}\n              onChange={(e) =>\n                setExperience({\n                  ...experience,\n                  description_experience: e.target.value,\n                })\n              }\n            />\n          </Form.Group>\n\n          {/* Experience Top 3 */}\n          <Form.Group>\n            <Form.Label>3 Keywords Describing The Job</Form.Label>\n            <Form.Control\n              type='text'\n              required\n              defaultValue={props.popupName === \"Edit\" ? props.keywords : \"\"}\n              onChange={(e) =>\n                setExperience({\n                  ...experience,\n                  arr_work_done_keywords: e.target.value,\n                })\n              }\n            />\n            <Form.Text className='text-muted'>\n              Add a comma between keywords\n            </Form.Text>\n          </Form.Group>\n\n          {/* Start Year */}\n          <Form.Group>\n            <Form.Row>\n              <Col>\n                <Form.Label>Start Year</Form.Label>\n                <Form.Control\n                  type='date'\n                  required\n                  defaultValue={\n                    props.popupName === \"Edit\" ? props.dateStart : \"\"\n                  }\n                  onChange={(e) =>\n                    setExperience({ ...experience, date_start: e.target.value })\n                  }\n                />\n              </Col>\n              <Col>\n                {/* End Year */}\n                <Form.Label>End Year</Form.Label>\n                <Form.Control\n                  type='date'\n                  defaultValue={props.popupName === \"Edit\" ? props.dateEnd : \"\"}\n                  onChange={(e) =>\n                    setExperience({ ...experience, date_end: e.target.value })\n                  }\n                />\n                <Form.Text className='text-muted'>\n                  Leave blank if current position\n                </Form.Text>\n              </Col>\n            </Form.Row>\n          </Form.Group>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button type='submit' variant='dark'>\n            {props.popupName === \"Edit\"\n              ? \"Update Experience\"\n              : \"Add Experience\"}\n          </Button>\n        </Modal.Footer>\n      </Form>\n    </Modal>\n  );\n};\n\nexport default Experience;\n","import PORT_HOST from \"../../../config\";\n\nexport default async function API_UPDATE_QUALITIES(student_id, qualities) {\n  const headers = { method: \"PUT\" };\n  const REQUEST_QUERY = `/strength_qualities?id=${student_id}&qualities=${qualities}`;\n  const response = await fetch(`${PORT_HOST.PORT_HOST}${REQUEST_QUERY}`, headers);\n  return response;\n}\n","/*\n * File: List.js\n * Functionality: Modal for Students and Companies to add or edit their Lists of Benefits or Strengths\n * Author: Jose (Component & Structure) | Aaron (API)\n */\n\nimport \"../../css/Forms.css\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\n//API\nimport API_SUDENT_UPDATE_LIST from \"../../../models/PUT/Students/update_qualities\";\n\n// POPUP List will be used to add benefits (for comapany), qualities (for students)\nconst List = (props) => {\n  // Adds empty inputs if qualities prop are less than 10\n  let empty = [];\n  for (let i = 0; i < 10 - props.qualities.length; i++) {\n    empty.push(\"\");\n  }\n\n  // Submits the 'qualities' or 'benefits' to the DB\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const formCount = 10;\n    let str;\n    // iterates throught the list input\n    for (let i = 1; i <= formCount; i++) {\n      try {\n        // combines all qualities into string for DB storing\n        if (e.target[i].value.localeCompare(\"\")) str += e.target[i].value + \",\";\n      } catch (e) {\n        alert(e);\n      }\n    }\n    //removes the first 'undefined' and last \",\"\n    let allQualities = str.replace(\"undefined\", \"\").slice(0, -1);\n    const response = await API_SUDENT_UPDATE_LIST(props.StudentID, allQualities);\n    // console.log(response);\n    if (response.status == 200) {\n      //Success\n      window.location.reload();\n    } else {\n      alert(\"update list failed\");\n    }\n    // console.log(allQualities);\n  };\n\n  return (\n    <Modal {...props} aria-labelledby=\"contained-modal-title-vcenter\" centered>\n      <Form onSubmit={handleSubmit}>\n        <Modal.Header closeButton>\n          <Modal.Title id=\"contained-modal-title-vcenter\">Add Top Qualities</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <ol style={{ paddingLeft: \"1rem\" }}>\n            {props.qualities.map((quality) => (\n              <li>\n                <Form.Group>\n                  <Form.Control type=\"text\" defaultValue={quality} />\n                </Form.Group>\n              </li>\n            ))}\n            {empty.map((quality) => (\n              <li>\n                <Form.Group>\n                  <Form.Control type=\"text\" defaultValue={quality} />\n                </Form.Group>\n              </li>\n            ))}\n          </ol>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button type=\"submit\" variant=\"dark\">\n            {empty.length === 10 ? \"Save\" : \"Update\"}\n          </Button>\n        </Modal.Footer>\n      </Form>\n    </Modal>\n  );\n};\n\nexport default List;\n","import PORT_HOST from \"../../../config\";\n\nexport default async function API_UPDATE_STUDENT_LOCATION(student_id, location) {\n  const headers = { method: \"PUT\" };\n  const REQUEST_QUERY = `/location?id=${student_id}&location=${location}`;\n  const response = await fetch(`${PORT_HOST.PORT_HOST}${REQUEST_QUERY}`, headers);\n  return response;\n}\n","/*\n * File: Location.js\n * Functionality: Modal for Students, Profesosrs, & Companies to add or edit their Location\n * Author: Jose (Component & Structure) | Aaron (API)\n */\nimport { useState } from \"react\";\nimport \"../../css/Forms.css\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\n//API\nimport API_STUDENT_UPDATE_LOCATION from \"../../../models/PUT/Students/update_location\";\n\nconst Location = (props) => {\n  const [location, setLocation] = useState(\"\");\n\n  // Submits the 'qualities' or 'benefits' to the DB\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const response = await API_STUDENT_UPDATE_LOCATION(props.userID, location);\n    //Refresh if Update is Succesful\n    if (response.status === 200) {\n      window.location.reload();\n    }\n    if (response.status === 400) {\n      alert(\"update location request failed\");\n    }\n    // console.log(\"Submitted Location: \" + location);\n  };\n\n  return (\n    <Modal {...props} aria-labelledby='contained-modal-title-vcenter' centered>\n      <Form onSubmit={handleSubmit}>\n        <Modal.Header closeButton>\n          <Modal.Title id='contained-modal-title-vcenter'>Location</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form.Group>\n            <Form.Control\n              type='text'\n              defaultValue={props.location}\n              onChange={(e) => {\n                setLocation(e.target.value);\n              }}\n            />\n          </Form.Group>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button type='submit' variant='dark'>\n            Save\n          </Button>\n        </Modal.Footer>\n      </Form>\n    </Modal>\n  );\n};\n\nexport default Location;\n","/**\n * File: insert_student_projects.js\n * Purpose: Students to Insert Student Projects\n * Functionality IE: Send POST request to Backend Server\n * Authors: Aaron\n */\n\nimport PORT_HOST from \"../../../config\";\n\nexport default async function API_STUDENT_INSERT_PROJECTS(Student_Projects) {\n  //Request Body & Header Configuration\n  const headers = {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(Student_Projects),\n  };\n  //Response\n  const response = await fetch(\n    `${PORT_HOST.PORT_HOST}/insert_student_projects`,\n    headers\n  );\n\n  const status = response.status;\n  return status;\n}\n","/*\n * File: Project.js\n * Functionality: Modal for Students to add or edit their project(s)\n * Author: Jose (Component & Structure) | Aaron (API)\n */\n\nimport \"../../css/Forms.css\";\nimport { useState } from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport Col from \"react-bootstrap/Col\";\n// Import API\nimport API_STUDENT_INSERT_PROJECTS from \"../../../models/POST/Students/insert_student_projects\";\nimport API_UPDATE_STUDENT_PROJECTS from \"../../../models/PUT/Students/update_projects\";\nconst Project = (props) => {\n  const [project, setProject] = useState({\n    Student_ID: props.userID,\n    project_name: \"\",\n    summary: \"\",\n    professor: \"\",\n    arr_tools_used: \"\",\n    links_website: \"\",\n    arr_collaborators_arr: \"\",\n  });\n\n  // Submits the Student Education to the DB\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (props.popupName === \"Edit\") {\n      console.log(\"edited\"); //TODO:: Add Update API\n      //API_UPDATE_STUDENT_PROJECTS(project) <--------------project should be updated state\n    } else {\n      // console.log(project);\n      const response = await API_STUDENT_INSERT_PROJECTS(project);\n      //Check Response Status Code\n      if (response === 200) {\n        //Reload if success -- alternative might be just to refresh the userProfile props but idk how to do this yet\n        window.location.reload();\n      } else {\n        alert(`Response Error: ${Response}`);\n      }\n    }\n  };\n\n  return (\n    <Modal {...props} aria-labelledby=\"contained-modal-title-vcenter\" centered scrollable={true}>\n      <Form onSubmit={handleSubmit}>\n        <Modal.Header closeButton>\n          <Modal.Title id=\"contained-modal-title-vcenter\">{props.popupName} Project</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form.Group>\n            <Form.Row>\n              {/* Project Name */}\n              <Col>\n                <Form.Label>Project Name</Form.Label>\n                <Form.Control\n                  required\n                  type=\"text\"\n                  defaultValue={props.popupName === \"Edit\" ? props.project : \"\"}\n                  onChange={(e) => setProject({ ...project, project_name: e.target.value })}\n                />\n              </Col>\n              {/* Project Date */}\n              <Col>\n                <Form.Label>URL</Form.Label>\n                <Form.Control\n                  required\n                  type=\"text\"\n                  defaultValue={props.popupName === \"Edit\" ? props.website : \"\"}\n                  onChange={(e) => setProject({ ...project, links_website: e.target.value })}\n                />\n              </Col>\n            </Form.Row>\n          </Form.Group>\n\n          {/* Project Collaborator(s) */}\n          <Form.Group>\n            <Form.Label>Collaborator(s)</Form.Label>\n            <Form.Control\n              type=\"text\"\n              defaultValue={props.popupName === \"Edit\" ? props.collaborators : \"\"}\n              onChange={(e) =>\n                setProject({\n                  ...project,\n                  arr_collaborators_arr: e.target.value,\n                })\n              }\n            />\n            <Form.Text className=\"text-muted\">Add a comma between collaborators</Form.Text>\n          </Form.Group>\n\n          {/* Project Professor */}\n          <Form.Group>\n            <Form.Label>Professor</Form.Label>\n            <Form.Control\n              type=\"text\"\n              defaultValue={props.popupName === \"Edit\" ? props.professor : \"\"}\n              onChange={(e) => setProject({ ...project, professor: e.target.value })}\n            />\n            <Form.Text className=\"text-muted\">If a school project, include your professor</Form.Text>\n          </Form.Group>\n\n          {/* Project Description */}\n          <Form.Group>\n            <Form.Label>Summary</Form.Label>\n            <Form.Control\n              type=\"text\"\n              as=\"textarea\"\n              rows=\"2\"\n              maxLength=\"150\"\n              required\n              defaultValue={props.popupName === \"Edit\" ? props.summary : \"\"}\n              onChange={(e) => setProject({ ...project, summary: e.target.value })}\n            />\n            <Form.Text className=\"text-muted\">150 characters</Form.Text>\n          </Form.Group>\n\n          {/* Project Top 3 */}\n          <Form.Group>\n            <Form.Label>Top 3 Tools Used</Form.Label>\n            <Form.Control\n              type=\"text\"\n              required\n              defaultValue={props.popupName === \"Edit\" ? props.tools : \"\"}\n              onChange={(e) => setProject({ ...project, arr_tools_used: e.target.value })}\n            />\n            <Form.Text className=\"text-muted\">Add a comma between tools</Form.Text>\n          </Form.Group>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button type=\"submit\" variant=\"dark\">\n            {props.popupName === \"Edit\" ? \"Update Project\" : \"Add Project\"}\n          </Button>\n        </Modal.Footer>\n      </Form>\n    </Modal>\n  );\n};\n\nexport default Project;\n","/**\n * File: insert_student_profile.js\n * Purpose: Students to Insert Student Profile\n * Functionality IE: Send POST request to Backend Server\n * Authors: Aaron\n */\n\nimport PORT_HOST from \"../../../config\";\n\nexport default async function API_STUDENT_INSERT_PROFILE(Student_Profile_Page) {\n  //Request Body & Header Configuration\n  const headers = {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(Student_Profile_Page),\n  };\n  //Response\n  const response = await fetch(\n    `${PORT_HOST.PORT_HOST}/insert_student_profile_page`,\n    headers\n  );\n  const status = response.status;\n  return status;\n}\n","import { useState, useEffect } from \"react\";\nimport { useCookies } from \"react-cookie\";\n// CSS\nimport \"../../../css/Profiles.css\";\nimport \"../../../css/Theme.css\";\n// React Boostrap\nimport ProgressBar from \"react-bootstrap/ProgressBar\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport Col from \"react-bootstrap/Col\";\n//Import SVG Icons\nimport LocationIcon from \"../../../content/svg/location-icon.svg\";\nimport EditIcon from \"../../../content/svg/edit-icon.svg\";\nimport AddIcon from \"../../../content/svg/add-icon.svg\";\nimport ProjectIcon from \"../../../content/svg/project-icon.svg\";\nimport ExperienceIcon from \"../../../content/svg/experience-icon.svg\";\nimport EducationIcon from \"../../../content/svg/education-icon.svg\";\n// Form Components\nimport AboutPopup from \"../../forms/Description\";\nimport EducationPopup from \"../../forms/Education\";\nimport ExperiencePopup from \"../../forms/Experience\";\nimport ListPopup from \"../../forms/List\";\nimport LocationPopup from \"../../forms/Location\";\nimport ProjectPopup from \"../../forms/Project\";\n// Default Image\nimport { defaultImage } from \"../../global/DefaultImage\";\n//Import TMP\nimport API_STUDENT_INSERT_PROFILE from \"../../../../models/POST/Students/insert_student_profile\";\nimport styled from \"styled-components\";\nimport Popup from \"reactjs-popup\";\n\nfunction converter(dataitem) {\n  if (dataitem) {\n    var t = dataitem.split(/[- : T]/);\n    var d = new Date(Date.UTC(t[0], t[1] - 1, t[2], t[3], t[4]));\n    d = d.toString().split(\" \");\n    return d[1] + \" \" + d[2] + \", \" + d[3];\n  }\n}\n\nconst StudentProfile = (props) => {\n  const [cookie] = useCookies([\"Type_User\", \"ID_OF_USER\", \"First_Name\"]);\n  const [newUser, setNewUser] = useState({\n    Student_ID: cookie.ID_OF_USER,\n    about_me: \"\",\n    strengths_qualities: \"\",\n    location: \"\",\n    school_grade_level: \"\",\n  });\n\n  //Transferred User Profile State\n  const [userProfile, setUserProfile] = useState([\n    [{ null: \"null\" }, { null: \"null\" }],\n    [{ null: \"null\" }, { null: \"null\" }],\n    [{ null: \"null\" }, { null: \"null\" }],\n    [{ null: \"null\" }, { null: \"null\" }],\n    [{ null: \"null\" }, { null: \"null\" }],\n    [{ null: \"null\" }, { null: \"null\" }],\n    [{ null: \"null\" }, { null: \"null\" }],\n  ]);\n  // User Qualities\n  const [qualities, setQualities] = useState([]);\n\n  const handleSubmit = async (e) => {\n    console.log(newUser);\n    const response = await API_STUDENT_INSERT_PROFILE(newUser);\n    console.log(response);\n    if (response === 400) {\n      console.log(\"error\");\n    }\n    if (response === 200) {\n      window.location.reload();\n      console.log(\"success\");\n    }\n  };\n\n  useEffect(() => {\n    setUserProfile(props);\n    console.log(props);\n\n    setQualities(String(props[1].length === 0 ? \"Empty Qualities\" : props[1][0].strengths_qualities).split(\",\"));\n  }, [props]);\n\n  // Location Popup\n  const [location, setLocation] = useState(false);\n  // Links Popup\n  const [links, setLinks] = useState(false);\n  const [aboutPopup, setAboutPopup] = useState(false);\n  const [listPopup, setListPopup] = useState(false);\n  // Project Popups\n  const [addProject, setAddProject] = useState(false);\n  const [editProject, setEditProject] = useState(false);\n  // Education Popups\n  const [addEducation, setAddEducation] = useState(false);\n  const [editEducation, setEditEducation] = useState(false);\n  // Experienc Popups\n  const [addExperience, setAddExperience] = useState(false);\n  const [editExperience, setEditExperience] = useState(false);\n\n  if (userProfile[1].length === 0 && userProfile[1].length === 0) {\n    return (\n      <>\n        {/* Greetings */}\n        <h4 style={{ textAlign: \"center\", marginTop: \"3rem\", fontWeight: \"600\" }}>\n          Welcome {userProfile[4][0].first_name}\n        </h4>\n        <p style={{ textAlign: \"center\" }}>\n          Let's begin by filling some basic profile information in order for recruiters to find you!\n        </p>\n        {/* Form */}\n        <Form onSubmit={handleSubmit} style={{ maxWidth: \"600px\", margin: \"2rem auto\" }}>\n          <Form.Group>\n            <Form.Label>About Me</Form.Label>\n            <Form.Control\n              type=\"text\"\n              as=\"textarea\"\n              rows=\"5\"\n              onChange={(e) => {\n                setNewUser({ ...newUser, about_me: e.target.value });\n              }}\n            />\n          </Form.Group>\n\n          <Form.Group>\n            <Form.Label>Top Strengths</Form.Label>\n            <Form.Control\n              type=\"text\"\n              onChange={(e) => {\n                setNewUser({ ...newUser, strengths_qualities: e.target.value });\n              }}\n            />\n            <Form.Text className=\"text-muted\">Add a comma between responsibility</Form.Text>\n          </Form.Group>\n\n          <Form.Group>\n            <Form.Label>School Level</Form.Label>\n            <Form.Control\n              type=\"text\"\n              as=\"select\"\n              onChange={(e) => {\n                setNewUser({ ...newUser, school_grade_level: e.target.value });\n              }}\n            >\n              {\" \"}\n              <option>Choose...</option>\n              <option value=\"Freshman\">Freshman</option>\n              <option value=\"Sophomore\">Sophomore</option>\n              <option value=\"Junior\">Junior</option>\n              <option value=\"Senior\">Senior</option>\n              <option value=\"Masters\">Masters</option>\n              <option value=\"Doctorate\">Doctorate</option>\n              <option value=\"Alumni\">Alumni</option>\n            </Form.Control>\n          </Form.Group>\n\n          <Form.Group>\n            <Form.Label>Location</Form.Label>\n            <Form.Control\n              type=\"text\"\n              defaultValue={props.location}\n              onChange={(e) => {\n                setNewUser({ ...newUser, location: e.target.value });\n              }}\n            />\n          </Form.Group>\n          <Button variant=\"dark\" type=\"submit\">\n            Save Profile\n          </Button>\n        </Form>\n      </>\n    );\n  } else {\n    return (\n      <>\n        <div className=\"student-heading\">\n          {/* creates default image if none provided */}\n          <img\n            src={\n              userProfile[1].length === 0 ? defaultImage(\"Student\") : defaultImage(String(userProfile[4][0].first_name))\n            }\n            alt={String(userProfile[4][0].first_name)}\n          />\n          <div className=\"right\">\n            {/* === Student Name === */}\n            <div className=\"flex-box\">\n              <h6 className=\"category-heading\">Full Name</h6>\n            </div>\n            <p>{userProfile[4][0].first_name + \" \" + userProfile[4][0].last_name}</p>\n\n            {/* === Student Location ===*/}\n            <div className=\"flex-box\">\n              <h6 className=\"category-heading\">Location</h6>\n              {/* Location Edit Popup */}\n              <img id=\"edit-button\" src={EditIcon} alt=\"edit pencil button\" onClick={() => setLocation(true)} />\n              <LocationPopup\n                show={location}\n                onHide={() => setLocation(false)}\n                userID={cookie.ID_OF_USER}\n                location={userProfile[1].length === 0 ? \"Location Not Provided\" : userProfile[1][0].location}\n              />\n            </div>\n            <div className=\"flex-box\">\n              <img src={LocationIcon} alt=\"location pin\" />\n              <p>{userProfile[1].length === 0 ? \"Location Not Provided\" : userProfile[1][0].location}</p>\n            </div>\n          </div>\n        </div>\n\n        {/* Student About Me */}\n        <div className=\"student-about\">\n          <div className=\"flex-box\">\n            <h4 className=\"category-heading\">About Me</h4>\n            {/* About Me Edit Popup */}\n            <img id=\"edit-button\" src={EditIcon} alt=\"edit pencil button\" onClick={() => setAboutPopup(true)} />\n            <AboutPopup\n              show={aboutPopup}\n              onHide={() => setAboutPopup(false)}\n              userID={cookie.ID_OF_USER}\n              heading=\"Edit About Me\"\n              about={userProfile[1].length === 0 ? \"Empty\" : userProfile[1][0].about_me}\n            />\n          </div>\n          {/* About Me */}\n          <p>{userProfile[1].length === 0 ? \"Empty\" : userProfile[1][0].about_me}</p>\n        </div>\n\n        {/* Student Qualities */}\n        <div className=\"student-qualities\">\n          <div className=\"flex-box\">\n            <h4 className=\"category-heading\">Top Qualities</h4>\n            {/* Qualities Edit Popup */}\n            <img id=\"edit-button\" src={EditIcon} alt=\"edit pencil button\" onClick={() => setListPopup(true)} />\n            <ListPopup\n              StudentID={cookie.ID_OF_USER}\n              show={listPopup}\n              qualities={qualities}\n              onHide={() => setListPopup(false)}\n            />\n          </div>\n          {/* Maps Every Quality Stored For The Student */}\n          <li>\n            {qualities.map((quality) => (\n              <ul>{quality}</ul>\n            ))}\n          </li>\n        </div>\n\n        <div className=\"student-grid\">\n          {/* Student Projects */}\n          <div className=\"projects\">\n            <div className=\"flex-box\">\n              <h4 className=\"category-heading\">Projects</h4>\n              {/* Add New Project Popup */}\n              <img id=\"edit-button\" src={AddIcon} alt=\"edit pencil button\" onClick={() => setAddProject(true)} />\n              <ProjectPopup\n                show={addProject}\n                popupName={\"Add\"}\n                userID={cookie.ID_OF_USER}\n                onHide={() => setAddProject(false)}\n              />\n            </div>\n            {/* Maps Every Project Stored For The Student */}\n            {userProfile[2].length === 0\n              ? \"No Projects Found\"\n              : userProfile[2].map((project) => (\n                  <div className=\"student-project flex-box\">\n                    {/* Project Icon */}\n                    <div className=\"img-box\">\n                      <img src={ProjectIcon} alt=\"project icon\" />\n                    </div>\n                    {/* Project Details */}\n                    <div className=\"right\">\n                      {/* TODO:: Project Date */}\n                      <p id=\"date\">{project.publish_date}</p>\n                      <div className=\"flex-box\">\n                        {/* Project Name */}\n                        <a href={\"https://\" + project.links_website} alt=\"project website\">\n                          <h5>{project.project_name}</h5>\n                        </a>\n                        {/* Edit Project Popup\n                        <img\n                          id=\"edit-button\"\n                          src={EditIcon}\n                          alt=\"edit pencil button\"\n                          onClick={() => setEditProject(true)}\n                        />\n                        <ProjectPopup\n                          show={editProject}\n                          popupName={\"Edit\"}\n                          userID={cookie.ID_OF_USER}\n                          project={project.project_name}\n                          summary={project.summary}\n                          professor={project.professor}\n                          tools={project.arr_tools_used}\n                          website={project.links_website}\n                          collaborators={project.arr_collaborators_arr}\n                          onHide={() => setEditProject(false)}\n                        /> */}\n                      </div>\n                      {/* Project Description */}\n                      <p>{project.summary}</p>\n                      <div className=\"flex-box\">\n                        {/* Project Collaborator(s) */}\n                        <h6>Collaborator(s):</h6>\n                        {String(project.arr_collaborators_arr)\n                          .split(\",\")\n                          .map((collaborator) => (\n                            <h6>&nbsp;{collaborator}</h6>\n                          ))}\n                      </div>\n                      {/* Project Professor */}\n                      <h6>Professor: {project.professor}</h6>\n                      {/* Keywords */}\n                      <li>\n                        {String(project.arr_tools_used)\n                          .split(\",\")\n                          .map((tool) => (\n                            <ul style={{ backgroundColor: \"#66D3D9\" }}>{tool}</ul>\n                          ))}\n                      </li>\n                    </div>\n                  </div>\n                ))}\n          </div>\n\n          <div>\n            <div className=\"education\">\n              {/* Student Education */}\n              <div className=\"flex-box\">\n                <h4 className=\"category-heading\">Education</h4>\n                {/* Add Education Popup */}\n                <img id=\"edit-button\" src={AddIcon} alt=\"edit pencil button\" onClick={() => setAddEducation(true)} />\n                <EducationPopup\n                  show={addEducation}\n                  onHide={() => setAddEducation(false)}\n                  userID={cookie.ID_OF_USER}\n                  popupName={\"Add\"}\n                />\n              </div>\n              {/* Maps Every Education The Student Has Stored */}\n              {userProfile[0].length === 0\n                ? \"No Education Found\"\n                : userProfile[0].map((education) => (\n                    <div className=\"student-education flex-box\">\n                      {/* creates default image if none provided */}\n                      <div className=\"img-box\">\n                        <img src={EducationIcon} alt=\"project icon\" />\n                      </div>\n                      <div className=\"right\">\n                        <div className=\"flex-box\">\n                          {/* Education Degree Recieved */}\n                          <h5>{education.degree}</h5>\n                          {/* Edit Education Popup\n                          <img\n                            id=\"edit-button\"\n                            src={EditIcon}\n                            alt=\"edit pencil button\"\n                            onClick={() => setEditEducation(true)}\n                          />\n                          <EducationPopup\n                            show={editEducation}\n                            popupName={\"Edit\"}\n                            userID={cookie.ID_OF_USER}\n                            school={education.school}\n                            degree={education.degree}\n                            gpa={education.school_gpa}\n                            major={education.study_major}\n                            startYear={education.start_year}\n                            endYear={education.end_year}\n                            onHide={() => setEditEducation(false)}\n                          /> */}\n                        </div>\n                        {/* Education School Name */}\n                        <h6>{education.school}</h6>\n                        <p>\n                          GPA: {education.school_gpa} <br /> Years: {education.start_year} - {education.end_year}\n                        </p>\n                        {/* Education Start - End Date (current or date) */}\n                        <p></p>\n                      </div>\n                    </div>\n                  ))}\n            </div>\n            <div className=\"experience\">\n              {/* experience */}\n\n              <div className=\"flex-box\">\n                <h4 className=\"category-heading\">Experience</h4>\n                {/* Add Experience Popup */}\n                <img id=\"edit-button\" src={AddIcon} alt=\"edit pencil button\" onClick={() => setAddExperience(true)} />\n                <ExperiencePopup\n                  userID={cookie.ID_OF_USER}\n                  show={addExperience}\n                  popupName={\"Add\"}\n                  onHide={() => setAddExperience(false)}\n                />\n              </div>\n              {/** Map Experience */}\n              {userProfile[5].length == 0\n                ? \"No Experience\"\n                : userProfile[5].map((experience) => (\n                    <div className=\"student-experience flex-box\">\n                      {/* creates default image if none provided */}\n                      <div className=\"img-box\">\n                        <img src={ExperienceIcon} alt=\"project icon\" />\n                      </div>\n                      <div className=\"right\">\n                        <div className=\"flex-box\">\n                          <h5>{experience.experience_title_position}</h5>\n                          {/* Edit Pencil --> Popup\n                          <img\n                            id=\"edit-button\"\n                            src={EditIcon}\n                            alt=\"edit pencil button\"\n                            onClick={() => setEditExperience(true)}\n                          />\n                          <ExperiencePopup\n                            show={editExperience}\n                            popupName={\"Edit\"}\n                            userID={cookie.ID_OF_USER}\n                            company={experience.company_name}\n                            dateStart={converter(experience.date_start)}\n                            dateEnd={converter(experience.date_end)}\n                            description={experience.description_experience}\n                            position={experience.experience_title_position}\n                            employmentType={experience.employement_type}\n                            location={experience.location}\n                            keywords={experience.arr_work_done_keywords}\n                            onHide={() => setEditExperience(false)}\n                          /> */}\n                        </div>\n                        <h6>{experience.company_name}</h6>\n                        <p>\n                          {converter(experience.date_start)} - {converter(experience.date_end)}\n                        </p>\n                        {/* Keywords */}\n                        <li>\n                          {String(experience.arr_work_done_keywords)\n                            .split(\",\")\n                            .map((tool) => (\n                              <ul style={{ backgroundColor: \"#EFE271\" }}>{tool}</ul>\n                            ))}\n                        </li>\n                      </div>\n                    </div>\n                  ))}\n            </div>\n          </div>\n        </div>\n        {/* Student's Ratings */}\n        <div className=\"student-reflection\">\n          <h4 className=\"category-heading\">Ratings</h4>\n          {/* Maps Every Review From Professor(s) to Student */}\n          {userProfile[3].length === 0\n            ? \"No Reflections Yet\"\n            : userProfile[3].map((review) => (\n                <div className=\"rating\">\n                  <header className=\"flex-box\">\n                    <span className=\"flex-box\">\n                      {/* Review: Professor Name */}\n                      <h5>\n                        {review.first_name} {review.last_name}\n                      </h5>\n                      {/* Sum of Review */}\n                      <ProgressBar\n                        now={review.rating_total}\n                        label={`${review.rating_total}` + \" / 5\"}\n                        min=\"0\"\n                        max=\"5\"\n                        variant=\"info\"\n                        style={{ width: \"35%\", marginTop: \"5px\" }}\n                        id=\"progress-bar\"\n                      />\n                    </span>\n                    {/* TODO:: date of the review */}\n                    <p>{converter(review.publish_date)}</p>\n                  </header>\n                  {/* Professor's School At The Time Of The Review */}\n                  <h6>{review.school_name}</h6>\n                  {/* Professor's Review */}\n                  <p>{review.recommendation_comment}</p>\n                  <li>\n                    <ul>Commited To Success: {review.committed_to_success_level}</ul>\n                    <ul>Leadership: {review.leadership_level}</ul>\n                    <ul>Responsible: {review.responsible_level}</ul>\n                    <ul>Team Work: {review.team_work_level}</ul>\n                  </li>\n                </div>\n              ))}\n        </div>\n      </>\n    );\n  }\n};\n\nexport default StudentProfile;\n","/**\n * File: ProfessorProfile.js\n * Purpose | Functionality: Profile Page from Dashboard js\n * Authors: Jose(Format & Structure) | Aaron(Insert in Format)\n */\nimport { useState, useEffect } from \"react\";\nimport { useCookies } from \"react-cookie\";\n// CSS\nimport \"../../../css/Profiles.css\";\nimport \"../../../css/Theme.css\";\n//Import SVG Icons\nimport GlobeIcon from \"../../../content/svg/globe-icon.svg\";\nimport LinkedinIcon from \"../../../content/svg/linkedin-icon.svg\";\nimport EditIcon from \"../../../content/svg/edit-icon.svg\";\nimport AddIcon from \"../../../content/svg/add-icon.svg\";\nimport ExperienceIcon from \"../../../content/svg/experience-icon.svg\";\n// Form Components\nimport AboutPopup from \"../../forms/Description\";\nimport ExperiencePopup from \"../../forms/Experience\";\nimport LinksPopup from \"../../forms/LinksProfessor\";\n// Default Image\nimport { defaultImage } from \"../../global/DefaultImage\";\n\nconst ProfessorProfile = (props) => {\n  const [cookie] = useCookies([\"Type_User\", \"ID_OF_USER\", \"First_Name\"]);\n  // Links Popup\n  const [links, setLinks] = useState(false);\n  const [aboutPopup, setAboutPopup] = useState(false);\n  // Experienc Popups\n  const [addExperience, setAddExperience] = useState(false);\n  const [editExperience, setEditExperience] = useState(false);\n  // Professor Profile\n  const [userProfile, setUserProfile] = useState({\n    null: \"null\",\n  });\n\n  useEffect(() => {\n    // console.log(\"proppy\", props[0]);\n    setUserProfile(props[0]); //General Information\n  }, [props]);\n\n  return (\n    <>\n      <div className=\"student-heading\">\n        {/* creates default image if none provided */}\n        <img src={defaultImage(String(userProfile.first_name))} alt={String(userProfile.first_name)} />\n        <div className=\"right\">\n          {/* === Professor's Name === */}\n          <div className=\"flex-box\">\n            <h6 className=\"category-heading\">Full Name</h6>\n          </div>\n          <p>{userProfile.first_name + \" \" + userProfile.last_name}</p>\n          <p>\n            <b>Email</b>\n            <br></br> {userProfile.email}\n          </p>\n          <p>\n            <b>School Name</b>\n            <br></br> {userProfile.school_name}\n          </p>\n        </div>\n      </div>\n      {/* TODO:: Links */}\n      <div className=\"student-links\">\n        <div className=\"flex-box\">\n          {/* <h5 className=\"category-heading\">Links</h5> */}\n          {/* Links Edit Popup */}\n          {/* <img id=\"edit-button\" src={EditIcon} alt=\"edit pencil button\" onClick={() => setLinks(true)} /> */}\n          {/* <LinksPopup show={links} onHide={() => setLinks(false)} userID={cookie.ID_OF_USER} /> */}\n        </div>\n        {/* TODO:: Add URL to Professor DB so Jose can integrate it */}\n        {/* <div className=\"flex-box\" style={{ justifyContent: \"center\" }}>\n          <a href=\"/\">\n            <img src={GlobeIcon} alt=\"website url\" className=\"mr-5\" />\n          </a>\n          <a href=\"/\">\n            <img src={LinkedinIcon} alt=\"linkedin\" />\n          </a>\n        </div> */}\n      </div>\n\n      {/* Professor About Me */}\n      <div className=\"student-about\">\n        <div className=\"flex-box\">\n          {/* <h4 className=\"category-heading\">About Me</h4> */}\n          {/* About Me Edit Popup */}\n          {/* <img\n            id='edit-button'\n            src={EditIcon}\n            alt='edit pencil button'\n            onClick={() => setAboutPopup(true)}\n          /> */}\n          {/* <AboutPopup\n            show={aboutPopup}\n            onHide={() => setAboutPopup(false)}\n            userID={cookie.ID_OF_USER}\n            heading='Edit About Me'\n            about={userProfile.about_me}\n          /> */}\n        </div>\n        {/* About Me */}\n        {/* <p>\n          {userProfile.about_me}\n          This is where the Professor's About me should go\n        </p> */}\n      </div>\n\n      {/* <div classname=\"student-about\">\n        {/* experience */}\n\n      <div classname=\"flex-box\">\n        {/* <h4 classname=\"category-heading\">schools</h4> */}\n        {/* add experience popup */}\n        {/* <img id=\"edit-button\" src={addicon} alt=\"edit pencil button\" onclick={() => setaddexperience(true)} /> */}\n        {/* <experiencepopup\n            userid={cookie.id_of_user}\n            show={addexperience}\n            popupname={\"add\"}\n            onhide={() => setaddexperience(false)}\n          /> */}\n      </div>\n\n      {/** todo:: add experience for professor to db for jose to map experience */}\n    </>\n  );\n};\n\nexport default ProfessorProfile;\n","export default __webpack_public_path__ + \"static/media/globe-icon.2df61ca8.svg\";","export default __webpack_public_path__ + \"static/media/linkedin-icon.2a5b5224.svg\";","/**\n * File: Dashboard.js\n * Purpose: Serve Unique Dashboard for varying users\n * Functionality IE: Render dynamically based on logged in User.\n * Authors:\n * Aaron implementing Cookies & Condition\n * Jose: Profile Components for Student | Professor | Employer\n */\nimport { useState, useEffect } from \"react\";\nimport { useCookies } from \"react-cookie\";\n// CSS\nimport \"../../css/Help.css\";\n// Profile Components\nimport StudentProfile from \"../profiles/student/StudentProfile\";\nimport ProfessorProfile from \"../profiles/professor/ProfessorProfile\";\nimport CompanyProfile from \"../profiles/company/CompanyProfile\";\n//API\nimport API_USER_GET_PROFILE from \"../../../models/GET/user_profile\";\nconst Dashboard = () => {\n  //Get Profile from Database\n  useEffect(() => {\n    API_USER_GET_PROFILE(cookie.Type_User, cookie.ID_OF_USER, setuserProfile);\n  }, []);\n  //Current User\n  const [cookie] = useCookies([\"Type_User\", \"ID_OF_USER\", \"First_Name\"]);\n  //User Profile Return\n  const [userProfile, setuserProfile] = useState([\n    [{ null: \"null\" }, { null: \"null\" }],\n    [{ null: \"null\" }, { null: \"null\" }],\n    [{ null: \"null\" }, { null: \"null\" }],\n    [{ null: \"null\" }, { null: \"null\" }],\n    [{ null: \"null\" }, { null: \"null\" }],\n    [{ null: \"null\" }, { null: \"null\" }],\n  ]);\n\n  if (cookie.Type_User === \"student\") {\n    return <StudentProfile {...userProfile} />;\n  } else if (cookie.Type_User === \"professor\") {\n    return <ProfessorProfile {...userProfile} />;\n  } else if (cookie.Type_User === \"employer\") {\n    return <CompanyProfile {...userProfile} />;\n  }\n  return (\n    <div>\n      <h1 className=\"mini-title\">Refresh page or Sign in </h1>\n    </div>\n  );\n};\n\nexport default Dashboard;\n","/**\n * File: insert_job.js\n * Purpose: Employers to Insert Job\n * Functionality IE: Send POST request to Backend Server\n * Authors: Aaron\n */\n\nimport PORT_HOST from \"../../../config\";\n\nexport default async function API_EMPLOYER_INSERT_JOB(JobListings) {\n  //Request Body & Header Configuration\n  const headers = {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(JobListings),\n  };\n  //Response\n  const response = await fetch(`${PORT_HOST.PORT_HOST}/insert_job`, headers);\n  const status = response.status;\n  return status;\n}\n","/**\n * File: PostJobs.js\n * Purpose: Employers to Insert Job\n * Functionality IE: Send POST request to Backend Server\n * Authors: Aaron Set API and Response Check\n */\n\nimport { useCookies } from \"react-cookie\";\nimport { useState } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Col from \"react-bootstrap/Col\";\n//API\nimport API_EMPLOYER_INSERT_JOB from \"../../../../models/POST/Employers/insert_job\";\n//Custom Styling\nconst PostJobs = () => {\n  //Init user\n  const [cookie] = useCookies([\"Type_User\", \"ID_OF_USER\", \"First_Name\"]); //Cur use\n  const [newJob, setNewJob] = useState({\n    Employer_ID: cookie.ID_OF_USER,\n    organization_name: \"Organization Name\",\n    position_title: \"User Experience Designer | Backend Developer Etc\",\n    location: \"California | New York | Etc\",\n    job_type: \"0\",\n    experience_years: \"0\",\n    experience_levels: \"0\",\n    salary: \"0\",\n    about_us: \"About Us Description\",\n    the_opportunity: \"Paycheck\",\n    task_responsibilites: \"Work along w/ Developers\",\n    skillset: \"Good Stamina\",\n    benefits: \"401k Plan\",\n    landing_image: null,\n  });\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const response = await API_EMPLOYER_INSERT_JOB(newJob);\n    if (response === 200) {\n      window.location.reload();\n      // console.log(\"success\");\n    } else {\n      alert(\"insert job failed\");\n    }\n  };\n\n  return (\n    <div>\n      <h4 style={{ textAlign: \"center\", marginTop: \"2rem\", fontWeight: \"600\" }}>\n        Insert New Job\n      </h4>\n      <Form\n        onSubmit={handleSubmit}\n        style={{ maxWidth: \"600px\", margin: \"0 auto\", padding: \"1rem\" }}>\n        {/* Compnany Name */}\n        <Form.Group controlId=''>\n          <Form.Label>Company Name</Form.Label>\n          <Form.Control\n            type='text'\n            onChange={(e) =>\n              setNewJob({\n                ...newJob,\n                organization_name: e.target.value,\n              })\n            }\n          />\n        </Form.Group>\n        {/* position title */}\n        <Form.Group controlId=''>\n          <Form.Label>Position Title</Form.Label>\n          <Form.Control\n            type='text'\n            onChange={(e) =>\n              setNewJob({\n                ...newJob,\n                position_title: e.target.value,\n              })\n            }\n          />\n        </Form.Group>\n\n        {/* Location */}\n        <Form.Group controlId=''>\n          <Form.Label>Location</Form.Label>\n          <Form.Control\n            type='text'\n            onChange={(e) =>\n              setNewJob({\n                ...newJob,\n                location: e.target.value,\n              })\n            }\n          />\n        </Form.Group>\n\n        <Form.Row>\n          <Col>\n            <Form.Group as={Col} controlId='formGridState'>\n              <Form.Label>Job Type</Form.Label>\n              <Form.Control\n                as='select'\n                defaultValue='Choose...'\n                onChange={(e) =>\n                  setNewJob({\n                    ...newJob,\n                    job_type: e.target.value,\n                  })\n                }>\n                <option>Choose...</option>\n                <option value='Full Time'>Full Time</option>\n                <option value='Part Time'>Part Time</option>\n                <option value='Internship'>Internship</option>\n                <option value='Contract'>Contract</option>\n                <option value='Remote'>Remote</option>\n              </Form.Control>\n            </Form.Group>\n          </Col>\n          <Col>\n            <Form.Group controlId=''>\n              <Form.Label>Annual Salary</Form.Label>\n              <Form.Control\n                type='text'\n                placeholder='$ 00.00'\n                onChange={(e) =>\n                  setNewJob({\n                    ...newJob,\n                    salary: e.target.value,\n                  })\n                }\n              />\n            </Form.Group>\n          </Col>\n        </Form.Row>\n\n        <Form.Row>\n          <Col>\n            <Form.Group as={Col} controlId='formGridState'>\n              <Form.Label>Experience Level</Form.Label>\n              <Form.Control\n                as='select'\n                defaultValue='Choose...'\n                onChange={(e) =>\n                  setNewJob({\n                    ...newJob,\n                    experience_levels: e.target.value,\n                  })\n                }>\n                <option>Choose...</option>\n                <option value='Entry Leve'>Entry Level</option>\n                <option value='Mid Level'>Mid Level</option>\n                <option value='Senior Level'>Senior Level</option>\n                <option value='Directors'>Directors</option>\n                <option value='VP or Above'>VP or Above</option>\n              </Form.Control>\n            </Form.Group>\n          </Col>\n          <Col>\n            <Form.Group as={Col} controlId='formGridState'>\n              <Form.Label>Experience Years</Form.Label>\n              <Form.Control\n                type='text'\n                onChange={(e) =>\n                  setNewJob({\n                    ...newJob,\n                    experience_years: e.target.value,\n                  })\n                }\n              />\n            </Form.Group>\n          </Col>\n        </Form.Row>\n\n        <Form.Group controlId='' style={{ marginTop: \"1rem\" }}>\n          <Form.Label>About us</Form.Label>\n          <Form.Control\n            type='text'\n            as='textarea'\n            onChange={(e) =>\n              setNewJob({\n                ...newJob,\n                about_us: e.target.value,\n              })\n            }\n          />\n        </Form.Group>\n\n        <Form.Group controlId=''>\n          <Form.Label>The Opportunity</Form.Label>\n          <Form.Control\n            type='text'\n            as='textarea'\n            onChange={(e) =>\n              setNewJob({\n                ...newJob,\n                the_opportunity: e.target.value,\n              })\n            }\n          />\n        </Form.Group>\n\n        <Form.Group controlId=''>\n          <Form.Label>Task Responsibility</Form.Label>\n          <Form.Control\n            type='text'\n            onChange={(e) =>\n              setNewJob({\n                ...newJob,\n                task_responsibilites: e.target.value,\n              })\n            }\n          />\n          <Form.Text className='text-muted'>\n            Add a comma between responsibility\n          </Form.Text>\n        </Form.Group>\n\n        <Form.Group controlId=''>\n          <Form.Label>Skillset</Form.Label>\n          <Form.Control\n            type='text'\n            onChange={(e) =>\n              setNewJob({\n                ...newJob,\n                skillset: e.target.value,\n              })\n            }\n          />\n          <Form.Text className='text-muted'>\n            Add a comma between skill\n          </Form.Text>\n        </Form.Group>\n\n        <Form.Group controlId=''>\n          <Form.Label>Benefits</Form.Label>\n          <Form.Control\n            type='text'\n            onChange={(e) =>\n              setNewJob({\n                ...newJob,\n                benefits: e.target.value,\n              })\n            }\n          />\n          <Form.Text className='text-muted'>\n            Add a comma between benefits\n          </Form.Text>\n        </Form.Group>\n\n        <Button variant='dark' type='submit'>\n          Submit New Job\n        </Button>\n      </Form>\n    </div>\n  );\n};\n\nexport default PostJobs;\n","export default __webpack_public_path__ + \"static/media/arrow.b018c82a.svg\";","/*\nAuthor: Aaron S | Jose for formatting later i think\nFile: Full Student Profile\nFunctionality: Works with onClick from student search to access any full students view\n*/\nimport { useEffect, useState } from \"react\";\nimport { useCookies } from \"react-cookie\";\n// CSS\nimport \"../../../css/Profiles.css\";\nimport \"../../../css/Theme.css\";\n// React Boostrap\nimport Button from \"react-bootstrap/Button\";\nimport ProgressBar from \"react-bootstrap/ProgressBar\";\n//Import SVG Icons\nimport Arrow from \"../../../content/svg/arrow.svg\";\nimport LocationIcon from \"../../../content/svg/location-icon.svg\";\nimport ProjectIcon from \"../../../content/svg/project-icon.svg\";\nimport ExperienceIcon from \"../../../content/svg/experience-icon.svg\";\nimport EducationIcon from \"../../../content/svg/education-icon.svg\";\n//Pop Up Form\nimport RatingPopup from \"../../forms/Rating\";\nimport HirePopup from \"../../forms/Hire\";\n// Default Image\nimport { defaultImage } from \"../../global/DefaultImage\";\n//API\nimport API_USER_GET_PROFILE from \"../../../../models/GET/user_profile\";\nimport API_PROFESSOR_RATE_STUDENT from \"../../../../models/POST/Professors/professor_rate\";\n\nfunction converter(dataitem) {\n  if (dataitem) {\n    var t = dataitem.split(/[- : T]/);\n    var d = new Date(Date.UTC(t[0], t[1] - 1, t[2], t[3], t[4]));\n    d = d.toString().split(\" \");\n    return d[1] + \" \" + d[2] + \", \" + d[3];\n  }\n}\nconst PublicStudentProfile = ({\n  location: {\n    state: { studentName, studentID },\n  },\n}) => {\n  // popups\n  const [ratingPopup, setRatingPopup] = useState(false);\n  const [hirePopup, setHirePopup] = useState(false);\n  const [cookie] = useCookies([\"Type_User\", \"ID_OF_USER\", \"First_Name\"]); //Current User\n  //User Profile Return\n  const [userProfile, setUserProfile] = useState([\n    [{ null: \"null\" }, { null: \"null\" }],\n    [{ null: \"null\" }, { null: \"null\" }],\n    [{ null: \"null\" }, { null: \"null\" }],\n    [{ null: \"null\" }, { null: \"null\" }],\n    [{ null: \"null\" }, { null: \"null\" }],\n    [{ null: \"null\" }, { null: \"null\" }],\n  ]);\n\n  useEffect(() => {\n    // Retrieve User's Information and stores it into the State\n    API_USER_GET_PROFILE(\"student\", studentID, setUserProfile);\n  }, []);\n\n  return (\n    <>\n      {/* heading */}\n      <div className='student-heading'>\n        {/* Back Button */}\n        <div\n          className='back-btn'\n          onClick={(e) => {\n            window.location = \"/search-candidates\";\n            e.preventDefault();\n          }}>\n          <img src={Arrow} alt='back arrow' />\n        </div>\n        {/* creates default image if none provided */}\n        <img\n          src={\n            userProfile[1][0].profile_image === null\n              ? defaultImage(studentName)\n              : userProfile[1][0].profile_image\n          }\n          alt={studentName}\n        />\n        <div className='right'>\n          {/* Student Name */}\n          <h1>{studentName}</h1>\n\n          {/* Student Location */}\n          <div className='flex-box'>\n            <img src={LocationIcon} alt='location pin' />\n            <p>{userProfile[1][0].location}</p>\n          </div>\n          <div className='flex-box'>\n            {/* Only visible to employers */}\n            {cookie.Type_User === \"employer\" ? (\n              <Button onClick={() => setHirePopup(true)}>Hire</Button>\n            ) : null}\n            <HirePopup\n              show={hirePopup}\n              onHide={() => setHirePopup(false)}\n              setHirePopup={setHirePopup}\n            />\n            {/* Only visible to professors */}\n            {cookie.Type_User === \"professor\" ? (\n              <Button onClick={() => setRatingPopup(true)}>Rate</Button>\n            ) : null}\n            <RatingPopup\n              show={ratingPopup}\n              onHide={() => setRatingPopup(false)}\n              student={studentID}\n              professor={cookie.ID_OF_USER}\n              user={cookie.Type_User}\n            />\n          </div>\n        </div>\n      </div>\n\n      {/*  About Us */}\n      <div className='student-about'>\n        <div className='flex-box'>\n          <h4>About Us</h4>\n        </div>\n        {/* About Me */}\n        <p>{userProfile[1][0].about_me}</p>\n      </div>\n\n      {/* Student Qualities */}\n      <div className='student-qualities'>\n        <div className='flex-box'>\n          <h4>Top Qualities</h4>\n        </div>\n        {/* Maps Every Quality Stored For The Student */}\n        <li>\n          {String(\n            userProfile[1].length === 0\n              ? \"No Qualtites\"\n              : userProfile[1][0].strengths_qualities\n          )\n            .split(\",\")\n            .map((quality) => (\n              <ul>{quality}</ul>\n            ))}\n        </li>\n      </div>\n\n      <div className='student-grid'>\n        {/* Student Projects */}\n        <div className='projects'>\n          <div className='flex-box'>\n            <h4>Projects</h4>\n          </div>\n          {/* Maps Every Project Stored For The Student */}\n          {userProfile[2].map((project) => (\n            <div className='student-project flex-box'>\n              {/* Project Icon */}\n              <div className='img-box'>\n                <img src={ProjectIcon} alt='project icon' />\n              </div>\n              {/* Project Details */}\n              <div className='right'>\n                {/* TODO:: Project Date */}\n                <p id='date'>November 20, 2020</p>\n                <div className='flex-box'>\n                  {/* Project Name */}\n                  <h5>{project.project_name}</h5>\n                </div>\n                {/* Project Description */}\n                <p>{project.summary}</p>\n                <div className='flex-box'>\n                  {/* Project Collaborator(s) */}\n                  <h6>Collaborator(s):</h6>\n                  {String(project.arr_collaborators_arr)\n                    .split(\",\")\n                    .map((collaborator) => (\n                      <h6>&nbsp;{collaborator}</h6>\n                    ))}\n                </div>\n                {/* Project Professor */}\n                <h6>Professor: {project.professor}</h6>\n                <li>\n                  {String(project.arr_tools_used)\n                    .split(\",\")\n                    .map((tool) => (\n                      <ul style={{ backgroundColor: \"#66D3D9\" }}>{tool}</ul>\n                    ))}\n                </li>\n              </div>\n            </div>\n          ))}\n        </div>\n\n        <div>\n          <div className='education'>\n            {/* Student Education */}\n            <div className='flex-box'>\n              <h4>Education</h4>\n            </div>\n            {/* Maps Every Education The Student Has Stored */}\n            {userProfile[0].map((education) => (\n              <div className='student-education flex-box'>\n                {/* creates default image if none provided */}\n                <div className='img-box'>\n                  <img src={EducationIcon} alt='project icon' />\n                </div>\n                <div className='right'>\n                  <div className='flex-box'>\n                    {/* Education Degree Recieved */}\n                    <h5>{education.degree}</h5>\n                  </div>\n                  {/* Education School Name */}\n                  <h6>{education.school}</h6>\n                  <p>GPA: {education.school_gpa}</p>\n                  {/* Education Start - End Date (current or date) */}\n                  <p>\n                    {education.start_year} - {education.end_year}\n                  </p>\n                </div>\n              </div>\n            ))}\n          </div>\n          <div className='experience'>\n            {/* experience */}\n\n            <div className='flex-box'>\n              <h4 className='category-heading'>Experience</h4>\n            </div>\n            {/** Map Experience */}\n            {userProfile[5].length === 0\n              ? \"No Experience\"\n              : userProfile[5].map((data) => (\n                  <div className='student-experience flex-box'>\n                    {/* creates default image if none provided */}\n                    <div className='img-box'>\n                      <img src={ExperienceIcon} alt='project icon' />\n                    </div>\n                    <div className='right'>\n                      <div className='flex-box'>\n                        <h5>{data.experience_title_position}</h5>\n                      </div>\n                      <h6>{data.company_name}</h6>\n                      <p>\n                        {converter(data.date_start)} -{\" \"}\n                        {converter(data.date_end)}\n                      </p>\n                      <li>\n                        {String(data.arr_work_done_keywords)\n                          .split(\",\")\n                          .map((tool) => (\n                            <ul style={{ backgroundColor: \"#EFE271\" }}>\n                              {tool}\n                            </ul>\n                          ))}\n                      </li>\n                    </div>\n                  </div>\n                ))}\n          </div>\n        </div>\n      </div>\n      {/* Student's Ratings */}\n      <div className='student-reflection'>\n        <h4>Ratings</h4>\n        {/* Maps Every Review From Professor(s) to Student */}\n        {userProfile[3].map((review) => (\n          <div className='rating'>\n            <header className='flex-box'>\n              <span className='flex-box'>\n                {/* Review: Professor Name */}\n                <h5>\n                  {review.first_name} {review.last_name}\n                </h5>\n                {/* Sum of Review */}\n                <ProgressBar\n                  now={review.rating_total}\n                  label={`${review.rating_total}` + \" / 5\"}\n                  min='0'\n                  max='5'\n                  variant='info'\n                  style={{ width: \"35%\", marginTop: \"5px\" }}\n                  id='progress-bar'\n                />\n              </span>\n              {/* TODO:: date of the review */}\n              <p>{converter(review.publish_date)}</p>\n            </header>\n            {/* Professor's School At The Time Of The Review */}\n            <h6>{review.school_name}</h6>\n            {/* Professor's Review */}\n            <p>{review.recommendation_comment}</p>\n            <li>\n              <ul>Commited To Success: {review.committed_to_success_level}</ul>\n              <ul>Leadership: {review.leadership_level}</ul>\n              <ul>Responsible: {review.responsible_level}</ul>\n              <ul>Team Work: {review.team_work_level}</ul>\n            </li>\n          </div>\n        ))}\n      </div>\n    </>\n  );\n};\n\nexport default PublicStudentProfile;\n","import PORT_HOST from \"../../../config\";\nconst API_JOB_LISTING_VIEW = async (setArr, identifier) => {\n  const response = await fetch(\n    `${PORT_HOST.PORT_HOST}/full-job-view?identifier_listing_row=${identifier}`\n  );\n  const data = await response.json();\n  // console.log(data);\n  setArr(data);\n  return;\n};\nexport default API_JOB_LISTING_VIEW;\n","// React\nimport { useEffect, useState } from \"react\";\n//Cookie\nimport { useCookies } from \"react-cookie\";\n// React Boostrap\nimport Button from \"react-bootstrap/Button\";\nimport Arrow from \"../../../content/svg/arrow.svg\";\n// CSS\nimport \"../../../css/Theme.css\";\nimport \"../../../css/Profiles.css\";\n// Default Image\nimport { defaultImage } from \"../../global/DefaultImage\";\n//Import SVG Icons\nimport LocationIcon from \"../../../content/svg/location-icon.svg\";\n\nimport Popup from \"reactjs-popup\";\n\n//API\nimport API_JOB_LISTING_VIEW from \"../../../../models/GET/Jobs/job_view\";\nimport API_INSERT_STUDENT_APPLICATION from \"../../../../models/POST/Students/insert_student_apply\";\nconst JobView = ({\n  location: {\n    state: { Listing_ID },\n  },\n}) => {\n  const [dbJob, setdbJob] = useState([{}]);\n  const [cookie] = useCookies([\"Type_User\", \"ID_OF_USER\", \"First_Name\"]); //Current User\n\n  useEffect(() => {\n    async function fetchMyAPI() {\n      let response = await API_JOB_LISTING_VIEW(setdbJob, Listing_ID);\n      console.log(dbJob[0].benefits);\n    }\n\n    fetchMyAPI();\n  }, []);\n\n  const Apply_Job = async (Student_ID) => {\n    const response = await API_INSERT_STUDENT_APPLICATION({\n      student_id: ` ${Student_ID}`,\n      employer_id: `${dbJob[0].employer_id}`,\n      listing_id: `${Listing_ID}`,\n    });\n    if (response === 200) {\n      console.log(\"application success\");\n    }\n    if (response === 400) {\n      console.log(\"application error\");\n    }\n  };\n\n  return (\n    <div>\n      {/* heading */}\n      <div className=\"student-heading\">\n        {/* Back Button */}\n        <div\n          className=\"back-btn\"\n          onClick={(e) => {\n            window.location = \"/search-jobs\";\n            e.preventDefault();\n          }}\n        >\n          <img src={Arrow} alt=\"back arrow\" />\n        </div>\n        {/* creates default image if none provided */}\n        <img src={defaultImage(String(dbJob[0].organization_name))} alt={dbJob[0].organization_name} />\n        <div className=\"right\">\n          {/* Student Name */}\n          <h4>{dbJob[0].position_title}</h4>\n\n          <div className=\"flex-box\">\n            {/* Student Location */}\n            <div className=\"flex-box\">\n              <img src={LocationIcon} alt=\"location pin\" />\n              <p>{dbJob[0].location}</p>\n            </div>\n          </div>\n          <div className=\"flex-box\">\n            {cookie.Type_User != \"student\" ? (\n              <Popup trigger={<Button> Apply</Button>}>\n                <div>Log In As Student</div>\n              </Popup>\n            ) : (\n              <Button onClick={() => Apply_Job(cookie.ID_OF_USER)}>Apply</Button>\n            )}\n          </div>\n        </div>\n      </div>\n\n      <div className=\"center\">\n        {/* Top Qualities */}\n        <div className=\"student-qualities\">\n          <div className=\"flex-box\">\n            <h4>Position Details</h4>\n          </div>\n          <li>\n            <ul>{dbJob[0].job_type}</ul>\n            <ul>{dbJob[0].experience_level}</ul>\n            <ul>{dbJob[0].experience_years}</ul>\n            <ul>$ {dbJob[0].salary} / yr</ul>\n          </li>\n        </div>\n\n        {/* Company About Me */}\n        <div className=\"student-about\">\n          <div className=\"flex-box\">\n            <h4>About {dbJob[0].organization_name}</h4>\n          </div>\n          {/* About Me */}\n          <p>{dbJob[0].about_us}</p>\n        </div>\n\n        {/* Company The Opportunity */}\n        <div className=\"student-about\">\n          <div className=\"flex-box\">\n            <h4>The Opportunity</h4>\n          </div>\n          {/* About Me */}\n          <p>{dbJob[0].the_opportunity}</p>\n        </div>\n\n        <div className=\"student-about flex-box skillset-benefits\">\n          <div className=\"skillset\">\n            <h4>Skillset Needed</h4>\n            <ul>\n              {String(dbJob[0].skillset)\n                .split(\",\")\n                .map((skill) => (\n                  <li>{skill}</li>\n                ))}\n            </ul>\n          </div>\n\n          <div className=\"benefits\">\n            <h4>Our Benefits</h4>\n            <ul>\n              {String(dbJob[0].benefits)\n                .split(\",\")\n                .map((benefit) => (\n                  <li>{benefit}</li>\n                ))}\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default JobView;\n","import \"./views/css/Theme.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\n// Components\nimport Nav from \"./views/js/global/Nav\";\nimport Home from \"./views/js/home/Home\";\nimport Auth from \"./views/js/auth/Auth\";\nimport SignupRedirect from \"./views/js/auth/Redirect\";\nimport StudentSearch from \"./views/js/search/student/StudentSearch\";\nimport JobSearch from \"./views/js/search/jobs/JobSearch\";\nimport About from \"./views/js/about/About\";\nimport Help from \"./views/js/help/Help\";\nimport Notifications from \"./views/js/notifications/Notification\";\nimport MemberPage from \"./views/js/about/MemberPage\"\n//All Users\nimport Profile from \"./views/js/user/Dashboard\";\n//Employers\nimport PostJobs from \"./views/js/profiles/company/PostJobs\";\n//Full View\nimport PublicProfile from \"./views/js/search/student/PublicStudentProfile\";\nimport JobPost from \"./views/js/search/jobs/JobView\";\n// Bootstrap\nimport Alert from \"react-bootstrap/Alert\";\n\nconst App = () => {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Alert\n          variant=\"warning\"\n          style={{\n            zIndex: \"100\",\n            height: \"1.5rem\",\n            paddingTop: \"0\",\n            textAlign: \"center\",\n          }}\n        >\n          SFSU CSC648/848, Spring 2021 | <b>Demonstration Only</b>\n        </Alert>\n        <div className=\"content\">\n          <Switch>\n            <Route path=\"/signup\" component={() => <Auth type={\"signup\"} />} />\n            <Route path=\"/signin\" component={() => <Auth type={\"signin\"} />} />\n            <Route path=\"/redirect\" component={SignupRedirect} />\n            <Route component={DefaultContainer} />\n          </Switch>\n        </div>\n      </div>\n    </Router>\n  );\n};\n\nconst DefaultContainer = () => (\n  <div>\n    <Nav />\n    <Route exact path=\"/\" component={Home} />\n    {/* Search Jobs */}\n    <Route path=\"/search-jobs\" component={JobSearch} />\n    {/* Search Students */}\n    <Route path=\"/search-candidates\" component={StudentSearch} />\n    {/* Public Profiles */}\n    <Route path=\"/profiles/:account\" component={PublicProfile} />\n    {/* About */}\n    <Route exact path=\"/about\" component={About} />\n    {/* Contact / Help */}\n    <Route path=\"/help\" component={Help} />\n    {/** Full Job View */}\n    <Route path=\"/postings/:posting\" component={JobPost} />\n    {/* Allows Company to Post Jobs */}\n    <Route path=\"/postjobs\" component={PostJobs} />\n    {/* Profile for User Logged In */}\n    <Route path=\"/profile\" component={Profile} />\n    {/* Notifications */}\n    <Route path=\"/notifications\" component={Notifications} />\n    {/* MemberPage */}\n    <Route path=\"/about/member/:username\" component={MemberPage} />\n  </div>\n);\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport reportWebVitals from \"./reportWebVitals\";\n// React Bootstrap\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n// Routes\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}